{"items":[{"id":3,"title":"Authentication","content":" hljs.highlightAll(); About Me Authentication IntroductionAuthentication in API is a way to make sure user from client side has authorization from server side.Why?With authentication, only authorized users are able to access sensitive information or perform actions that could affect the system or its users.How?StructureGiven we have the concept of HTTP, client sent requests to server with key information in headers, including Authorization with form such asAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==Basic means the method of authentication and QWxhZGRpbjpvcGVuIHNlc2FtZQ== is encoded on client side and going to be decoded on server side to check authorization.BasicFor example, given username = Aladdin and password = open sesame, the encoding of Aladdin:open sesame in Base64 is YWxpY2U6c3VwZXJtYW4= and client will send request with authorization in header:Authorization: Basic YWxpY2U6c3VwZXJtYW4=Then server will decode it in Base64 and match the username and password stored in server. If the result did not match, the example response:HTTP/1.1 401 UnauthorizedDate: Wed, 21 Oct 2015 07:28:00 GMTWWW-Authenticate: Basic realm=\"Access to staging site\" pros cons no session expiration mechanism, meaning once login, login in until browser cookie expires. easy algorithm to hack Replay attack (TBC) digestto be continuedOAuthto be continuedBearerto be continuedJWTJSON Web Tokens (JWT) are a compact, URL-safe means of representing claims to be transferred between two parties. JWT is often used to authenticate users and pass information about them between systems, especially in stateless systems like single-page applications and RESTful APIs.The steps of JWT: Claims: JWT consists of a set of claims encoded as a JSON object. These claims can include information about the user, such as the user’s name, ID, and roles. Encoding: The JSON object is then Base64Url encoded to produce a compact string, which is the JWT. Signature: To ensure that the information in the JWT has not been tampered with, a signature is generated using a secret key shared between the parties. The signature is calculated over the encoded JWT and is appended to it, separated by a period. Transmission: The JWT is then sent from the client to the server in the Authorization header of an HTTP request, usually as a Bearer Token. Verification: On the server, the signature is verified using the shared secret key, and if the signature is valid, the information in the JWT is trusted and can be used to perform authorized actions.In conclusion, JWT is a secure and efficient way of transmitting information between parties. The compact format and digital signature of JWT make it an ideal choice for authentication and authorization in modern web applications.What?JWT in JSconst jwt = require('jsonwebtoken');const SECRET_KEY = 'secret_key';// Generate a JWTconst token = jwt.sign({ id: 123, name: 'John Doe' }, SECRET_KEY, { expiresIn: '1h'});// Verify a JWTconst decoded = jwt.verify(token, SECRET_KEY);console.log(decoded); // { id: 123, name: 'John Doe', iat: 1547451138, exp: 1547454738 } we can generate SECRET_KEY with cryptoconst crypto = require('crypto')const key = crypto.randomBytes(32).toString('hex') // secret keyReference開發者必備知識 - HTTP認證（HTTP Authentication） /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/api/2022/08/17/authentication.html"},{"id":2,"title":"Jenkins Api","content":" hljs.highlightAll(); About Me Jenkins Api IntroductionThis article describes how to CRUD of JenkinsWhy?I want to use Jenkins to run testsHow?installstart jenkinsci/blueocean withdocker run \\ --rm \\ -u root \\ -p 8080:8080 \\ -v jenkins-data:/var/jenkins_home \\ -v /var/run/docker.sock:/var/run/docker.sock \\ -v \"$HOME\":/home \\ jenkinsci/blueoceanthen start http://localhost:8080 on browser and then follow the steps to install itcreate userJust follow the steps in localhost get token:on dashboard -> Manage Jenkins -> Manage Users -> select user -> Add new tokenCreate JobI tried to find whether there is api for yaml or DSL but it seems only can create it with xml. To create job on UI, please follow How to Create a New Build Job in Jenkins Freestyle Project.steps create empty job on UI retrieve config.xml from this job post new job with that config.xml update the build in the job with DSL apiimplementation(1) create empty job on UIOn http://localhost:8080/, press new item(2) retrieve config.xml from this jobThere are two ways to create job: through xml through dsland test it on Postmanxmlconst request = require('request');const configXml = '<project><builders/><publishers/><buildWrappers/></project>';const options = { method: 'POST', url: 'http://<Jenkins_URL>/createItem?name=<job_name>', auth: { user: 'username', pass: 'api_token' }, headers: { 'Content-Type': 'application/xml' }, body: configXml};request(options, (error, response, body) => { if (error) { console.error(error); return; } console.log(`Status code: ${response.statusCode}`); console.log(body);});dslconst request = require('request');const jobDsl = { \"freeStyleJob\": { \"name\": \"example-job\", \"scm\": { \"git\": { \"url\": \"https://github.com/example/example-repo.git\" } }, \"triggers\": { \"timer\": \"H/15 * * * *\" } }};const options = { method: 'POST', url: 'http://<Jenkins_URL>/job/<job_name>/job-dsl', auth: { user: 'username', pass: 'api_token' }, headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(jobDsl)};request(options, (error, response, body) => { if (error) { console.error(error); return; } console.log(`Status code: ${response.statusCode}`); console.log(body);});What?give an exampleOtherTODO: try it in the future. The problem is I cannot create job through JSON with its API.const axios = require('axios');const jenkinsCreateJob = require('../services/jenkinsCreateJob.js')module.exports = (app) => { app.post('/addTask', async (req, res) => { // post a job with config.xml // update build with DSL }) app.post('/createJob', async (req, res) => { // create (this should be only create job and should add another api to update DSL) const pipeline = '' forCrumb = await axios.get(`http://${process.env.JENKINS_USER}:${process.env.JENKINS_PASSWORD}@localhost:8080/crumbIssuer/api/json`) axios({ method: 'post', url: `http://${process.env.JENKINS_USER}:${process.env.JENKINS_TOKEN}@localhost:8080/createItem?name=test1`, data: JSON.stringify(pipeline), headers: { [forCrumb['data']['crumbRequestField']]: forCrumb['data']['crumb'], 'Content-Type': 'application/json' } }).then((response) => { console.log('success') res.send(response) res.end() }) .catch((response) => { console.log('error') res.send(response) res.end() }); }) app.post('/addBuildDSL', async (req, res) => { const pipeline = jenkinsCreateJob forCrumb = await axios.get(`http://${process.env.JENKINS_USER}:${process.env.JENKINS_PASSWORD}@localhost:8080/crumbIssuer/api/json`) axios({ method: 'post', url: `http://${process.env.JENKINS_USER}:${process.env.JENKINS_TOKEN}@localhost:8080/job/test/job-dsl`, data: JSON.stringify(pipeline), headers: { [forCrumb['data']['crumbRequestField']]: forCrumb['data']['crumb'], 'Content-Type': 'application/json' } }).then((response) => { console.log('success') res.send(response) res.end() }) .catch((response) => { console.log('error') res.send(response) res.end() }); }) app.get('/jobs', async (req, res) => { // read jobs const response = await axios.get(`http://${process.env.JENKINS_USER}:${process.env.JENKINS_PASSWORD}@localhost:8080/api/json`); const jobs = response.data.jobs; res.send(jobs) res.end() }) app.get('/jobConfig', async (req, res) => { const config = axios.get(`http://${process.env.JENKINS_USER}:${process.env.JENKINS_PASSWORD}@localhost:8080/job/${req.query.job}/config.xml`) res.send(config) res.end() }) app.get('/', () => { // read one job })}Reference使用npm构建Node.js和React应用how to trigger jenkins job via curl command remotelyJenkinsHow to Create a New Build Job in Jenkins Freestyle ProjectJenkins: 403 No valid crumb was included in the requestHow to create a job using the REST API and cURL? /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/api/2022/09/12/jenkins-api.html"},{"id":10,"title":"Array","content":" MathJax.Hub.Config({ TeX: { equationNumbers: { autoNumber: \"AMS\" } } }); const config = { theme: 'neutral', startOnLoad:true, htmlLabels:true, }; mermaid.initialize(config); hljs.highlightAll(); About Me Array IntroductionThis article describes how to solve problems related to array. Example: [1, 2, 3, 4] Data: A collection of elements of the same data type, arranged in a contiguous block of memory Algorithm: Create an element: O(1) to O(N) Inserting an element at the end of an array has \\(O(1)\\) but may be \\(O(N)\\) if we need to resize the array Inserting an element at the beginning of an array has \\(O(N)\\) because we need to shift all the elements Read an element: O(1) Given an index i, the read operation in an ArrayList retrieves the element at that index in constant time, regardless of the size of the ArrayList. Linear search has \\(O(N)\\) because it needs to search the value from beginning Update an element: O(1) Given an index i and a new value v, the update operation in an ArrayList replaces the element at index i with the new value v in constant time, regardless of the size of the ArrayList. Delete an element: O(1) to O(N) In the worst case, where n is the number of elements in the ArrayList because deleting an element requires shifting all subsequent elements one position to the left to fill the gap left by the deleted element. Deleting the last element in an ArrayList has a time complexity of O(1) on average because it can be done by simply updating the size of the ArrayList Why? Most fundamental and widely used data structures Efficient storage and retrieval: Arrays provide constant-time access to individual elements, making them ideal for storing and retrieving large amounts of data quickly and efficiently. Simple implementation: Arrays are simple to implement and understand, making them an ideal starting point for learning data structures and algorithms. Versatility: Arrays can be used to implement many other data structures and algorithms, such as stacks, queues, and hash tables. Efficiency: In many cases, arrays can be faster and more memory-efficient than other data structures, such as linked lists or trees, for certain operations. Widely used: Arrays are used extensively in programming and computer science, so a strong understanding of how they work is essential for many fields within computer science, such as data science, artificial intelligence, and software development.How?Because the algorithm of string is just like array, so I will put string algorithm in array.Is Unique (string)BUD Question: Implement an algorithm to determine if a string has all unique characters Brute force:s = 'example'function charactersIsUnique(s) { if(typeof s != 'string') { return 'type error'; } for (var i = 0; i < s.length; i++) { for (var j = 0; j < s.length; i++) { if (s[i] == s[j]) { return 'not unique' } else { continue; } } } return 'unique'}charactersIsUnique(s)The above code is brute force solution with edge case considered. The time complexity = \\(O(N^2)\\) unncessary work: actually, for any character, we only need to compare the characters on their right-hand side, so we can rewrite it as follow:s = 'example'function charactersIsUnique(s) { if(typeof s != 'string') { return 'type error' } for (var i = 0; i < s.length; i++) { for (var j = i+1; j < s.length; i++) { if (s[i] == s[j]) { return 'not unique' } else { continue; } } } return 'unique'}charactersIsUnique(s)Then the number of times will be \\(N + (N-1) + ... + 1 = N(1+N)/2\\); however, the time complexity is still \\(O(N^2)\\) Bottleneck: the place with highest time complexity is the nested for loops, so we should try to use only one for loop. What we can do here is use a hash as follow:string = 'example'function charactersIsUnique(s) { object = {} if(typeof s != 'string') { return 'wrong type' } for (var i = 0; i < s.length; i++) { if(object.hasOwnProperty(s[i])) { return 'not unique' } else { object[s[i]] = 1 } } return 'unique'}charactersIsUnique(s)Then the time complexity reduces to \\(O(N)\\)real world exampleLet’s say we have a stack of test papers and teacher wants to find the students with same name to make sure there is no mistake when we record the scores. What the teacher may do are take notes of all the names walked through and check it first every next student comes (like the example above) sort the papers with the order of names and it is easy to find out duplicate names. (check the sorting section) But actually there is no sorting method lower or equal to O(N)general solutionI think the solution above is general enoughstack upIs there a recursive solution? seems notbest time complexityWe at least need to walk through all letters, so it is at least O(N). And we actually only need to walk through once.Testdescribe('Is Unique', () => { describe('s = example', () => { let s = 'example' expect(charactersIsUnique(s)).toEql(false) }) describe('s = fast', () => { let s = 'fast' expect(charactersIsUnique(s)).toEql(true) })})Check Permutation (String) Question: Given two strings, write a method to decide if one is a permutation of the other. Brute force: function checkPermutation(string1, string2) { for (var i = 0; i < string1.length; i++) { target = string1[i] for (var i = 0; i < string2.length; i++) { if (string2[i] == target) { remove string2[i] from string2 } } } if len(string2[i]) == 0 { return true } else { return false }} Unnecessary work: none Bottleneck: the place with highest complexity is the nested for loop. To solve it, my first though is hash table function checkPermutation(string1, string2) { hash_table = {} for (var i = 0; i < string1.length; i++) { if hash_table[string[i]] = null { hash_table[string[i]] = 1 } else { hash_table[string[i]] += 1 } } for (var i = 0; i < string2.length; i++) { hash_table[string[i]] -= 1 } if hash_table.values = 0 { return true } else { return false }} Given the length of string1 is A and length of string2 is B, the complexity is \\(O(A+B)\\). We also can sort them first and compare the first n elements of characters. Duplicate Work: none Real world example: none More general solution: none Best time complexity: We need to at least check all the letters, so the best time complexity is \\(O(A+B)\\) Stack up: none Test checkPermutation = require('../examples/check_permutation.js')describe('checkPermutation', () => { test('s1 = wqer, s2 = rewq', () => { expect(checkPermutation('wqer', 'rewq')).toEqual(true) }) test('s1 = asfd, s2 = rewq', () => { expect(checkPermutation('asdf', 'rewq')).toEqual(false) })}) result function checkPermutation(string1, string2) { const hash_table = {} for (let i = 0; i < string1.length; i++) { if(hash_table[string1[i]] = null) { hash_table[string1[i]] = 1 } else { hash_table[string1[i]] += 1 } } for (let i = 0; i < string2.length; i++) { hash_table[string2[i]] -= 1 } return Object.values(hash_table).every(element => element === 0)} URLify(to be continued) Question: Write a method to replace all spaces in a string with ‘%20’. You may assume that the string has sufficient space at the end to hold the additional characters,and that you are given the “true” length of the string. brute force: (I know there is more inefficient solutions)function URLify(string, length) { for (var i = 0; i < string.length; i++) { numberOfNotSpace = 0 if (string[i] != ' ') { numberOfNotSpace += 1 } } numberOfInsertion = (length - numberOfNotSpace)/3 for (var i = 0; i < string.length; i++) { if numberOfInsertion == 0 { break } result = '' if (string[i] != ' ') { result += string[i] } else { result += '%20' numberOfInsertion -= 1 } }}The time complexity = \\(O(N + N)\\) = \\(O(N)\\) unnecessary work: On higher point of view, the loop to calculate numberOfNotSpace must be more unnecessary and the truth is we only need to break the loop if the loop meets space twice as follow:function URLify(string, length) { lastLetter = '' for (var i = 0; i < string.length; i++) { lastLetter = string[i] result = '' if (string[i] != ' ') { result += string[i] } else { result += '%20' if lasterLetter == '' { break } } }}Then the time complexity = \\(O(N)\\).Palindrome Permutation(to be continued) Question: Given a string, write a function to check if it is a permutation of a palin­ drome. A palindrome is a word or phrase that is the same forwards and backwards. A permutation is a rearrangement of letters. The palindrome does not need to be limited to just dictionary words. brute force:function Palindrome(string) { diatonic = '' for (var i = 0; i < string.length; i++) { if (string[i] != ' ') { diatonic += string[i].lowercase } } chromatic = '' for (var i = array.length; i--;) { if (string[i] != ' ') { chromatic += string[i].lowercase } } if diatonic == chromatic { return true } else { return false }}The time complexity = \\(O(N + N)\\) = \\(O(N)\\) unnecessary work: actually, if it is Palindrome, then the first half of the first loop is just like the last half of the second loop, so we may can optimize it withfunction Palindrome(string) { for (var i = 0; i < string.length; i++) { if (string[i] == ' ') { continue } elsif (string[i] == string[-i]) { // the correct way to call string[-i] is string.charAt(string.length - (i+1)) continue } else { return false } }}Then the time complexity = \\(O(N)\\). We can also try to break it at the point of middle, then the time complexity = \\(O(N/2)\\)TODO string reversing a string string is a palindrome longest common prefix array finding the maximum subarray binary search sorting an array merge sort quick sort What?Real-world problem that uses an array data structure and algorithm I want to create a search bar to search keyword on my website I need to use array to store the posts const posts = [ { title: \"My first post\", content: \"This is my first post on the platform!\", author: \"Alice\" }, { title: \"Cool photo\", content: \"Check out this cool photo I took on my vacation.\", author: \"Bob\" }, { title: \"Important announcement\", content: \"We have an important announcement to make...\", author: \"Admin\" }]; Implement the search function function searchPosts(keyword) { const results = []; for (let i = 0; i < posts.length; i++) { const post = posts[i]; if (post.title.includes(keyword) || post.content.includes(keyword)) { results.push(post); } } return results;}const results = searchPosts(\"vacation\");console.log(results); Referencecracking the coding interview /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/dsa/2022/05/22/array.html"},{"id":12,"title":"Data Structure And Algorithm","content":" MathJax.Hub.Config({ TeX: { equationNumbers: { autoNumber: \"AMS\" } } }); const config = { theme: 'neutral', startOnLoad:true, htmlLabels:true, }; mermaid.initialize(config); hljs.highlightAll(); About Me Data Structure And Algorithm IntroductionBefore we dive into it, please understand concept of complexity. Data structures describe how data can be organized, stored, and manipulated. Algorithms are procedures for solving problems such as searching for information, sorting data, processing graphs, performing calculations, and many other tasks.WhyTo solve problem in a more efficient way, making no more space to improve both the time complexity and space complexity. For more information, please refer to problem solvingHowWe can decompose all the programming logics into four actions: create, read, update, delete. The time complexity of CRUD an element in specific data structure is as follow:   Create Read Update Delete array list O(1) - O(n) O(1) O(1) O(1) - O(n) linked list O(1) O(n) O(n) O(n) stack O(1) O(1) O(1) O(1) queue O(1) O(1) O(n) O(1) trees         graph         index starts from 0: By using zero-based indexing, the calculation of the memory address of an element is simplified. The address of the first element in the array is simply the starting address of the array, with no offset required. The address of the second element is the starting address plus the size of one element, the address of the third element is the starting address plus the size of two elements, and so on. This simple arithmetic works nicely with the way memory is allocated and addresses are calculated.ArrayIt is a data structure in programming that stores a collection of elements. These elements are stored in contiguous memory locations, and each element can be accessed using an index or a subscript. Please refer to array for more information.LinkedlistA linked list is a linear data structure where elements are stored in a sequence, and each element is linked to its next element using pointers or references. It consists of a series of nodes, where each node contains a data element and a reference to the next node in the sequence. For more information, please refer to linkedlistStackstackqueuequeuetreeA tree is a hierarchical data structure with nodes connected by edges, and a single root node at the top. It is used in computer science to represent data with a hierarchical structure, and various algorithms have been developed to manipulate and process tree structures efficiently. For more information, please refer to treegraphsgraphtriesto be continued (extract)hash tableto be continued (extract)The data flow:graph LR id1(value 1) --> id4(hashfunction) id2(value 2) --> id4(hashfunction) id3(value 3) --> id4(hashfunction) id4(hashfunction) -- insert value 1 --> id5(key 0) id4(hashfunction) -- insert value 2 --> id7(key 1) id4(hashfunction) -- insert value 3 --> id7(key 2) subgraph Buckets id5(key 0) id6(key 1) id7(key 2) id8(key 3) ... end id5(key 0) --> id9(value 1) id7(key 2) --> id10(value 2) id10(value 2) --> id11(value 3)The value will be calculated by certain method in hash function to get the key of buckets and then connects the value with linked list if the mapping key is the same.Given the length of buckets is N, meaning there are N keys, if we want to search an element, it will first pass the element into hash function to get the key for certain linked list and then search through the linked list.The time complexity = \\(O(A + B)\\), where A is the length of bucket and B is the length of linked list. A is actually 1 because the magic of hash function and B is usually close to 1 if we making the collisions, meaning values map to same key, as low as possible. As a result, the time complexity is actually \\(O(1)\\)dynamic programmingdynamic programmingsortingsortingwhatTry to give real world exampleTODO key concepts (according to cracking the coding interview) bit Manipulation memory (stack vs. heap) referencecracking the coding interviewThe top data structures you should know for your next coding interview /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/dsa/2021/11/25/data-structure-and-algorithm.html"},{"id":17,"title":"How OS Works","content":" hljs.highlightAll(); About Me How OS Works IntroductionOperating System serves as the communicator between computer hardware and computer software applications. const id = 'os' let binarySearchTree = p5Draw(id) let binarySearchTreeP5 = new p5(binarySearchTree, id);Why?Without it, the computer will not operate the Apps we want.How?Typically, functions as follow: memory management process management device management file management security performance monitoring job accounting error detecting aids coordination between other software and usersmemory managementGiven processes in a computer, memory management checks how much memory to be allocated, what time to allocate the memory, and update the status of memory once some memory gets freed or unallocated.device managementIn order to handle physical and virtual devices, device controller born in OS. Physical device includes all Input/Output devices and virtual devices mimics physical device in software, serving as device in system, making system to believe a particular hardware exists.file managementRecorded on secondary or non-volatile storage such as optical disks and used as medium for input and output of data.securityTo prevent threats and attacks, several ways: regular OS patch updates, antivirus engines and software, firewall, stratification of authorization.performance monitoringTo optimize the OS, we need logs from performance monitoring for further optimization.job accountingFor tracking the time and resources used by various jobs and users.error detectingGiven noise in transmission of data, error detecting ensures reliable delivery of data by patching the data on time.coordinationGiven lots of program at the sametime, OS corrdination serves to schedule these programs.What?In this section, let’s take a look at the above functions in operating systems and explore them with following steps: user click an app on the computer UI the app start to run and it need some computation the data flow to operation system operation system call hardware (CPU, RAM, I/O) to compute it data sent back to OS OS send data back to app user get what they want in UIMac OS(to be continued)ReferenceOperating systemos_overviewOperating System - Memory ManagementDevice Management in Operating Systemile Systems in Operating System: Structure, Attributes, TypesWhat Does Operating System Security (OS Security) Mean?Operating System and Process Monitoring ToolsJob accounting keeping track of time and resourcesError detection and correction /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/os/2021/12/04/how-os-works.html"},{"id":4,"title":"Json Api","content":" hljs.highlightAll(); About Me Json Api IntroductionJson api defines the language to communicate between client side and server side. Given we know concept of CRUD on server side, the way json api to tell server what to do in client sideWhy?focus on why we need itHow?Suppose we have table, users and posts with structure:User( id: integer, name: string, email: string,)andPOST( id: integer, title: string, article: varchar, user_id: integer,)CreatePOST /posts{ \"data\": { \"type\": \"posts\", \"attributes\": { \"title\": \"test_title\", \"article\": \"test article\" }, \"relationships\": { \"user\": { \"data\": { \"type\": \"users\", \"id\": 2 } } } }}and the response from server:{ \"data\": { \"type\": \"posts\", \"id\": 442, \"attributes\": { \"title\": \"test_title\", \"article\": \"test article\", }, \"links\": { \"self\": \"https://test.example.com/posts/442\" } }}ReadGET /posts{ \"data\": [ { \"type\": \"posts\", \"id\": 442, \"attributes\": { \"title\": \"test_title\", \"article\": \"test article\", \"created\": \"20xx-mm-dd\" } \"relationships\": { \"user\": { \"data\": { \"type\": \"users\", \"id\": 2, } } } }, ... // other data like above ]}GET /posts?include=user{ \"data\": [ { \"type\": \"posts\", \"id\": 442, \"attributes\": { \"title\": \"test_title\", \"article\": \"test article\", \"created\": \"20xx-mm-dd\" }, \"relationships\": { \"user\": { \"data\": { \"type\": \"users\", \"id\": 2, } } } }, ... // other data like the first element of this array ], \"included\": [ { \"type\": \"users\", \"id\": 2, \"attributes\": { \"name\": \"test_name\", \"email\": \"test@example.com\" } }, ... // other data like the first element of this array ]}GET /posts?include=user&fields[users]=name{ \"data\": [ { \"type\": \"posts\", \"id\": 442, \"attributes\": { \"title\": \"test_title\", \"article\": \"test article\", \"created\": \"20xx-mm-dd\" }, \"relationships\": { \"user\": { \"data\": { \"type\": \"users\", \"id\": 2, } } } }, ... // other data like the first element of this array ], \"included\": [ { \"type\": \"users\", \"id\": 2, \"attributes\": { \"name\": \"test_name\", } }, ... // other data like the first element of this array ]}GET /posts/442{ \"data\": { \"type\": \"posts\", \"id\": 442, \"attributes\": { \"title\": \"test_title\", \"article\": \"test article\", \"created\": \"20xx-mm-dd\" }, \"relationships\": { \"user\": { \"data\": { \"type\": \"users\", \"id\": 2, } } } }}UpdatePATCH /posts/2{ \"data\": { \"type\": \"posts\", \"id\": 442, \"attributes\": { \"title\": \"new_title\", }, }}DeleteDELETE /posts/2No request body requiredWhat?TBCReferenceJSON API: Explained in 4 minutes (+ EXAMPLES) /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/api/2022/08/16/json-api.html"},{"id":0,"title":"Circleci Api","content":" hljs.highlightAll(); About Me Circleci Api Introductionquick explanationWhy?focus on why we need itHow?create userinitCRUD of jobWhat?give an exampletestReference /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/api/2023/01/26/circleCI-api.html"},{"id":1,"title":"Restful","content":" hljs.highlightAll(); About Me Restful Introductionquick explanationWhy?focus on why we need itHow?REST means REpresentational State Transfer. Any style satisfying these features: Client–server architecture Statelessness Cache-ability Layered System Code on demand (optional) Uniform InterfaceClient–server architectureThis architecture applies separation of concerns (SoC), meaning separating user interface and data storage to improve the portability of user interface across multiple platforms and the scalability of server and allows them to evolve independently.StatelessnessThe current state is unrelated to last state; for example, if I want to read a news from yahoo news, I can either go to the yahoo main page and then click the news page or directly input the news page url in my browsers, which means that I do not have to go to news page through main page. The current state, news page, is unrelated to the last state, main page.Cache-abilityCache is to store required data in a user’s computer, so this user do not need to wait reloading next time using this website.Layered SystemLayer means the system has multiple layers, many intermediary servers. Intermediary servers can improve system scalability by load balancing and shared caches. Intermediary servers can also improve security by adding mechanism in it. Intermediary servers can call multiple servers to generate response to a client.Code on demand (optional)Uniform Interface Resource identification in requests: the resources are separated from the representation; for example, user may view a html template but the server side may send a json file. Resource manipulation through representations: users manipulate data with html webpage rather than data changing directly to server. Self-descriptive messages: the client can decide how to parse the resources them read from representation, meaning there is already ‘enough’ information to do so. Hypermedia as the engine of application state: After the users enter an initial URL, then they should be able to discover all the available resources they need dynamically.What?give an exampletestReference /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/api/2023/01/22/restful.html"},{"id":7,"title":"Cascading Style Sheets","content":" hljs.highlightAll(); About Me Cascading Style Sheets IntroductionThis article describes the concept of CSS, Cascading Style Sheets. It is a style sheet language to describe the presentation of a document written in a markup language. All visual control in website can be achieved with CSS.WhyThe evolution: Directly write the style we want into HTML markups -> Use markup, <style> and there are three grammars: selector, property, value -> Write a CSS file independentlyHowFor example, if we want the color of a <p> to be green, then<p style=\"color:green;\"> </p>However, if we want multiple <p> to be green, then we have to specify style in every <p>. We can use markup, <style> to collect all the style settings such as<style> p { color: green; } </style>The effect:sizeThe total width of a component:...<style> div { background-color: #aaa; width: 300px; }</style>...<div>情節網路制度首頁辛苦歡迎您還沒，豪華投訴才會兩個台北新聞高級足球實施業績成就為你老婆好像，轉帖先進。</div>The effect: (the width is 300px)Concept of font size:<style> div { font-size: 40px; }</style>spacing Margins control the space between an element and its neighbors Padding controls the space within an element Borders are used to define the edges of an elementmargin...<style> div { background-color: #aaa; width: 300px; border: 10px solid #666; }</style>...<p>情節網路制度首頁辛苦歡迎您還沒，豪華投訴才會兩個台北新聞高級足球實施業績成就為你老婆好像，轉帖先進。</p><p>情節網路制度首頁辛苦歡迎您還沒，豪華投訴才會兩個台北新聞高級足球實施業績成就為你老婆好像，轉帖先進。</p>There will be margin between the paragraphsborderAdding border: 10px solid #666; into the code above...<style> div { background-color: #aaa; width: 300px; border: 10px solid #666; }</style>...<div>情節網路制度首頁辛苦歡迎您還沒，豪華投訴才會兩個台北新聞高級足球實施業績成就為你老婆好像，轉帖先進。</div>The effect: (the width of the layout is 320px (width + border)) concept of border radiusThe rounded border, with react, with rounded-sm<button onClick={setModalOpen} className=\"bg-white absolute top-4 right-4 rounded-sm p-2\">Create Task</button>the layout:paddingAdding padding: 10px;into the code above as follow... <style> div { background-color: #aaa; width: 300px; border: 10px solid #666; padding: 10px; }</style> ...<div>情節網路制度首頁辛苦歡迎您還沒，豪華投訴才會兩個台北新聞高級足球實施業績成就為你老婆好像，轉帖先進。</div>The layout: (the width of the layout is 340px (width + border + padding))floatWith float style, an object can float on other objects, looks like it cover other object in web browsers; for example,<style> .img-float{ float:left }</style> ...<img src=\"[http://fakeimg.pl/350x200](http://fakeimg.pl/350x200)\" alt=\"\"><p>Lorem ipsum dolor sit amet, consectetur adipisicing, elit. Ullam quae magni, iste nam ratione doloribus corporis accusamus reiciendis neque dolore qui pariatur atque tenetur facere soluta adipisci, porro odit, aut.</p>The layout:DisplayWe can categorize the objects in html into inline and block. The easiest way to distinguish the difference is that one block will fill all the horizontal area while inline would not. block markups: div、p、ul、li inline markups: span、a、input、img、emWe can use display style to specify the display display:inline can force objects to be displayed inline... <h1>block with h1</h1> <p>block with p</p>... display:block: TBC display:inline-block: TBC display:flex can let the objects in this object to be displayed flexiblyFor example,<div class=\"warp\"> <div class=\"item\"> lorem </div> <div class=\"item\"> lorem </div> <div class=\"item\"> lorem </div></div>....warp { width: 960px; margin: auto; background: #ccc; display: flex; } .item { width: 300px; margin: 0 10px 10px; background-color: #ffa; }Then the layout:After adding display:flex, the layout:You may think that the width of each item equals to 320px, which is width + margin*2 so the 3 items perfectly fit into the wrap. However, if we add two more items into the wrap as follow:<div class=\"warp\"> <div class=\"item\">lorem</div> <div class=\"item\">lorem</div> <div class=\"item\">lorem</div> <div class=\"item\">lorem</div> <div class=\"item\">lorem</div></div>The layout:meaning it does not matter how you setup the width of the item in the wrap once you have flex in the CSS. display:none can hidden the htmlflex vs inlineTBC, should be extract to another articlePositionSuppose we add a block with <div> with following CSS setting:.whatever{ width: 200px; height: 100px; background-color: #aaa;}The layout:if we add position: fix to the CSS setting, then the layout would beWith position: fix, the object will be rendered on upper layer.Difference between fix and float: fix fix on the exact position in the screen even you scroll the website.We can specify the position with top, left, right, bottom:.whatever { width: 200px; height: 100px; background-color: #aaa; position: fixed; top: 0; left: 0;}If we want it to be in the center, the CSS would be.whatever{ width: 200px; height: 100px; background-color: #aaa; position: fixed; top: 0; left: 0; bottom: 0; right: 0; margin: auto;}Color/* Named color */div { background-color: red;}/* Hexadecimal value */p { background-color: #00FF00;}/* RGB value */h1 { background-color: rgb(255, 0, 255);}/* RGBA value */span { background-color: rgba(0, 0, 255, 0.3);}/* HSL value */a { background-color: hsl(120, 100%, 50%);}/* HSLA value */li { background-color: hsla(240, 100%, 50%, 0.5);}Responsive Web DesignAllows web pages to adjust their layout and content based on the size of the screen they are being viewed on.plain CSSto be continuedtailwindWe can change the layout based on the width of screen<div class=\"p-16 prose prose-indigo\"> ... <div class=\"px-4 md:grid lg:px-72\"> # content </div></div>Condition To apply styles to all elements except (i.e., anchor elements that contain only an image), we can use the :not() and :only-child pseudo-classes together. a:not(:only-child):not(.no-style) { /* Your styles here */} TailwindIn Tailwind, you can remove a CSS style from an <a> element that is defined in the main.css file and imported through a link tag in the head of your HTML document using the !important keyword to override the existing style. For example,.my-link { color: blue; text-decoration: none;}and override them with !<a class=\"my-link text-blue-500 underline !text-decoration-none !hover:text-blue-700\"> My link</a>WhatReference金魚都能懂的網頁設計入門 - 金魚都能懂了你還怕學不會嗎 :: 2019 iT 邦幫忙鐵人賽CSS - Wikipedia /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/css/2022/10/15/cascading-style-sheets.html"},{"id":8,"title":"Solve Problem","content":" MathJax.Hub.Config({ TeX: { equationNumbers: { autoNumber: \"AMS\" } } }); hljs.highlightAll(); About Me Solve Problem IntroductionThis article describes how to solve problems related to data structure and alogrithm.Why?To pass coding interviewHow? Read or listen to the question and ask all the necessary informations, use as little hint as possible Brainstorm to think about all the cases, including edge case Come up with a brute force solution and write it on paper Optimize the brute force on paper Think about bottleneck, Unnecessary work, Duplicated work Just think of the real world example Start from the simplest form and then stack up Fit the problem into a specific data structure and use the related knowledge Try to find more general solution Try to figure out the best time complexity first Walk through the idea again on paper Start to write code as clean as possible on computer Write tests with general, base, error casesFor example, print all positive integer solutions to the equation \\(a^3 + b^3 = c^3 + d^3\\) where a, b, c, and d are integers between 1 and 1000.on paperSomething like thisbrute forceresult = []for (a in [1..1000]) { for (b in [1..1000]) { for (c in [1..1000]) { for (d in [1..1000]) { if (a^3 + b^3 = c^3 + d^3) { result.append([a, b, c, d]) } } } }}The time complexity is \\(O(N^4)\\)BUD (Bottlenecks, Unnecessary work, Duplicated work) unnecessary workWe should always observe any unnecessary work first because it is truly not part of the problem we are going to solve. In the brute force above the loop in d is an unnecessary work and should be remove as follow:result = []for (a in [1..1000]) { for (b in [1..1000]) { for (c in [1..1000]) { d = (a^3 + b^3 - c^3)^(1/3) if (a^3 + b^3 = c^3 + d^3) { result.append([a, b, c, d]) } } }}Then the time complexity will decrease to \\(O(N^3)\\) BottlenecksThen we start to solve the problem. When we talk about bottleneck, it means the place having the highest time complexity. To solve it, we usually have two approaches: cost some space or sort it.The easiest way to use space for solving problem is the concept of hash table. We can store the data in the upper loops and use this data in the later loop. For example, we can decrease the time complexity with following approach:result = []hash_table = {}for (a in [1..1000]) { for (b in [1..1000]) { hash_table[a^3 + b^3] << [a, b] }}for (c in [1..1000]) { for (d in [1..1000]) { if (c^3 + d^3 exist in hash_table) { result.append([hash_table[c^3 + d^3], [c, d]]) } }}Given a, b, c, d will all loop through 1 to 1000, the time complexity = \\(O(2N^2) = O(N^2)\\) Duplicated workAlthough the complexity is already in \\(O(N^2)\\); however, it is actually \\(O(2N^2)\\) and the first nested for loops are the same as the second nested for loops, which is duplicated work. We can simplify it further withresult = []hash_table = {}for (a in [1..1000]) { for (b in [1..1000]) { hash_table[a^3 + b^3] << [a, b] }}for element in hash_table { if (count(element) > 1) { result << select(element, 2) // select two out of this element }}Then the time complexity = \\(O(N^2 + AB)\\), where A is the number of elements in hash table and B is the number of items in each element, meaning \\(A, B < N\\). Then time complexity = \\(O(N^2)\\)just think of the real world exampleAgain, we use the problems, finding all a, b, c, d, which \\(a^3 + b^3 = c^3 + d^3\\). If we need to do it by brain, then what should we do to find the result quickly?We will write down the result of \\(a^3 + b^3\\) from 1 to 1000 and then find the pair of (c, d) to map (a, b) and this is the concept of hash table.try to find more general solutionMore generalfunction a_b_c_d(k) { result = [] hash_table = {} for (a in [1..k]) { for (b in [1..k]) { hash_table[a^3 + b^3] << [a, b] } } for (c in [1..k]) { for (d in [1..k]) { if (c^3 + d^3 exist in hash_table) { result.append([hash_table[c^3 + d^3], [c, d]]) } } }} Then we can input any positive integerfigure out the best time complexity firstWe can start from the big picture by calculating the best time complexity first; for example, in the problem of \\(a^3 + b^3 = c^3 + d^3\\), we know that we must at least know the result of \\(a^3 + b^3\\), so the best time complexity will be \\(O(N^2)\\) and once we find out an algorithm with \\(O(N^2)\\), we can wrap up.Start from Simplest Form and Stack UpUsually, this approach will lead to a recursive solution. example: Design an algorithm to print all permutations of a string. For simplicity, assume all characters are unique. brute force:string = 'abcdefg' // all characters are uniqueresult = []length = len(string)targets = []for (i in length) { targets << string[0..(length-i)]}for (target in targets) { result << shuffle(target)}function shuffle (string) => { // some brute force algorithm with O(N!) // when string = 'abc', results = 'abc', 'acb', 'bac', 'bca', 'cab', 'cba', the times is 3! }Then the time complexity = \\(N + N * N! = O( N*N! )\\). We can start from string = 'a', then string 'ab', …etc and we will find out that the desired result of 'ab' is based on the result of 'a' and append 'b' on both side of the result of 'a' and so on as follow:{ 'a', 'ab', 'ba', 'cab', 'abc', 'cba', 'bac', 'dcab', ... ...}As a result the algorithm would bestring = 'abcdefg' // all characters are uniquefunction getPermutationsBasedOnLastOne (string, lastPermutations) { length = len(string) lastPermutations = getPermutationsBasedOnLastOne (string[0..(length-1)], lastPermutations) for (Permutation in lastPermutations) { result << string[-1] + Permutation result << Permutation + string[-1] } return result}Test for a^3 + b^3 = c^3 + d^3, k = 2 => expect results: [1, 1, 1, 1], [1, 2, 2, 1], [1, 2, 1, 2], [2, 2, 2, 2] We can start write precise code here, with TDDdescribe('a^3+b^3=c^3+d^3', () => { describe('k=2', () => { expect(a_b_c_d(2)).toEqual([1, 1, 1, 1], [1, 2, 2, 1], [1, 2, 1, 2], [2, 2, 2, 2]); })})Referencecracking the coding interview /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/dsa/2023/03/08/solve-problem.html"},{"id":11,"title":"Complexity","content":" MathJax.Hub.Config({ TeX: { equationNumbers: { autoNumber: \"AMS\" } } }); const config = { theme: 'neutral', startOnLoad:true, htmlLabels:true, }; mermaid.initialize(config); hljs.highlightAll(); About Me Complexity IntroductionComplexity is a measure of the resources required to solve a problem or execute an algorithm. Time complexity refers to the amount of time or number of operations required to solve a problem or execute an algorithm. The goal of analyzing time complexity is to identify algorithms that are efficient and can solve problems within a reasonable amount of time. Space complexity refers to the amount of memory or storage space required to solve a problem or execute an algorithm. The goal of analyzing space complexity is to identify algorithms that are efficient in terms of memory usage.Why?Basic data structure and algorithm knowledge is useful for problem solving. With this concept, we can evalute solutions to a problem before diving in.How?conceptComplexity describes the relationship between the cost we care and the size of input; for example, the total time to create x books may be as follow:\\[Time(n) = 4n^3 + 4n^2 + 3\\]However, in real world problems, precise function to describe the total time of producing n amount of books does not exist at all, so we use asymptotic notations.asymptotic notationsThere are notations such as big-O (\\(O\\)), big-theta (\\(\\Theta\\)), big-omega (\\(\\Omega\\)); please check the defination in academia online by yourself. Here we focus on the defination of industry. The defination of \\(O\\) in industry is the same as the defination of \\(\\Theta\\) in academia; that is\\[\\Theta(g(n)) = \\{ f(n) | \\exists c_0, c_1, n_0 > 0 \\ \\ \\ \\forall n > n_0, s.t. 0 \\leq c_0g(n) \\leq f(n) \\leq c_1g(n) \\}\\]given we have some knowledege with set theory. Then f(n) is an element of \\(\\Theta\\) of g(n), which is what industry care about (\\(O\\), big-O); for example, \\(2x + 100\\) is an element of \\(\\Theta(x)\\); then we can use \\(x\\) to describe the complexity of \\(2x + 100\\). The following plot demostrates that \\(2x + 100\\) is wrapped by \\(3x\\) and \\(x\\) after \\(x > 100\\)\tconst xValues = [];\tconst y1Values = [];\tconst y2Values = [];\tconst y3Values = [];\tfor (let x = 0; x <= 300; x++) {\t\txValues.push(x);\t\ty1Values.push(3*x);\t\ty2Values.push(x);\t\ty3Values.push(2*x+100);\t}\tconst ctx = document.getElementById(\"big-o-graph\").getContext(\"2d\");\tconst myChart = new Chart(ctx, {\t\ttype: \"line\",\t\tdata: {\t\t\tlabels: xValues,\t\t\tdatasets: [\t\t\t\t{\t\t\t\t\tlabel: \"y = 3x\",\t\t\t\t\tdata: y1Values,\t\t\t\t\tborderColor: \"red\",\t\t\t\t\tfill: false\t\t\t\t},\t\t\t\t{\t\t\t\t\tlabel: \"y = x\",\t\t\t\t\tdata: y2Values,\t\t\t\t\tborderColor: \"blue\",\t\t\t\t\tfill: false\t\t\t\t},\t\t\t\t{\t\t\t\t\tlabel: \"y = 2x+100\",\t\t\t\t\tdata: y3Values,\t\t\t\t\tborderColor: \"green\",\t\t\t\t\tfill: false\t\t\t\t}\t\t\t]\t\t},\t\toptions: { plugins: { customCanvasBackgroundColor: { color: 'lightGreen', } } }\t});notation simplificationBased on the defination, we know that the big O of \\(2x + 100\\) is \\(2x\\) and also \\(x\\) \\(2x^2 + x\\) is \\(x^2\\) because of \\(\\exists \\ a, b > 0 \\ s.t \\ ax^2 < 2x^2 + x < bx^2 \\forall \\ x>0\\)time complexity Again, we use the definition of industry Time complexity = O(n) means at most n elements involved to get things doneAmortized Time Description: In some data structures, individual operations can take significantly longer than others For example, adding an element to an array can take O(n) time if the array needs to be resized, but most additions take constant time O(1) Solution: Considers the average time taken by a sequence of operations, rather than just by one single operation Amortized time complexity analysis involves dividing the total time taken by a sequence of operations by the number of operations. This gives us the average time taken per operation, which is a more useful measure of the data structure’s performance than the worst-case time complexity of a single operation. Accounting method, which involves assigning a cost to each operation and using the cost to pay for future operations. For example, in an array with dynamic resizing, we could assign a cost of 1 to each add operation, and use the extra time taken by the occasional resize operation to pay for the cost of the future operations. Example: add element to array code function addToArray(array, element) { if (array.length === array.capacity) { const newCapacity = array.capacity * 2; const newArray = new Array(newCapacity); for (let i = 0; i < array.length; i++) { newArray[i] = array[i]; } array = newArray; array.capacity = newCapacity; } array[array.length] = element;} The cost of each add operation is O(1), and the cost of each resize operation is O(n). calculation const array = { capacity: 2, length: 0 };addToArray(array, 1); // O(1)addToarray(array, 2); // O(1)addToArray(array, 3); // O(1 + 2 * 1)// O(1 + 1 + 1 + 2 * 1) = O(5)// 5/3 = 1.67 => amortized time = O(1.67) = O(1) space complexity we use the definition of industry space complexity = O(n) means it needs at most n elements of space to get things doneWhat?two liner iteration code for (let i = 0; i < arrayA.length; i++) { console.log(arrayA[i])}for (let i = 0; i < arrayB.length; i++) { console.log(arrayB[i])} time complexity = O(A + B) Picks A elements from arrayA, each pick = O(1) Picks B elements from arrayB, each pick = O(1) space complexity = O(1) Only need a space for i => O(1) Iteration in An Iteration code for (let i = 0; i < arrayA.length; i++) { for (let j = 0; j < arrayB.length; j++) { console.log(arrayA[i] + arrayB[j]) }} Time complexity = O(A * B) A will be query with i and B will be query with j in O(1) each The combination of (i, j) = [0..lengthOfA] x [0..lengthOfB] Space complexity = O(2) = O(1) The space required by i and j is constant recursive binary search code function binarySearch (array, target) { let middleIndex = Math.floor(array.length / 2) if (array[middleIndex] === target) { return true } if(array.length === 1) { return false } if (target > array[middleIndex]) { return binarySearch (array.slice(middleIndex, array.length), target) } else if (target < array[middleIndex]) { return binarySearch (array.slice(0, middleIndex), target) }} time complexity = O(log N) Given the number of the elements in an array is 16, then it at most need to work through 5 elements to find the target with steps: the middle element of 16 elements (step 1) -> the middle element of 8 elements (step 2) -> the middle element of 4 elements (step 3) -> the middle element of 2 elements (step 4) -> the middle element of 1 element (step 5) We can describe the number of traverse (k) with the number of elements (N) as follow: \\(N = 2^k => k = log_2N = logN\\), so the complexity = \\(O(logN)\\) Space complexity = O(log N) for middleIndex Again, given the elements in an array is 16, at most need to work through 5 elements. Because it is recursive, before we find the answer, all the binarySearch will be store in stack and wait the final binarySearch to return answer. Because each binarySearch need one middleIndex, O(1) and it will also be 5 steps, so the space complexity is also O(log N) recursive, like fibonacci series code function fibonacci(n) { if (n < 2) { return n; } else { return fibonacci(n - 1) + fibonacci(n - 2); }} plot graph TD id1((f_4)) --> id2((f_3)) id1((f_4)) --> id3((f_2)) id2((f_3)) --> id4((f_2)) id2((f_3)) --> id5((f_1)) id4((f_2)) --> id6((f_1)) id4((f_2)) --> id7((f_0)) id3((f_2)) --> id8((f_1)) id3((f_2)) --> id9((f_0)) time complexity = \\(O(2^N)\\) Given every function will request two functions, the time complexity = O(1 + 2 + 4 + … + 2^(n-1)) = O(2^n - 1) = O(2^n) space complexity = \\(O(N)\\) The data we need to store is f(1), f(2), … f(n), meaning the space complexity = O(n) Referencecracking the coding interview /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/dsa/2022/05/02/complexity.html"},{"id":18,"title":"Postgresql","content":" hljs.highlightAll(); About Me Postgresql IntroductionThis article describes basic concepts related to postgreSQL.Why? Robust feature set: PostgreSQL has a comprehensive feature set that supports advanced data types, indexes, stored procedures, triggers, and more. Scalability: PostgreSQL is designed to scale horizontally, meaning that you can add more resources to the system as your data and processing needs grow. Strong reliability: PostgreSQL is known for its strong reliability and stability. Open source Active community Strong security: PostgreSQL has a strong focus on security, with features such as role-based access control, data encryption, and secure communication protocols built in.How?inituse homebrew:brew install postgresqlstart server:brew services start postgresqland check it withbrew services listdebug the logstail -n 50 /usr/local/var/log/postgresql@14.logConnectPasswordIn ~/pgpass.confhostname:port:database:username:passwordand permissions set to 0600In Terminal input when we did not setup hostname, port, database, username, password psql -h <host> -p <port> -U <username> <database> input when we already setup hostname, port, database, username, password psql postgres remove processps -ef | grep postmaster | grep -v grep | awk '{print $2}'kill <the_pid_you_just_got>With Dockerconnect dockerand thendocker run --name my_db \\ -e POSTGRESQL_PORT=5432 \\ -e POSTGRESQL_DB=my_db \\ -e POSTGRESQL_USER=postgres \\ -e POSTGRES_PASSWORD=test1234 \\ -d postgres remember to create desired database first remember to change desired my_db, postgres and test1234, which will match DEV_DATABASE_URL belowdatabasecreate:CREATE DATABASE <database_name>;show:\\luse:\\c <database_name>;delete:DROP DATABASE <database name>;tableCreate:or with node migration rails migrationShow:\\dtuserShow\\duCRUD of rowCREATE-- generalINSERT INTO table (variable1, variable2, variable3) VALUES (value1, value2, value3);-- exampleINSERT INTO users (username, password, email) VALUES ('john', '123456', 'john@example.com');READ-- generalSELECT * FROM table WHERE variable1 = value1;-- exampleSELECT * FROM users WHERE username = 'john';UPDATE-- generalUPDATE table SET variable1 = value1 WHERE variable2 = value2;-- exampleUPDATE users SET password = '654321' WHERE username = 'john';DELETE-- generalDELETE FROM table WHERE variable1 = value1;-- exampleDELETE FROM users WHERE username = 'john';What?give an exampleReferenceHomebrewHow to use .pgpass in PostgreSQL? /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/pg/2022/12/30/postgresql.html"},{"id":20,"title":"Sketch","content":" hljs.highlightAll(); About Me Sketch IntroductionSketching is the act of creating a preliminary drawing or rough draft of an idea or design. It’s an essential step in the creative process, whether you’re an artist, designer, engineer, or anyone else who needs to visualize and communicate their ideas.sWhy?focus on why we need itHow?Define the problem or idea: Before you start sketching, you need to have a clear understanding of what you’re trying to achieve. What’s the problem you’re trying to solve, or what’s the idea you’re trying to convey? Define the scope and constraints of the project, and consider any relevant information or research that will inform your sketch.Gather your materials: Depending on your preferred medium, you’ll need the appropriate materials to create your sketch. This could be anything from a pen and paper to digital drawing software and a tablet.Rough out the basic shapes and layout: Start by loosely sketching out the basic shapes and layout of your idea. This could be as simple as drawing a few lines and circles to represent the main elements of your design. Don’t worry about making it perfect at this stage - the goal is to get your ideas down on paper in a way that you can refine later.Refine your sketch: Once you have the basic layout in place, start refining your sketch by adding more detail and nuance. Pay attention to proportions, shading, and other elements that will make your design more realistic and visually appealing.Iterate and revise: Sketching is an iterative process, which means you’ll likely need to revise and refine your ideas multiple times before you arrive at a final design. Take feedback from others and consider how you can improve your sketch over time.Finalize your sketch: Once you’re happy with your sketch, it’s time to finalize it. This could involve transferring it to a more permanent medium, such as canvas or digital file, or adding finishing touches to bring it to life.What?My drawingsReference /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/art/2022/08/21/sketch.html"},{"id":23,"title":"Content Delivery Network","content":" hljs.highlightAll(); About Me Content Delivery Network Introduction CDN Benefits: Will be cached on most browsers because it’s used by a lot of other websites Reduce the bandwidth whywhy we need CDNwhatgive true examplesother NPM npm is a great tool to manage dependencies in your app using a module bundler. CDN vs NPM: My recommendation: For development and trying out stuff a CDN is fine. For an actual application I would advise you to compile and minify everything into one file and include thatreferencehttps://stackoverflow.com/questions/43605215/using-cdn-vs-installing-library-by-npm /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/cache/2022/02/09/content-delivery-network.html"},{"id":25,"title":"Ch4 Types Of Reaction","content":" MathJax.Hub.Config({ TeX: { equationNumbers: { autoNumber: \"AMS\" } } }); hljs.highlightAll(); About Me Ch4 Types Of Reaction IntroductionThis article explains the types of chemical reactions: Precipitation reactions: dissolved substances react to form one (or more) solid products Acid–base reactions: chemical reaction that occurs between an acid and a base Oxidation–reduction reactions: reaction causes the oxidation number of a molecule, atom, or ion changes by gaining or losing an electronWe will start from solubility and then explain these three types of reactions.Why?focus on why we need itHow?Solubility rulesA soluble compound can be dissolved in water. Always soluble: \\(Na^+, K^+, Li^+, NH_4^+, NO_3^-, C_2H_3O_2^-\\) Generally Soluble: \\(Cl^-, Br^-, I^-\\) (exception: \\(Ag^+, Pb^{2+}, Hg_2^{2+}\\)) \\(SO_4^{2-}\\) (exception: \\(Ca^{2+}, Ba^{2+}, Sr^{2+}, Pb^{2+}\\)) Generally Insoluble: \\(OH^-\\) (exception: \\(Na^+, NH_4^-, Ca^{2+}, Sr^{2+}, Ba^{2+}\\)) \\(S^{2-}, CO_3^{2-}, PO_4^{3-}, CrO_4^{2-}\\) (exception: \\(Na^+, K^+, Li^+, NH_4^+\\)) dissolve Water is a polar solvent that dissolves many ionic and polar substances Electrolytes: a substance that produces ions in solution when dissolved in water Strong electrolyte: 100% dissociated to produce separate ions; strongly conducts an electric current; example: \\(HClO_4\\) Weak electrolyte: Only a small percentage of dissolved molecules produce ions; weakly conducts an electric current; example: \\(NH_3\\) Nonelectrolyte: Dissolved substance produces no ions; does not conduct an electric current; example: \\(C_6H_{12}O_6\\) molarity\\[Molarity (M) = \\frac{moles of solute(mole)}{volumn of solution(L)}\\]example: 0.25 moles of \\(NaCl\\) in 300 ml of solution -> M = 0.25/0.3 = 0.83DilutionMoles of solute after dilution = moles of solute before dilution:\\[M_1V_1 = M_2V_2\\]equationsFor example, when mixing \\(K_2CrO_4\\) and \\(Ba(NO_3)_2\\), a reaction to form \\(BaCrO_4\\) and dissolve \\(KNO_3\\) occurs formula equation: \\(K_2CrO_4(aq) + Ba(NO_3)_2(aq) -> BaCrO_4(s) + 2KNO_3(aq)\\) complete ionic equation: \\(2K^+(aq) + CrO_4^{2-}(aq) + Ba^{2+}(aq) + 2(NO_3)^-(aq) -> BaCrO_4(s) + 2K^+(aq) + 2NO_3^-(aq)\\) net ionic equation: \\(Ba^{2+}(aq) + CrO_4^{2-}(aq) -> BaCrO_4(s)\\)aq meanss meansPrecipitation reactionsformation of a solid occursexample: \\(AgNO_3(aqueous) + KCl(aqueous) — AgCl(precipitate) + KNO_3(aqueous)\\)Acid–base reactionsIt involves a transfer of \\(H^+\\) ionsThree model: Arrhenius ⊆ Brønsted–Lowry ⊆ Lewis Arrhenius Acid: produces \\(H^+\\) Base: produces \\(OH^-\\) Brønsted–Lowry Acid: proton donor Base: proton acceptor proton = \\(H^+\\) Lewis TBC Please refer to organic_chemistry/2022-08-07-2-acid-and-base.mdTitrations To calculate the concentration of the solution For example, given 20 ml of \\(HCl\\) in a bottle, we gradually add \\(NaOH\\) and after 48.6 ml of \\(NaOH\\) added, the indicator changed color equation: \\(HCl + NaOH - H_2O + NaCl\\) [\\(NaOH\\)] = 0.100 M -> we need 0.00486 mol of \\(NaOH\\) By the equation, mol of \\(HCl\\) : mol of \\(NaOH\\) = 1 : 1 -> there is also 0.00486 mole of \\(Hcl\\) in the 20 ml bottle [$$$HCl$] = 0.00486 / 0.02 = 0.243 M Oxidation–reduction reactionsIt involves electron transfer Oxidation: loss electrons Reduction: gain electrons oxidation states method (TBC)What?Please give test examples according to the topics in How section.NoteReferenceElectrolyteWhat Are Electrolytes?Molarity Practice ProblemsSolubility RulesAcid–base titrations /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/chemistry/2022/09/06/ch4-types-of-reaction.html"},{"id":26,"title":"Ch3 Stoichiometry","content":" MathJax.Hub.Config({ TeX: { equationNumbers: { autoNumber: \"AMS\" } } }); const config = { theme: 'neutral', startOnLoad:true, htmlLabels:true, }; mermaid.initialize(config); hljs.highlightAll(); About Me Ch3 Stoichiometry IntroductionThis article explains the concept of Stoichiometry. After we balance chemical reaction, there are actually 9 ways of examples; for example, we know \\(SO_2\\) + \\(O_2\\) = \\(SO_3\\).step 1: balance\\[2SO_2 + O_2 \\rightarrow 2SO_3\\]step 2: proportion\\[SO_2 : O_2 : SO_3 = 2 : 1 : 2\\]step 3: convert from A to Bgraph LR id1(particle A) --1_mole_A / N_A--> id4(mole A) id2(mass A) --1_mole_A / mole_mass_A--> id4(mole A) id3(volume A) --1_mole_A / 22.4_L_A--> id4(mole A) id4(mole A) --coeff_B / coeff_A--> id5(mode B) id5(mode B) --N_A / 1_mole_B--> id6(particle B) id5(mode B) --mole_mass_A / 1_mole_B--> id7(mass B) id5(mode B) --22.4_L_B / 1_mole_B--> id8(volume B)Why?focus on why we need itHow?particle A -> particle BTBCparticle A -> mass BTBCparticle A -> volumn BTBCmass A -> particle BTNCmass A -> mass BHow many grams of \\(SO_3\\) is produced if react 32 grams of \\(O_2\\)?Moles of 32 grams of \\(O_2\\) = 32/16 = 2 -> 4 moles of \\(SO_3\\) -> 4 * (32 + 16 * 3) = 320 gmass A -> volumn BTBCvolumn A -> particle BTBCvolumn A -> mass BTBCvolumn A -> volumn BTBCWhat?give exercisesReferenceChemistry, ZumdahlStoichiometry Basic Introduction, Mole to Mole, Grams to Grams, Mole Ratio Practice Problems [Stoichiometry Tutorial: Step by Step Video + review problems explained Crash Chemistry Academy](https://www.youtube.com/watch?v=XnfATaoubzA) /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/chemistry/2022/08/28/ch3-stoichiometry.html"},{"id":27,"title":"Ch2 Atoms Molecules Ions","content":" MathJax.Hub.Config({ TeX: { equationNumbers: { autoNumber: \"AMS\" } } }); hljs.highlightAll(); About Me Ch2 Atoms Molecules Ions IntroductionThis article describes fundamental knowledge and skills in chemistry as follow:Why?focus on why we need itHow?fundamental laws conservation of mass: mass is neither created nor destroyed in chemical reactions definite proportion defination: chemical compound always contains its component elements in fixed ratio example: \\(CO_2\\) has one C (6) and two O (8), so in X grams of \\(CO_2\\), there must be X * 6/(6+82) grams of O and X * 82/(6+8*2) grams of O. The proportion of C/O must be 3/8. multiple proportions defination: given two elements form more than one compound, the ratios of the masses of the second element which combine with a fixed mass of the first element will always be ratios of small whole numbers example: in \\(CO\\) and \\(CO_2\\), given one mass of C, the ratio of O in CO and \\(CO_2\\) must be \\(1/2\\) Dalton’s atomic theory All matter is made of atoms All atoms of a given element are identical in mass and properties Chemical compounds are formed when atoms combine Atoms are not changed in chemical reactions but the way they are bound togetherchangesEarly atomic experiments and models Thomson model contribution: discovery of electron and nucleus details: TBC Millikan experiment contribution: charge of a single electron to be -1.602 × 10−19 coulomb and showed that all charges were multiples of this number details: TBC Rutherford experiment contribution: most of the atom is empty space surrounding a tiny nucleus details: TBC Atomic structure nucleus contains protons (positive charge) and neutrons (no charge) electrons reside outside the nucleus electrons, negative charge, small mass (1/1840 of proton) the distance between electrons and nucleus is relatively large isotopes have the same atomic number but different mass numbersbondsAtoms combine to form molecules by sharing electrons to form bonds such as iconic and covalent. Structural formula definition: demonstrates molecules with bonds and atoms on 2D example: TBC (can draw \\(H_2O\\) here) Ball-and-stick model definition: demonstrates molecules with bonds (stick) and atoms (ball) on 3D example: TBC Space-filling model deifiition: demonstrates molecules with overlapping spheres to show the bonds on 3D example: TBC IonsIon’s total number of electrons is unequal to total number of protons, meaning the new charge of it is not zero. Cation formed by loss of an electron, positive charge metals Anion formed by gain of an electron, negative charge Nonmetals Ionic bonds: formed by interaction of cations and anionscompound binary compounds: chemical compounds comprising of two distinct elements binary ionic compounds, type I definition: contain a positive ion (cation) and a negative ion (anion) example: NaCl binary ionic compounds, type II definition: more than one type of positive ion -> more than one type of ionic compound example: \\(FeCl_2\\) and \\(FeCl_3\\) binary covalent compounds, type III definition: formed between two nonmetals example: \\(H_2O\\) non binary compounds: compounds that contain more than two different elements example: \\(NaOH\\) \\(OH^-\\) is a kind of polyatomic ion Ions vs molecules Ion are compound with ionic bond and molecule are compound with covalent bond quickest way to predict the bond: metal + nonmetal = ionic and nonmetal + nonmetal = covalent covalent bond forms by sharing electrons ionic bond forms by transfering electronsmolecules vs compoundWhen atoms bonds together, it forms molecule. When two different atoms bonds together, it forms compound; actually, compound is a kind of molecules but the atoms must be different. For example, \\(H_2O\\) is both molecule and compound but \\(O_2\\) is only molecule.Binary compounds• Type I—contain a metal that always forms the same cation• Type II—contain a metal that can form more than one cation • Type III—contain two nonmetals􏳂 Compounds containing a polyatomic ionperiodic table periodic table organizes elements in order of increasing atomic number atomic number: the number of protons in the nucleus of an atom elements with similar properties are in columns, or groups because the arrangement of electrons in outermost layer are the same example: O is \\(1s^22s^22p^4\\), S is \\(1s^22s^22p^63s^23p^4\\), and Se is \\(3d^{10}4s^24p^4\\) What?This section should includes the examplesReferenceChemistry, ZumdahlIonic vs. Molecular /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/chemistry/2022/08/27/ch2-atoms-molecules-Ions.html"},{"id":29,"title":"Object Oriented Programming","content":" MathJax.Hub.Config({ TeX: { equationNumbers: { autoNumber: \"AMS\" } } }); const config = { theme: 'neutral', startOnLoad:true, htmlLabels:true, }; mermaid.initialize(config); hljs.highlightAll(); About Me Object Oriented Programming Introduction Use objects to represent and manipulate data Objects are instances of classes that encapsulate data and methods (functions) that operate on that data Principles Encapsulation: Hide the internal details of an object and exposing only the necessary information through well-defined interfaces. This helps to ensure data integrity and makes code more modular and reusable. Inheritance: One class (the child or subclass) can inherit the properties and methods of another class (the parent or superclass). This allows for code reuse and promotes modularity and extensibility. Polymorphism: Polymorphism refers to the ability of objects of different classes to be treated as if they are of the same class. This allows for more flexible and dynamic programming, as objects can be used interchangeably without the need for complex type checking and casting. Abstraction: Simplify complex systems by representing only the essential features, and interfaces, which define the contract between objects and the outside world. WhyOOP provides a flexible and powerful way to organize and structure software applications.HowclassesWe use class to create objects and the class will define the attributes and methods these objects have. For example, a User class in any SaaS product would be as follow:class User def initialize(name) # attributes @name = name end # methods def say_hello puts \"Hello, my name is \" + @name endenduser = User.new('name')user.say_hellouser.nameCoupling and CohesionCoupling refers to the degree to which classes or modules in a software system depend on one another. High coupling can make a system more difficult to maintain, update, and test because changes to one class can have a ripple effect on other classes.We want less coupling and high cohesion. For example, if this class represents a machine in a company, we want it to be as independent as possible so that once it needs to be replace or suspended for some reason, we can easily do it, increasing the maintainability of this company.So anything making this machine to be related to other components of this company will increase coupling.math\\[Coupling(C) = 1 - 1/(d_o + d_i + 2 * (c_o + c_i) + g_d + 2 * g_c + w + r)\\] \\(d_o\\) = number of output data parameters \\(d_i\\) = number of input data parameters \\(c_o\\) = number of output control parameters \\(c_i\\) = number of input control parameters \\(g_d\\) = number of global variables used as data \\(g_c\\) = number of global variables used as control \\(w\\) = number of modules called (fan-out) \\(r\\) = number of modules calling the module under consideration (fan-in) data vs control Data parameters are values that represent input data that is used by the function or method to perform some computation or operation. For example, if a function calculates the area of a rectangle, the length and width of the rectangle would be passed as data parameters. Control parameters are values that represent instructions or options that modify the behavior of the function or method. They do not represent input data but rather control the flow of the function or method. For example, a function that sorts an array of numbers might have a control parameter that determines whether the sort should be ascending or descending. Decrease Coupling Use Interfaces: Reduces the dependencies between classes by defining a set of methods that a class must implement Encapsulate data: Hides the internal details of a class from other classes, preventing other classes from depending on the implementation details of a class Dependency Injection: Injects dependencies into a class instead of creating them inside the class. By injecting dependencies, you can reduce the coupling between classes, making them easier to test and update Avoid Global State: Global state refers to data that is accessible by multiple classes in a system. Global state can create strong dependencies between classes, making it harder to change one class without affecting others. Use Design Patterns: Design patterns are proven solutions to common programming problems. By using design patterns, you can reduce coupling and improve the maintainability of your code.Interfaces Implements abstraction and encapsulation thoroughly, making we only see the appearance of this function and use it easily; for example, we know the light can be on by switching the button but we do not know the logics behind it. Reduce the number of global variables used as data or control, as well as the number of input or output parameters, by providing a common interface that can be used by multiple clients. Reduce the number of modules called (fan-out) by promoting modular design and encouraging the use of common interfaces between modules.AbstractionAbstraction shows only essential attributes; for example, in this world, there are lots of animals such as human, pig, …etc and there are some identical characteristics, then we can first define a class, Animal and then subdivide it with inheritance rather than writing both classes having the same characteristics.class Animal def initialize end def eat endendclass Human < Animal def speak endendclass Pigendrather thanclass Human < Animal def initialize end def eat end def speak endendclass Pig def initialize end def eat endendEncapsulationThe private methods are example of encapsulation in ruby. You cannot use the methods outside the class. We only show the meaningful methods for outsiders.InterfacesAn interface implements abstraction and encapsulation throughly, making we only see the appearance of this function and use it easily; for example, we know the light can be on by switching the button but we do not know the logics behind it.InheritanceFor example, I want to create Animals: Dog, Cat, Bird.class Animal def initialize end def move puts \"#{self.class.name} is moving\" endendclass Dog < Animalendclass Cat < Animalendclass Bird < Animalenddog = Dog.newcat = Cat.newbird = Bird.newdog.movecat.movebird.movePolymorphismFor example, I want to create Animals: Dog, Cat, Bird I can write a polymorphic class as follow:class Animal DOG = 0 CAT = 1 BIRD = 2 attr_accessor :type def initialize(type) @type = type end def speak(words) puts words endendanimals = [Animal.new(Animal.DOG), Animal.new(Animal.CAT), Animal.new(Animal.BIRD)]animals.each |animal| do case animal.type when Animal.DOG animal.speak('bark') when Animal.CAT animal.speak('meow') when Animal.BIRD animal.speak('tweet') endendpolymorphism vs inheritanceIt depends on the business logic to determine which one to be used. Think about your database. If we use inheritance, then there will be a new model produced which you can create a table associate with it and you will not need runtime to calculate the logics, of which you cost more space but save more time and vice versa.For example, the same Dog class. If you are running a zoo, you will not need a table for Dog and you just need a polymorphism table, Animal, to list all the animals with type in that table. But if you are running, a store professionally takes good care about dogs, then you need a Dog model inherited from Animal.Unified Model LanguageIt is a language to describe the relationship between models. The relationships: inheritance, composition, aggregation, association, link (solid), dependency, realization, link (dashed)classDiagram classA --|> classB : Inheritance classC --* classD : Composition classE --o classF : Aggregation classG --> classH : AssociationclassDiagram classI -- classJ : Link(Solid) classK ..> classL : Dependency classM ..|> classN : Realization classO .. classP : Link(Dashed)inheritanceA inherited from B -> A has all attributes and methods from B; for example, student is inherited from person.compositionC composed of D -> D is a part of C; for example, car is composed of wheels.aggregationWhatReferenceThe Basics of OOP RubyRuby Tutorial: Abstract ClassesCoupling (computer programming)What is the definition of “interface” in object oriented programming4.7: Introduction to Polymorphism - The Nature of Code [Design Patterns in Plain English Mosh Hamedani](https://www.youtube.com/watch?v=NU_1StN5Tkk&t=935s) /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/concept/2021/11/21/Object-Oriented-Programming.html"},{"id":30,"title":"N+1","content":" hljs.highlightAll(); About Me N+1 IntroductionN+1 query problem happens when there are N queries depends on 1 query; for example, given model relation that user has many blog posts. Given we are in the loop of posts. if we want to retrieve all the author name, intuitively, we may compose ORM command as follow:Post.all.each do |post| puts post.user.name endand the SQL command looks like as follow:SELECT \"posts\".* FROM \"posts\"SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ? [[\"id\", 2], [\"LIMIT\", 1]]SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ? [[\"id\", 2], [\"LIMIT\", 1]]SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ? [[\"id\", 33], [\"LIMIT\", 1]]SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ? [[\"id\", 4], [\"LIMIT\", 1]]SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ? [[\"id\", 4], [\"LIMIT\", 1]]...We can notice that there are two posts from user 2, one post from user 33, and two posts from user 4, …etc, which cause by that we ask computer to look for user one by one according to posts, so the solution should tell computer to just query posts and users once and compose and show the results we want afterwards, going to reduce the SQL commands as folow:SELECT \"posts\".* FROM \"posts\"SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" IN (?, ?, ?, ?, ?) [[\"id\", 2], [\"id\", 4], [\"id\", 33]]Why?We want server side to prepare data as quick as possible.How?try to answer how include worksWhat?In rails, we solve it with includes and join N + 1Benchmark.measure do ActivityStudent.all.each do |activity| puts activity.student.name endend includesBenchmark.measure do ActivityStudent.includes(:student).all.each do |activity| puts activity.student.name endend joinsBenchmark.measure do ActivityStudent.joins(:student).all.each do |activity| puts activity.student.name endendReferenceUnderstanding and fixing N+1 query /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/database/2022/08/12/N+1.html"},{"id":32,"title":"ACID","content":" const config = { theme: 'neutral', startOnLoad:true, htmlLabels:true, }; mermaid.initialize(config); hljs.highlightAll(); About Me ACID IntroductionACID is the abbreviation of four words: atomicity (不可分割性), consistency (一致性), isolation (獨立性), durability (持久性). With ACID, the database performs transactions reliably. (A transaction means an indivisible unit of work in database) Atomicity ensures one transaction is treated as a single unit. Rollback all commits if transaction fails. Consistency ensures transaction can only bring the database from one valid state to another. Transactions must pass all predefined rules in schema. Isolation ensures concurrent transactions leaves the database with same result. There are four level: Read uncommitted(未提交讀), read committed(提交讀), repeatable read(可重複讀), Serializable(串行化) Durability ensures the changes from transaction will remain committed even in the case of a system failureWhy?If database did not follow this properties, no atomicity: transaction fails but no rollback -> some SQL command processed and some did not no consistency: transaction did not follow all pre-defined rules such as callbacks, default values, …etc -> database corrupted, making it to be unstable in the future no isolation: concurrent transactions reading and writing to a table at the same time -> no rules to determine when to share the changes to the concurrent transactions -> inconsistent results with same concurrent transactions no durability: system crash -> transactions processed but did not change the resultHow? (Concept)AtomicityUser A wants to transfer $1,000 dollar to user B. Then the database must execute these two SQL commnadsUPDATE BalanceAccount SET Balance = Balance - 1000 WHERE id = 1UPDATE BalanceAccount SET Balance = Balance + 1000 WHERE id = 2If system did not follow the design of atomicity, then it may execute command 1 but not command 2 and $1,000 dollars disappear.To solve this issue, atomicity can be achieved with try catch blocks as follow:BEGIN TRY BEGIN TRANSACTION UPDATE BalanceAccount SET Balance = Balance - @amount WHERE id = @from_id UPDATE BalanceAccount SET Balance = Balance + @amount WHERE id = @to_id COMMIT TRANSACTION -- detect by DBMSEND TRYBEGIN CATCH ROLLBACK TRANSACTION -- rollback with the mechanism of DBMSEND CATCHor unwanted result: BalanceAccount     id user balance 1 A $5,000 2 B $4,000 The mechanism of commit and rollback is in the what sectionConsistencyGiven that the default data type of balance is INTEGER, suppose user A is a hacker and use SQL injection to insert string to his account, trying to mess up his balance. With consistency, the value should not be changed as follow:BEGIN TRY BEGIN TRANSACTION UPDATE BalanceAccount SET Balance = @amount WHERE id = @from_id COMMIT TRANSACTION -- DBMS checks whether it follows shcemaEND TRYBEGIN CATCH ROLLBACK TRANSACTION -- rollback with the mechanism of DBMSEND CATCHor unwanted result: BalanceAccount     id user balance 1 A hahahaha 2 B $4,000 The mechanism of commit and rollback is in the what sectionDurabilityDatabase achieve durability by non-volatile storage: can retain stored information even after power is removed coordinate before commit: if there are concurrent commits, it will coordinate first then commit transaction log: recreate the system state with these logIsolation level\\problem dirty read non-repeatable read phamton read uncommitted true 　true true read committed false true true repeatable read false false true serializable false false false As you can see, serializable > repeatable read > read committed > read uncommittedProblems: dirty read: read data from a row that has been modified by another running transaction and not yet committed non-repeatable read: returns two different result in single transaction because of other updates phamton: different number of rows created by other transaction during single transactiondirty readUser A transfer $1,000 dollar to user B but input string value, \"$1,000\" rather than 1000. Then given above mechanism, this transaction will be rollback. Dirty read may occur if database read the value before database finish the COMMIT.If we set the transaction level to read uncommited as follow:SET TRANSACTION LEVEL READ UNCOMMITEDSELECT balance FROM BalanceAccount WHERE id = 1 -- balance = 5000-- the updates that going to be rollbackSELECT balance FROM BalanceAccount WHERE id = 1 -- balance = 4000 -> wrong-- rollback occursthen the unwanted result in one transaction:5000 -- first SELECT-- commit rollback4000 -- second SELECTnon-repeatable readAgain, user A transfer $1,000 dollar to user B and there is a mechanism to sum up the debit and credit values cash flows and compare the value with balance. Non-repeatable read occurs when some value updates during multiple SELECT in one transactionIf we set the level to READ COMMITTED read as follow:SET TRANSACTION ISOLATION LEVEL READ COMMITTEDBEGIN TRANSACTIONSELECT balance FROM BalanceAccount WHERE id = 1 -- balance = 5000... -- some complex SQL commands costing lots of time to compare value with debit sideSELECT balance FROM BalanceAccount WHERE id = 1 -- balance = 5000 (still!!!!!!!!!!)... -- some complex SQL commands to compare value with credit sideCOMMIT TRANSACTIONthen the unwanted result in one transaction5000 -- first SELECT-- commit occurs4000 -- second SELECTphamtonSuppose there is a transaction needs the total number of BalanceAccount at the beginning and the end and there is a new user created. The TRANSACTION would be as follow:If we set the level to REPEATABLE READ read as follow:SET TRANSACTION ISOLATION LEVEL REPEATABLE READBEGIN TRANSACTIONSELECT COUNT(*) FROM BalanceAccount -- return 100-- some complex calcualtions take timeSELECT COUNT(*) FROM BalanceAccount -- return 100COMMIT TRANSACTIONor unwanted result:100 -- first select-- some complex calcualtions take time101 -- second selectWhat?Take MySQL as example, the dataflow as follow: (two-phase commit)graph TD id1((transaction)) id2(DBMS) id3[log]graph TD data((transaction)) --flow into--> InnoDB(InnoDB) InnoDB(InnoDB) --insert into cache memory--> redo_log_prepare[redo log .prepare] redo_log_prepare[redo log .prepare] --InnoDB inform MySQL Server--> mysql_server(MySQL Server) mysql_server(MySQL Server) --insert into cache memory--> binlog[binlog] binlog[binlog] --MySQL Server inform InnoDB--> InnoDB2(InnoDB) InnoDB2(InnoDB) --change log--> redo_log_commit[redo log .commit] redo_log_commit[redo log .commit] --batch writing--> database Note: binlog is for MySQL and redo log is form InnoDB.Atomicity (MySQL)If failed in any steps, MySQL will rollback the database by recovering records with redo log and binlog, ensuring Atomicity.Consistency (MySQL)It will check whether the log follows schema to make sure consistency. If not, rollback with log.Durability (MySQL)If system crash, recover data with binlog. (redo log only records fix amount of transactions)Isolation (MySQL)dirty read in mysqlTransaction B can read uncommit changes from transaction A. Transaction A:START TRANSACTION;UPDATE users SET email = 'hahaha@lalala.com' WHERE id = 8;DO SLEEP(15);ROLLBACK; Transaction B:SET SESSION TRANSACTION ISOLATION LEVEL READ UNCOMMITTED; -- the default level in mysql is REPEATABLE READSELECT * FROM usersnon-repeatable read in mysqlTransaction B can read the changes from transaction A during the transaction B. Transaction A:UPDATE users SET email = 'hahaha@lalala.com' WHERE id = 8; Transaction B:SET SESSION TRANSACTION ISOLATION LEVEL REPEATABLE READ; -- the default level in mysql is REPEATABLE READSTART TRANSACTION;SELECT * FROM users WHERE id = 8;DO SLEEP(10);SELECT * FROM users WHERE id = 8;COMMIT;phamton in mysql Transaction A:INSERT INTO admin_roles (`name`, `created_at`, `updated_at`) VALUES ('testing', '2022-01-01', '2022-01-01') Transaction B:SET SESSION TRANSACTION ISOLATION LEVEL SERIALIZABLE; -- the default level in mysql is REPEATABLE READSTART TRANSACTION;SELECT COUNT(*) FROM admin_roles; -- return 100DO SLEEP(10);SELECT COUNT(*) FROM admin_roles; -- return 100COMMIT;ReferenceACIDDatabase Transactions (ACID)sql server dirty read exampleNon repeatable read example in sql serverDurability (database systems)MySQL 基本運作介紹，從資料庫交易與 ACID 特性開始 /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/database/presentation/2022/05/14/ACID.html"},{"id":33,"title":"ORM","content":" hljs.highlightAll(); About Me ORM IntroductionORM (object relational mapping) lets programs query and manipulate data from database with object-oriented paradigm.Why? DRY, easier to maintain with the structure of model Miscellaneous task such as database connection can bed done automatically MVC structure enforced, making cleaner code structure No more SQL needed, making consistent coding style Abstract database system, so you can change it all the time OOP structure (hard to implement it to plain SQL)How? OOP & DRY (to be continued) reduce miscellaneous tasks (to be continued) MVC structure (to be continued) Abstract database: ORM uses Doctrine Database Abstraction Layer to serve as translator between database and programsWhat?rails ORMplease refer to 2022-01-13-rails-ORM.mdReferenceWhat is an ORM, how does it work, and how should I use one?Active Record Basics /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/database/2022/01/04/ORM.html"},{"id":34,"title":"Adapter","content":" hljs.highlightAll(); About Me Adapter IntroductionThe Adapter pattern allows two incompatible interfaces to work together by creating a class that acts as an interface between them. The adapter class maps the methods of one interface to another, making it possible for the two interfaces to communicate.Three components Client: The client is the component that is trying to use the adaptee, but cannot do so directly because the adaptee’s interface is incompatible with the client’s interface Adapter: The adapter is a class that acts as a bridge between the client and the adaptee. It maps the methods of the adaptee to the methods of the client. Adaptee: The adaptee is the component that the client wants to use, but cannot do so directly because its interface is incompatible with the client’s interface.Why? Reuse an existing class that does not match the interface of the client Create a class that can work with multiple incompatible classesHow?example in javascript// First Adaptee - the complex class that needs to be adaptedclass LegacyPaymentProcessor { constructor() { this.total = 0; } addLegacyPayment(amount) { this.total += amount; } getLegacyTotal() { return this.total; }}// Second Adaptee - another complex class that needs to be adaptedclass ModernPaymentProcessor { constructor() { this.total = 0; } addModernPayment(amount) { this.total += amount; } getModernTotal() { return this.total; }}// Adapter - the class that adapts the interface of the Adapteesclass PaymentAdapter { constructor(adaptee) { this.adaptee = adaptee; } processPayment(amount) { if (this.adaptee instanceof LegacyPaymentProcessor) { this.adaptee.addLegacyPayment(amount); } else if (this.adaptee instanceof ModernPaymentProcessor) { this.adaptee.addModernPayment(amount); } } getAmount() { if (this.adaptee instanceof LegacyPaymentProcessor) { return this.adaptee.getLegacyTotal(); } else if (this.adaptee instanceof ModernPaymentProcessor) { return this.adaptee.getModernTotal(); } }}// Client code that uses the PaymentAdapter with two Adapteesconst legacyPaymentProcessor = new LegacyPaymentProcessor();const modernPaymentProcessor = new ModernPaymentProcessor();const paymentAdapter1 = new PaymentAdapter(legacyPaymentProcessor);const paymentAdapter2 = new PaymentAdapter(modernPaymentProcessor);paymentAdapter1.processPayment(100);paymentAdapter2.processPayment(200);console.log(paymentAdapter1.getAmount()); // Output: 100console.log(paymentAdapter2.getAmount()); // Output: 200What?We can have a look at rails active recordReferenceWhy: asking for the reason or purpose behind something.How: asking for the method or process of doing something.What: asking for information about a specific thing or object. /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/design-pattern/2023/03/30/adapter.html"},{"id":37,"title":"facade","content":" hljs.highlightAll(); About Me facade IntroductionThis pattern makes my code prettier just like facade increase the taste of my house even thought my house is messy belongs to structural patterns, so it structures a specific kind of objects deal with complex set of objects, which these objects did not follow any particular structure; they should be messy const id = 'facade' let binarySearchTree = p5Draw(id) let binarySearchTreeP5 = new p5(binarySearchTree, id);Why?We only care about the aspects we care; for example, given a delivery system, user cares when the package arrives and the cost.Even thought the process of delivering involves shippings, air transport, …etc and it is truly complicate, we do not care. We should prepare the system to have clean interfaces (facades) for them to acquire the information they want.How? & What?For example, there are multiple services: service for transportation: OceanShippingService, AirTransportationService, LandTransportationService service to evaluate whether this item is deliverable: Package service to return possible routes: RouteActually we only care the possible choices of time and cost, soWhatWeCare.new('Taichung', 'Taipei', 'Chihuahua').result## example result: (when it arrives, cost)[ ['60 mins', 1000], ['30 mins', 2000],]WhatWeCare is a facade as follow: (pseudocode)class WhatWeCare # facade def initialize(origin, destination, item) @origin = origin @destination = destination @item = item end def result Route.new(@origin, @destination).results.map do |route| if route.is_deliverable? [ when_it_arrives(route), cost(route) ] end end end private def when_it_arrives(route) result = [] route.each do |sub_route| case sub_route.type when 'Air' AirTransportationService.new(sub_route).time when 'Land' LandTransportationService.new(sub_route).time when 'Ocean' OceanTransportationService.new(sub_route).time end end result.sum end def cost(route) result = [] route.each do |sub_route| case sub_route.type when 'Air' AirTransportationService.new(sub_route).cost when 'Land' LandTransportationService.new(sub_route).cost when 'Ocean' OceanTransportationService.new(sub_route).cost end end result.sum end def routes(@origin, @destination) Route.new(@origin, @destination) endendgiven the service as follow:class Route # returns all possible routes def initialize(origin, destination) ... end def results # suppose there are two possible routes ... possible_routes.map do |route| if is_deliverable?(route) route end end end private def possible_routes ... [ ['Taichung to Taoyuan (Air)', 'Taoyuan to Taipei (Ocean)'], ['Taichung to Hsinchu (Air)', 'Hsinchu to Banqiao (Ocean)', 'Banqiao to Taipei (Ocean)'], ... ] end def is_deliverable?(route) Package(route).result endendclass Package # returns whether this package is deliverable in this route def initialize(route) ... end def result ... true or false # whether the item is deliverable in this sub-route endendclass OceanShippingService # returns the estimates of delivery time and cost def initialize(route) ... end def time ... end def cost ... endendclass AirTransportationService # returns the estimates of delivery time and cost def initialize ... end def time ... end def cost ... endendclass LandTransportationService # returns the estimates of delivery time and cost def initialize ... end def time ... end def cost ... endendpros and consReferenceFacadeFacade Pattern – Design Patterns (ep 9) /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/design-pattern/presentation/2022/07/28/facade.html"},{"id":40,"title":"decorator","content":" const config = { theme: 'neutral', startOnLoad:true, htmlLabels:true, }; mermaid.initialize(config); hljs.highlightAll(); About Me decorator IntroductionTo change the behavior of a class without rewriting the code of the class by wrap the class with a class. const imagePath = '/assets/img/decorator_concept.png' const conceptDiv = document.getElementById('concept'); const conceptWidth = conceptDiv.offsetWidth; let eraseEnable = false; let img; let photoGraph; function setup() { setupImage () setupButton () setupCanvas () setupGraphics () } function draw() { image(img, 0, 0, conceptWidth, 400); image(graphic, 0, 0) } function mouseDragged() { if (!eraseEnable) { graphic.fill('black'); graphic.noStroke(); graphic.ellipse(mouseX, mouseY, 5, 5); } else { graphic.fill('white'); graphic.noStroke(); graphic.ellipse(mouseX, mouseY, 10, 10); } } function keyTyped() { if (key === 's') { saveCanvas('decorator_concept.png'); } } function setupImage () { try { img = loadImage(imagePath); } catch { img = createImage(conceptWidth, 400) } } function setupButton () { toggleButton = createButton('erase'); toggleButton.parent('concept toggle'); toggleButton.addClass(\"border rounded px-4\"); toggleButton.mouseClicked(ButtonClicked) } function setupCanvas () { const concept = createCanvas(conceptWidth, 400); concept.parent('concept canvas'); } function setupGraphics () { graphic = createGraphics(conceptWidth, 400); } function ButtonClicked () { toggleStyle() toggleErase() } function toggleErase() { if (eraseEnable) { noErase(); eraseEnable = false; } else { erase(); eraseEnable = true; } } function toggleStyle() { toggleButton.toggleClass(\"bg-indigo-100\"); toggleButton.toggleClass(\"border\"); }Why?Image your resturant serves lots of beverages and you want to design tables to store necessary information in your computer. Intuitively, there are two way: using inheritance or using polymorphism; however, inheritance creates lots of tables with duplicate methods and polymorphism creates multiple columns which is unnecessary for most other tables. To solve it, we use the concept of decorator which is to decorate the base class.How?The UML:classDiagram Beverage <-- Espresso : is a Beverage <-- Decaf : is a Beverage <-- Decorator : is a & has a Decorator <-- SoyMilkDecorator : is a Decorator <-- CaramelDecorator : is a Beverage : getDesc() Beverage : cost() Espresso : cost() Decaf : cost() Decorator : getDesc() SoyMilkDecorator : getDesc() SoyMilkDecorator : cost() CaramelDecorator : getDesc() CaramelDecorator : cost()For example, the cost of Espresso is 2 dollar and the cost of SoyMilkDecorator is 1 dollar, so I would expect that espresso.cost = 2, SoyMilkDecorator.cost = 1, espresso_with_soymilk.cost = 3What?class Beverage def get_desc raise NotImplementedError, \"#{self.class} has not implemented method '#{__method__}'\" end def cost raise NotImplementedError, \"#{self.class} has not implemented method '#{__method__}'\" endendclass Espresso < Beverage def get_desc 'Espresso' end def cost 2 endendclass Decaf < Beverage def get_desc 'Decaf' end def cost 1 endendclass Decorator < Beverage attr_accessor :beverage def initialize(beverage) @beverage = beverage end def get_desc @beverage.get_desc endendclass SoyMilkDecorator < Decorator def cost @beverage.cost + 1 endendclass CaramelDecorator < Decorator def cost @beverage.cost + 3 endendespresso_with_soy_milk = SoyMilkDecorator.new(Espresso.new)puts espresso_with_soy_milk.cost # 3ReferenceDecorator Pattern – Design Patterns (ep 3)Decorator in Ruby /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/design-pattern/2022/04/02/decorator.html"},{"id":5,"title":"Overview","content":" hljs.highlightAll(); About Me Overview IntroductionApplication programming interface is set of rules to interact with software.WhyWith API, developers can access the functionality of one system within another system, without having to know the details of how the underlying system works.HowThe concept of CRUD (create, read, update, delete) maps to POST, GET, PATCH/PUT, DELETE in HTTP.RESTful APIFor example,GET /tasks/new // (Create Show) Show the place to create taskPOST /tasks // (Create) Add a new task to the listGET /tasks // (Read list) Retrieve a list of all tasksGET /tasks/{id} // (Read one) Retrieve a task with the specified IDGET /records/:id/edit // (Update Show) Show the place to update taskPUT /tasks/{id} // (Update a task) Update a task with the specified IDPATCH /tasks/{id} // (Update a task partially) Update a task with the specified IDDELETE /tasks/{id} // (Destroy one) Delete a task with the specified IDThe URL structure follows the RESTful pattern of using a noun (in this case, “tasks”) to represent a resource and the HTTP method (GET, POST, PUT, DELETE) to specify the action to be taken on that resource.refer to concept of RESTnodenode apirails POST /events -> /events/create -> events#create GET /events/1 -> /events/show/1 -> events#show PATCH /events/1 -> /events/update/1 -> events#update DELETE /events/1 -> /events/destroy/1 -> events#destroyHTML now can only use GET and POST; as a result, rails adds params, method=PATCH and method=DELETE in POST for PATCH and DELETE.refer to rails APIfrontend vs backendIf you need to make the API requests private, then put it on backend. Always create frontend first because UI/UX is more important.WhatcurlJust place the basic commands here because I usually use postman.# createcurl -H \"Content-Type: application/json\" -d \"{\\\"name\\\": \\\"John Doe\\\"}\" localhost:8080/api/students# read# update# deletePostmanGETPOSTCreate a POST RequestJWTI think we can have more JWT designs here.Jenkins APIJenkins API with nodeCircleCI API[CircleCI API] with nodereferences表现层状态转换https://ihower.tw/rails/restful.htmlREpresentational State Transfer /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/api/2021/02/18/overview.html"},{"id":6,"title":"Github Page","content":" hljs.highlightAll(); About Me Github Page IntroductionTBCWhy?As my blog getting bigger, I need itHow?localTesting your GitHub Pages site locally with Jekylltailwindfollow How to use Tailwind CSS with Jekyll on GitHub Pageswebpackcontinuous integration (CI) (TBC)I should wrote easy test for itname: integration-workflowrun-name: $ integratingon: pull-request:...continuous deployment (CD)name: deployment-workflowrun-name: $ deployingon: push: branches: - masterjobs: github-pages: runs-on: ubuntu-latest steps: - uses: actions/checkout@v2 - uses: ruby/setup-ruby@v1 with: ruby-version: 3.1 bundler-cache: true - name: Setup Node uses: actions/setup-node@v2 with: node-version: '18' - run: npm install - name: Build site uses: limjh16/jekyll-action-ts@v2 with: enable_cache: true - name: Build bundle.js - run: webpack - name: Deploy uses: peaceiris/actions-gh-pages@v3 with: github_token: $ publish_dir: ./_siteworkflow (TBC) A workflow is ? The template as followdeploy errorsViewing Jekyll build error messages in your pull requestTroubleshooting Jekyll build errors for GitHub Pages sitesWhatReferenceDeploy your pull requests with GitHub Actions and GitHub DeploymentsUsing Jekyll with Tailwindcss on GitHub PagesWhat does ubuntu-latest mean for GitHub Actions?CI/CD with Github Actions to deploy on Github PagesEverything you need to know about getting started with GitHub ActionsHow to use Tailwind CSS with Jekyll on GitHub Pages /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/ci-cd/2022/12/17/github-page.html"},{"id":9,"title":"Linkedlist","content":" MathJax.Hub.Config({ TeX: { equationNumbers: { autoNumber: \"AMS\" } } }); const config = { theme: 'neutral', startOnLoad:true, htmlLabels:true, }; mermaid.initialize(config); hljs.highlightAll(); About Me Linkedlist IntroductionThis article describes the concepts related to linkedlist. Not like arraylist, the nodes in linkedlist are not serial, so we need to store pointers pointing the neighbor of each node in this linkedlist and use these pointers to traverse the nodes to find targeted node. There are two types: singly linked list and doubly linked list. singly linked list: pointer points the next node in each nodegraph LR id1((A)) --> id2((B)) id2((B)) --> id3((C)) id3((C)) --> id4((...)) doubly linked list: pointer points the next and previous nodes in each nodegraph LR id1((A)) --> id2((B)) id2((B)) --> id1((A)) id2((B)) --> id3((C)) id3((C)) --> id2((B)) id3((C)) --> id4((...)) id4((...)) --> id3((C))whyLinked lists can dynamically grow and shrink in size during program execution, whereas the size of an array is fixed at the time of creation. Additionally, inserting or deleting elements in a linked list is relatively efficient, whereas in an array these operations can be expensive if the array is large.HowSingly Linked List coding example:// Define a Node class for the elements of the linked listclass Node { constructor(data, next = null) { this.data = data; this.next = next; }}// Define the LinkedList classclass LinkedList { constructor() { this.head = null; this.tail = null; this.length = 0; } // Add a new element to the end of the list prepand(value) { const newNode = new Node(value); if (!this.head) { this.head = newNode; this.tail = newNode; } else { newNode.next = this.head; this.head = newNode; } this.length++; } append(value) { const newNode = new Node(value); if (!this.head) { this.head = newNode; this.tail = newNode; } else { this.tail.next = newNode; this.tail = newNode; } this.length++; } // Get an element at a specified index get(index) { if (index < 0 || index >= this.length) { return null; } let current = this.head; for (let i = 0; i < index; i++) { current = current.next; } return current.data; } // Remove an element at a specified index remove(index) { if (index < 0 || index >= this.length) { return null; } let current = this.head; if (index === 0) { this.head = current.next; if (this.length === 1) { this.tail = null; } } else { let previous = null; for (let i = 0; i < index; i++) { previous = current; current = current.next; } previous.next = current.next; if (index === this.length - 1) { this.tail = previous; } } this.length--; return current.data; }}// Example usageconst list = new LinkedList();list.add('a');list.add('b');list.add('c');console.log(list.get(1)); // Output: \"b\"list.remove(1);console.log(list.get(1)); // Output: \"c\" create an element: O(1) adding a new element to a LinkedList involves creating a new node and updating the head pointer to point to the new node, which can be done in constant time read an element: O(n) In singly-linked list, the time complexity of read is O(n) in the worst case, where n is the length of the list Unlike an array, where elements are stored contiguously in memory and can be accessed in constant time using an index, in a linked list, we have to traverse the list from the head node to the desired index, which takes linear time proportional to the size of the list. update an element: O(n) In a singly-linked list, the time complexity of update (i.e., modifying an element by index) is also O(n) in the worst case, where n is the length of the list. This is because like accessing an element, we need to traverse the list from the head node to the desired index to update it. Once we have reached the node, updating it takes constant time, i.e., O(1). delete an element: O(n) In a singly-linked list, the time complexity of delete (i.e., removing an element by index) is also O(n) in the worst case, where n is the length of the list. This is because we need to traverse the list from the head node to the node immediately before the one we want to delete, which takes linear time proportional to the size of the list. Once we have found the node before the one we want to delete, we can remove the target node in constant time, i.e., O(1), by updating its predecessor’s next pointer to skip over the target node. specimport {LinkedList} from '../singly_linked_list.js';describe('LinkedList', () => { let testLinkedList; beforeEach(() => { testLinkedList = new LinkedList(); const values = [1, 74, 888, 62, 33]; for(let i = 0; i < values.length; i++){ testLinkedList.append(values[i]); } }); test('#prepand', () => { testLinkedList.prepand(0); expect(testLinkedList.printList()).toEqual([ 0, 33, 62, 888, 74, 1 ]); }); test('#append', () => { testLinkedList.append(0); expect(testLinkedList.printList()).toEqual([ 33, 62, 888, 74, 1, 0 ]); }); test('#insert', () => { testLinkedList.insert(2, 1000); expect(testLinkedList.printList()).toEqual([ 33, 62, 1000, 888, 74, 1 ]); }); // more test to be continued});Doubly Linked Listclass Node { constructor(data) { this.data = data; this.prev = null; this.next = null; }} class DoublyLinkedList { constructor() { this.head = null; this.tail = null; } // create append(data) { // create a node on the tail const newNode = new Node(data); if (this.head === null) { this.head = newNode; this.tail = newNode; } else { this.tail.next = newNode; newNode.prev = this.tail; this.tail = newNode; } } prepend(data) { // create a node on the head const newNode = new Node(data); if (this.head === null) { this.head = newNode; this.tail = newNode; } else { this.head.prev = newNode; newNode.next = this.head; this.head = newNode; } } insert(position, data) { // create a node on particular position const newNode = new Node(data); if (this.head === null) { this.head = newNode; this.tail = newNode; } else if (position > this.length) { this.append(data) } else { const nodeOnPosition = this.traverseToIndex(position - 1); newNode.next = nodeOnPosition; newNode.prev = nodeOnPosition.prev; newNode.prev.next = newNode; } } // read value() { // return the value of node in particular position } values() { // return values from head let current_node = this.head; const result = []; while (current_node !== null) { result.push(current_node.data); current_node = current_node.next; } return result } reverseValues() { // return values from tail let current_node = this.tail; const result = []; while (current_node !== null) { result.push(current_node.data); current_node = current_node.prev; } return result } // traverse traverseToIndex(index) { let currentNode = this.head; for (let i = 0; i < index; i++) { currentNode = currentNode.next; } return currentNode; } // update update(position, value) { // update the value on particular position } // delete remove(position) { // remove the node on particular position if (this.head === null) { return; } if (this.head === this.tail && this.head.data === data) { this.head = null; this.tail = null; return; } if (this.head.data === data) { this.head = this.head.next; this.head.prev = null; return; } let current_node = this.head.next; while (current_node !== null && current_node.data !== data) { current_node = current_node.next; } if (current_node === null) { return; } if (current_node === this.tail) { this.tail = this.tail.prev; this.tail.next = null; return; } current_node.prev.next = current_node.next; current_node.next.prev = current_node.prev; }}module.exports = DoublyLinkedListwhy we need doubly?Traversal in both directions: In a singly linked list, you can only traverse the list in one direction, from the head to the tail. With a doubly linked list, you can traverse the list in both directions, which can be very useful in certain applications.Insertion and deletion at any position: In a singly linked list, if you want to insert a node between two nodes, you need to modify the pointers of the previous node to point to the new node, and the new node to point to the next node. With a doubly linked list, you can simply update the pointers of the neighboring nodes to insert a node in between them. Similarly, when deleting a node from a doubly linked list, you can easily update the pointers of the neighboring nodes to remove the node.Tail traversal: In a singly linked list, if you want to add a new node at the end of the list, you need to traverse the entire list to reach the tail node. With a doubly linked list, you can keep a reference to the tail node and easily add new nodes at the end of the list. Spec const DoublyLinkedList = require('../examples/doubly_linked_list.js');describe('DoublyLinkedList', () => { let testLinkedList; beforeEach(() => { testLinkedList = new DoublyLinkedList(); const values = [1, 74, 888, 62, 33]; for(let i = 0; i < values.length; i++){ // 33 <- 62 <- 888 <- 74 <- 1 testLinkedList.prepend(values[i]); } }); test('#prepend', () => { // 0 <- 33 <- 62 <- 888 <- 74 <- 1 testLinkedList.prepend(0); expect(testLinkedList.values()).toEqual([ 0, 33, 62, 888, 74, 1 ]); expect(testLinkedList.reverseValues()).toEqual([ 1, 74, 888, 62, 33, 0 ]); }); test('#append', () => { // 33 <- 62 <- 888 <- 74 <- 1 <- 0 testLinkedList.append(0); expect(testLinkedList.values()).toEqual([ 33, 62, 888, 74, 1, 0 ]); expect(testLinkedList.reverseValues()).toEqual([ 0, 1, 74, 888, 62, 33 ]); }); test('#insert', () => { // 33 <- 1000 <- 62 <- 888 <- 74 <- 1 testLinkedList.insert(2, 1000); expect(testLinkedList.values()).toEqual([ 33, 1000, 62, 888, 74, 1 ]); }); test('#update', () => { testLinkedList.update(2, 1000); expect(testLinkedList.printList()).toEqual([ 33, 1000, 888, 74, 1 ]); }) test('#delete', () => { testLinkedList.update(2, 1000); expect(testLinkedList.printList()).toEqual([ 33, 1000, 888, 74, 1 ]); })}); WhatWhen solving linklist porblems, always think of recursive.runner techniquetwo pointers iterates through a linkedlist at the same time.Remove Dups problem: Write code to remove duplicates from an unsorted linked list; for example, a linkedlist = [1, 4, 6, 3, 2, 7, 4, 8, 3] -> [1, 4, 6, 3, 2, 7, 8] brute force: It’s trivial, so I just skip to the result code example:function removeDup(linkedList) { // skip brute force, we must at least loop through all node, so the time complexity = O(n), space complexity = O(n) set = new Set(); let currentNode = linkedList.head let previousNode = null for (let i = 0; i < linkedList.length; i++) { if (!set.has(currentNode.value)) { set.add(currentNode.value) } else { previousNode.next = currentNode.next } previousNode = currentNode currentNode = currentNode.next } return linkedList.printList()} testdescribe('RemoveDup', () => { let testLinkedList; beforeEach(() => { testLinkedList = new LinkedList(); const values = [1, 4, 6, 3, 2, 7, 4, 8, 3]; for(let i = 0; i < values.length; i++){ testLinkedList.append(values[i]); } }); test('#', () => { const result = removeDup(testLinkedList) expect(result).toEqual([1, 4, 6, 3, 2, 7, 8]); });});temporary buffer not allowedto be continuedReturn Kth to LastImplementation:function returnKthToLast (linkedList, k) { let counter = 0; let node = this.head; while (node) { if (counter === k) { return node; } counter++; node = node.next; } return null;}Test:let linkedList = new LinkedList();const values = [1, 2, 3, 4, 449, 12];for(let i = 0; i < values.length; i++){ linkedList.insertAtBegin(values[i]);}let node = returnKthToLast(linkedList, 0); // 12, 449, 4, 3, 2, 1let node = returnKthToLast(linkedList, 1); // 449, 4, 3, 2, 1let node = returnKthToLast(linkedList, 2); // 4, 3, 2, 1while (node !== null) { console.log(node.value); node = node.next;}Delete Middle NodeImplementation:function deleteMiddleNode (linkedList) { let nodeFaster = linkedList.head; let nodeSlower = linkedList.head; let preNode = null; while (nodeFaster) { if (!nodeFaster.next?.next || !nodeFaster.next) { preNode.next = preNode.next.next; return linkedList.head } preNode = nodeSlower; nodeSlower = nodeSlower.next; nodeFaster = nodeFaster.next.next; } return null;}Test:let linkedList = new LinkedList();// const values = [1, 2, 3, 4, 449, 12]; // return 12, 449, 3, 2, 1const values = [1, 2, 3, 5, 4, 449, 12]; // return 12, 449, 4, 3, 2, 1for(let i = 0; i < values.length; i++){ linkedList.insertAtBegin(values[i]);}let node = deleteMiddleNode(linkedList);while (node !== null) { console.log(node.value); node = node.next;}To be continued (more questions)WhatReal-world problem that uses an linked list data structure and algorithm I want to parse the steps from a ChatGPT answer and store them as different Nodes in a linked listclass Step { constructor(data) { this.data = data; this.next = null; }}class LinkedList { constructor() { this.head = null; } addStep(data) { const newStep = new Step(data); if (!this.head) { this.head = newStep; } else { let currentStep = this.head; while (currentStep.next) { currentStep = currentStep.next; } currentStep.next = newStep; } } removeStep(data) { if (!this.head) { return; } if (this.head.data === data) { this.head = this.head.next; return; } let currentStep = this.head; while (currentStep.next) { if (currentStep.next.data === data) { currentStep.next = currentStep.next.next; return; } currentStep = currentStep.next; } }}and use this structureconst linkedList = new LinkedList();async function handleQuestion(question) { const answer = await getChatGPTResponse(question); const steps = parseSteps(answer); steps.forEach(step => linkedList.addStep(step));}function parseSteps(answer) { const steps = answer.split('\\n'); return steps.map(step => step.trim()).filter(step => step !== '');}referencecracking the coding interviewPractical Linked List in RubyLinked Lists in JavaScript (ES6 code)The Jest Object /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/dsa/2022/05/23/linkedlist.html"},{"id":13,"title":"Overview","content":" hljs.highlightAll(); About Me Overview Introduction A software program that manages the hardware and software resources of a computer system hardware resources: CPU, memory, and I/O devices software resources: files, databases, and network connections Interface between computer applications and the computer hardware Responsible for managing the computer’s memory, processing power, storage, input/output devices, and other resources. Types desktop operating systems Microsoft Windows macOS Linux server operating systems mobile operating systems Android iOS embedded operating systems Why? To understand how computers work at a low level for computer engineering, software development, and information technology To develop efficient and effective software applications that work well with the underlying operating system To managing computer systems, including servers, networks, and other infrastructure To Enhance security that protect computer systems from external threats, including viruses and hackersHow?How OS WorkOverview of operating system functions, history, and types.How OS WorksProcess ManagementManaging processes, threads, and scheduling algorithms.process managementMemory ManagementMemory allocation, virtual memory, and pagingFile SystemsFile organization, access, and protection.Input/output (I/O) systemsHandling input/output devices, buffering, and interrupt handling.Device driversWriting and managing device drivers.SecurityAuthentication, access control, and security policies.Distributed operating systemsDistributed systems, remote procedure calls, and distributed file systems.Real-time operating systemsReal-time systems, scheduling, and response times.WhatLinuxCase StudyReferenceWhy: asking for the reason or purpose behind something.How: asking for the method or process of doing something.What: asking for information about a specific thing or object. /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/os/2023/04/02/overview.html"},{"id":16,"title":"memory management","content":" const config = { theme: 'neutral', startOnLoad:true, htmlLabels:true, }; mermaid.initialize(config); hljs.highlightAll(); About Me memory management IntroductionMemeory management allocates memory efficiently to processes. process comes -> allocates portions of memory -> free that portion once process finishedI know there are many confusions here. let’s focus on memory first. For some reason (refer to this), we divide memory to equal blocks and we also divide the process into multiple pages; each page can fit into one block and we records where the page stored through mechanisms (refer to this); once CPU tries to deal with this process, the records tell where the whole pages are and form the process and start to process it and the data flow is as follow:graph LR subgraph Process id1(Page 0) id2(Page 1) id3(Page 2) id4(Page 3) ... end subgraph Memory id5(block 0) id6(block 1) id7(block 2) id8(block 3) id9(block 4) id10(block 5) id11(block 6) id12(block 7) ... end id1 --> id13(allocation) id2 --> id13(allocation) id3 --> id13(allocation) id4 --> id13(allocation) id13(allocation) --> id5(Page 0) id13(allocation) --> id12(Page 1) id13(allocation) --> id8(Page 2) id13(allocation) --> id10(Page 3)Why?why memory management important?How?Six famous methods: Fixed Partitioning, Dynamic Partitioning, Simple Paging, Simple Segmentation, Virtual-Memory Paging and VirtualMemory SegmentationFixed PartitioningDynamic PartitioningSimple PagingSimple SegmentationVirtual-Memory PagingVirtualMemory SegmentationWhat?Referencememory managementMemory managementMemoryManagement techniques and Processes SchedulingDemystifying memory management in modern programming languagesVisualizing memory management in V8 Engine (JavaScript, NodeJS, Deno, WebAssembly)Operating System - Memory Management /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/os/2021/12/24/memory-management.html"},{"id":28,"title":"Ch1 Chemical Foundations","content":" MathJax.Hub.Config({ TeX: { equationNumbers: { autoNumber: \"AMS\" } } }); const config = { theme: 'neutral', startOnLoad:true, htmlLabels:true, }; mermaid.initialize(config); hljs.highlightAll(); About Me Ch1 Chemical Foundations IntroductionThis article describes fundamental knowledge and skills in science as follow: scientific method unit of measurements measurement dimensional analysis matter & mixtureWhy?focus on why we need itHow?scientific methodgraph LR id1((observation)) --> id2((ask why)) id2((ask why)) --> id3((setup hypothesis)) id3((setup hypothesis)) --> id4((experiment)) id4((experiment)) -- not found, refine --> id3((setup hypothesis)) id4((experiment)) -- found --> id5((conclusion)) id5((conclusion)) --> id6((law)) id5((conclusion)) --> id7((theorymodel)) id7((theorymodel)) --> id8((prediction)) id8((prediction)) --compare with--> id1((observation)) law summarizes what happens; for example, law of conservation of mass: chemical change does not affect total mass of materials theory explains why it happensunit of measurementsSI means Système InternationalSI units physical quantity name of unit abbreviation mass kilogram kg length meter m time second s temperature kelvin K electric current ampere A amount of substance mole mol luminous intensity candela cd prefixes in SI systemTBCmeasurement uncertainty: occuring because of the precision of the measuring device significant figures: recording the certain digits and the first un- certain digit accuracy and precision accuracy: how close a given set of measurements are to their true value precision: how close the measurements are to each other random and system error random: unpredictable and cannot be replicated by repeating experiments system: consistent errors in experiments exponential notation: 6234000 -> \\(6.234 * 10^6\\)dimensional analysisDimensional analysis make sure the result is reasonable. For example, a men’s speed is \\(10 m/s\\), then after 10 seconds, he will walk\\[10 m/s * 10s = 100m\\]we ensure the result by dimensional analysis as \\(m/s * s = m\\), making the result 10 m is truly distance of walking.matter & mixturegraph TD id1((matter)) --variablecomposition--> id2((mixture)) id1((matter)) --notvariablecomposition--> id3((pure substances)) id2((mixture)) --visblydistinguishable--> id4((Heterogeneous)) id2((mixture)) --notvisblydistinguishable--> id5((Homogeneous)) id3((pure substances)) --variousatoms--> id6((compound)) id3((pure substances)) --novariousatoms--> id7((element)) Matter can exist in solid, liquid, gas seperate mixtures physically through distillation, filtration, chromatography decompose compound to elements through chemical changesWhat?TBC (should practice some examples)NoteSection 1.9matterstates (of matter) homogeneous mixtureReferenceChemistry, ZumdahlThe scientific method /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/chemistry/2022/08/21/ch1-chemical-foundations.html"},{"id":31,"title":"Database","content":" hljs.highlightAll(); About Me Database IntroductionA database is a structured collection of data that is organized and managed in a way that allows users to easily access, modify, and query the information stored within it. Databases are commonly used in various industries, including business, healthcare, education, and government, to efficiently store, retrieve, and analyze large amounts of data.Why?Databases provide a structured and efficient way to store, manage, and retrieve large amounts of data.How?Identify the dataAfter we know what problem to solve, we can start by identifying the types of data that you need to store and organize in the database.Choose a database management systemAfter we know what data types to store, we start to choose database management systems (DBMS) such as (open source only) Relational MySQL PostgreSQL SQLite NoSQL Object-orientedDesign the database schemaThe database schema is the structure that defines how the data is organized in the database. Identify the tables, fields, and relationships between them.Implement the databaseCreate the database using your chosen DBMS and the database schema you designed.Populate the databaseAdd data to the database, either manually or through automated data migration.Test the databaseMake sure the database is working as expected by testing its functionality, performance, and security.Maintain the databaseRegularly perform maintenance tasks such as backups, updates, and security checks to ensure the database remains secure and performs optimally.ProblemGiven the problems, chose suitable type of database relational database NoSQL database timeseries data: TimescaleDB TimescaleDBIn timeseries data, how to read and update data efficiently is more important than the relationship between each row in tables and the solution lays on how to define the unit to be CRUD in database.TimescaleDB has two key mechanisms: the frequency of slicing a chunk increase when the data per time period increases the data would be postponed to the future chunk when the data arrives earlierwhich solves problems in the following trivial approaches: fixed-duration intervals: slice the data once in a fixed time period; data naturally getting larger as the time pass; as a result, the data stored in each fixed time period increases, which still cause too much data to read problem in the future. fixed-sized chunks: slice the data once a fixed amount of data; there may be time lag while saving data into database; as a result, there may be larger data chunk because all the data saved at the same time. what /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/database/2022/08/12/database.html"},{"id":35,"title":"Visitor","content":" const config = { theme: 'neutral', startOnLoad:true, htmlLabels:true, }; mermaid.initialize(config); hljs.highlightAll(); About Me Visitor IntroductionThis article describes the concept of visitor design pattern, which separates common operations with the objects performing those operations; for example, we want all different types of employees (manager or clerk) to use same style of greetings objects: employees visitor pattern: employee rules operations: greetings const id = 'visitor' let binarySearchTree = p5Draw(id) let binarySearchTreeP5 = new p5(binarySearchTree, id);Why?By modifying the common operations method in visitor pattern, all objects using the common operations behaves consistently. pros: Open/Closed Principle: we can introduce new methods to objects without changing the classes of these objects Single Responsibility Principle: we can define related operations in one class visitor object collects common information in one class, easier to compare different behaviors cons: When number of objects changes, we need to update all the common operations How?The Structure:Source: https://refactoring.guru/design-patterns/visitor to call methods in visitor pattern, we need accept in Element interfaceWhat?when a customer walk into a restaurant, we want both manager and clerk to greet with special slogan and self introductions serve meals with same movement and different kind of professionsWith visitor pattern, we can change special slogan and movement day by day without break the classes of objects.class Employee # Element def accept(_visitor) raise NotImplementedError, \"#{self.class} has not implemented method '#{__method__}'\" endendclass Manager < Employee def accept(visitor) visitor.manager(self) end def status 'Manager' end def profession 'order meal' endendclass Clerk < Employee def accept(visitor) visitor.clerk(self) end def status 'Clerk' end def profession 'make meal' endendclass Visitor def manager(_element) raise NotImplementedError, \"#{self.class} has not implemented method '#{__method__}'\" end def clerk(_element) raise NotImplementedError, \"#{self.class} has not implemented method '#{__method__}'\" endendclass SayHi < Visitor def manager(element) puts \"#{self.special_slogan}, I am #{element.status}\" end def clerk(element) puts \"#{self.special_slogan}, I am #{element.status}\" end def special_slogan 'Special Slogan this week!' endendclass ServeMeal < Visitor def manager(element) puts \"#{self.same_pose}, and then #{element.profession}\" end def clerk(element) puts \"#{self.same_pose}, and then #{element.profession}\" end def same_pose 'dance dance dance' endenddef client_code(components, visitor) components.each do |component| component.accept(visitor) endendcomponents = [Manager.new, Clerk.new]say_hi = SayHi.newclient_code(components, say_hi)serve_meal = ServeMeal.newclient_code(components, serve_meal)Reference[ Day 25 ] 每個人關心的點都不同 - 訪問者模式 (Visitor Pattern)The Visitor Pattern Explained and Implemented in Java Behavioral Design Patterns GeekificVisitor /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/design-pattern/2022/10/28/visitor.html"},{"id":36,"title":"Command","content":" const config = { theme: 'neutral', startOnLoad:true, htmlLabels:true, }; mermaid.initialize(config); hljs.highlightAll(); About Me Command IntroductionThis article describes the concept of command pattern. The basic UML:graph LR id1(Invoker) --usecommandsthrough--> id3(ConcreteCommand1) id1(Invoker) --usecommandsthrough--> id4(ConcreteCommand2) subgraph commands id4(ConcreteCommand2) --inheritfrom--> id2(InterfaceCommand) id3(ConcreteCommand1) --inheritfrom--> id2(InterfaceCommand) end id3(ConcreteCommand1) --sendcommandto--> id5(Receiver) Invoker can be anything. We can attach the ConcreteCommand to any button. ConcreteCommands in a particular invoker can request commands to more than one receiver or no receiverclassDiagram class Invoker Invoker : command Invoker : +setCommand(command) Invoker : +executeCommand() class Receiver Receiver : methods() class ConcreteCommand ConcreteCommand : receiver ConcreteCommand : commands ConcreteCommand : +execute(command) ConcreteCommand : +unexecute(command)pros Single Responsibility Principle. Decouple invoking operations from performing operations Open/Closed Principle. Introduce new commands without breaking existing client code reversible commands can store the commands as parameters -> store them -> execute them later or on particular time decompose commands as meticulous as possible and reassemble them to other complex commandscons may creates too detailed and too many classes for commandsWhy?With command pattern, we can wrap operations into stand-alone objects in which we can change remote control (invoker) queue series commands (not every language supports metaprogramming) we can also store them in database, not only RAM reverse commands (unexecute) (恢復上一動)What?ruby exampleA robot performs a serial movements to dance: right leg, left leg, head, butt and we can write a script as follow:class Robot def initialize end def move_right_leg puts 'move right leg' end def move_left_leg puts 'move left leg' end def move_head puts 'move head' end def move_butt puts 'move butt' end # ... other movementsendrobot = Robot.newrobot.move_right_legrobot.move_left_legrobot.move_headrobot.move_buttWith command pattern, we can achieve properties: change remote control (invoker) queue series commands (not every language supports metaprogramming) can reverse command (unexecute) (恢復上一動)class Robot # unchanged def initialize end def move_right_leg puts 'move right leg' end def move_left_leg puts 'move left leg' end def move_head puts 'move head' end def undo_right_leg puts 'undo right leg' end def undo_left_leg puts 'undo left leg' end def undo_head puts 'undo head' end # ... other movementsendclass Command def execute raise NotImplementedError, \"#{self.class} has not implemented method '#{__method__}'\" end def unexecute raise NotImplementedError, \"#{self.class} has not implemented method '#{__method__}'\" endendclass CustomCommand < Command def initialize(receiver, commands) @receiver = receiver @commands = commands end def execute @commands.each do |command| case command when 'move_right_leg' @receiver.move_right_leg when 'move_left_leg' @receiver.move_left_leg when 'move_head' @receiver.move_head when 'move_butt' @receiver.move_butt end end end def unexecute @commands.reverse_each do |command| case command when 'move_right_leg' @receiver.undo_right_leg when 'move_left_leg' @receiver.undo_left_leg when 'move_head' @receiver.undo_head when 'move_butt' @receiver.undo_butt end end endendclass HeadCommand def initialize(receiver) @receiver = receiver end def execute @receiver.move_head end def unexecute @receiver.undo_head endendclass Invoker # can be attached to any remote control def initialize @history = [] end def on_press_custom_button=(commands) # you can change custom button to any other button @on_press_custom_button = commands end def on_press_head_button=(command) # you can change custom button to any other button @on_press_head_button = command end def execute_custom_command @on_press_custom_button.execute if @on_press_custom_button.is_a? Command @history.push @on_press_custom_button end def execute_head_command @on_press_head_button.execute if @on_press_head_button.is_a? Command @history.push @on_press_head_button end def undo puts @history command = @history.pop if !command.nil? command.unexecute end endendUsageinvoker = Invoker.newreceiver = Robot.newinvoker.on_press_custom_button = CustomCommand.new(receiver, ['move_right_leg', 'move_left_leg'])invoker.on_press_head_button = HeadCommand.new(receiver)invoker.execute_custom_command# results# move right leg# move left leginvoker.undo# results# undo left leg# undo right leginvoker.execute_custom_commandinvoker.execute_head_commandinvoker.undoinvoker.undoReferenceCommand Pattern – Design Patterns (ep 7)Command /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/design-pattern/2022/08/25/command.html"},{"id":38,"title":"absctact factory","content":" const config = { theme: 'neutral', startOnLoad:true, htmlLabels:true, }; mermaid.initialize(config); hljs.highlightAll(); About Me absctact factory Introduction & WhyGiven that we know the factory method, which can create same kind of monster with different level. That is, we call the factory to use its product line to create same kind of product but choose different feature during the process of production. What if we want the factory to create various product? We need the factroy to have various product lines.The result would be as follow:def create_monsters(factory) monster_a = factory.create_monster_a monster_b = factory.create_monster_bendNote that here only two monster using one factory, meaning each factory has its own two product lines for these two monsters. We can do more complex design such as two factory using same product line for monster_a. But I am going to just demo it with two product line in each factory.How?Let’s say we want two methods for three environments: ocean plainand there are two types of monsters: horse & fish. The horse monster is strong in plain but weak in ocean; the fish monster is strong in ocean but weak in plain. We need two factories for two environments. Each has two product lines.so the methods to create the monsters accroding to the envrionmnets would be as follow:def create_monsters(FactoryOcean.new)enddef create_monsters(FactoryPlain.new)endand the UML would be as follow: classDiagram Fish <-- StrongFish : is a Fish <-- WeakFish : is a Horse <-- StrongHorse : is a Horse <-- WeakHorse : is a AbstractFactory <-- FactoryOcean : is a AbstractFactory <-- FactoryPlain : is a FactoryOcean : create_strong_fish() FactoryOcean : create_weak_horse() FactoryPlain : create_weak_fish() FactoryPlain : create_strong_horse() StrongFish <-- FactoryOcean : create WeakFish <-- FactoryPlain : create WeakHorse <-- FactoryOcean : create StrongHorse <-- FactoryPlain : createWhat?class AbstractFactory def create_fish raise NotImplementedError, \"#{self.class} has not implemented method '#{__method__}'\" end def create_horse raise NotImplementedError, \"#{self.class} has not implemented method '#{__method__}'\" endendclass FactoryOcean < AbstractFactory def create_fish StrongFish.new end def create_horse WeakFish.new endendclass FactoryPlain < AbstractFactory def create_fish WeakFish.new end def create_horse StrongHorse.new endendclass Fish def power raise NotImplementedError, \"#{self.class} has not implemented method '#{__method__}'\" endendclass StrongFish < Fish def power 'strong fish' endendclass WeakFish < Fish def power 'weak fish' endendclass Horse def power raise NotImplementedError, \"#{self.class} has not implemented method '#{__method__}'\" endendclass StrongHorse < Horse def power 'strong horse' endendclass WeakHorse < Horse def power 'weak horse' endenddef create_monsters(factory) fish = factory.create_fish horse = factory.create_horse puts fish.power puts horse.powerendcreate_monsters(FactoryOcean.new)create_monsters(FactoryPlain.new)ReferenceAbstract Factory Pattern – Design Patterns (ep 5) /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/design-pattern/2022/04/09/abstract-factory.html"},{"id":39,"title":"factory method","content":" const config = { theme: 'neutral', startOnLoad:true, htmlLabels:true, }; mermaid.initialize(config); hljs.highlightAll(); About Me factory method IntroductionImage that you have a factory and the product lines would be as follow: const imagePath = '/assets/img/factory_method_concept.png' const conceptDiv = document.getElementById('concept'); const conceptWidth = conceptDiv.offsetWidth; let eraseEnable = false; let img; let photoGraph; function setup() { setupImage () setupButton () setupCanvas () setupGraphics () } function draw() { image(img, 0, 0, conceptWidth, 400); image(graphic, 0, 0) } function mouseDragged() { if (!eraseEnable) { graphic.fill('black'); graphic.noStroke(); graphic.ellipse(mouseX, mouseY, 5, 5); } else { graphic.fill('white'); graphic.noStroke(); graphic.ellipse(mouseX, mouseY, 10, 10); } } function keyTyped() { if (key === 's') { saveCanvas('decorator_concept.png'); } } function setupImage () { try { img = loadImage(imagePath); } catch { img = createImage(conceptWidth, 400) } } function setupButton () { toggleButton = createButton('erase'); toggleButton.parent('concept toggle'); toggleButton.addClass(\"border rounded px-4\"); toggleButton.mouseClicked(ButtonClicked) } function setupCanvas () { const concept = createCanvas(conceptWidth, 400); concept.parent('concept canvas'); } function setupGraphics () { graphic = createGraphics(conceptWidth, 400); } function ButtonClicked () { toggleStyle() toggleErase() } function toggleErase() { if (eraseEnable) { noErase(); eraseEnable = false; } else { erase(); eraseEnable = true; } } function toggleStyle() { toggleButton.toggleClass(\"bg-indigo-100\"); toggleButton.toggleClass(\"border\"); }The key concept lays on that factory determines which products to be produced on the product line, which means factory method design pattern determines which kind of object to be produced on compile time.Why?Factory manufactures lots of products with some common characteristics. The factory method pattern demonstrates the way to create various classes with some common characteristics, meaning we do not need lots of class to create lots of objects with some common features.How?For example, you are creating a game and there are various maps in the world. You can use the factory method pattern to create the monsters in the world with creation logic you want. If I want the maps all fill with various monster randomly, then the UML would be as follow: classDiagram Monster <-- MonsterHard : is a Monster <-- MonsterEasy : is a Monster : common_attributes Monster : common_methods() MonsterHard : some_hard_attributes MonsterHard : some_hard_method() MonsterEasy : some_easy_attributes MonsterEasy : some_easy_method() Creator <-- HardModeCreator : is a Creator <-- EasyModeCreator : is a Creator : factory_method() Creator : create() HardModeCreator : create_more_hard_monsters() EasyModeCreator : create_more_easy_monsters() HardModeCreator <-- MonsterHard : created_by EasyModeCreator <-- MonsterEasy : created_byWhat?class Creator def factory_method raise NotImplementedError, \"#{self.class} has not implemented method '#{__method__}'\" end def create product = factory_method product.roar endendclass HardModeCreator < Creator def factory_method MonsterHard.new endendclass EasyModeCreator < Creator def factory_method MonsterEasy.new endendclass Monster def roar raise NotImplementedError, \"#{self.class} has not implemented method '#{__method__}'\" endendclass MonsterHard def roar puts 'hard monster come!' endendclass MonsterEasy def roar puts 'easy monster come!' endenddef create_monster(factory) factory.createendcreate_monster(HardModeCreator.new)create_monster(EasyModeCreator.new)As you can see, all the monster creation use the method, create_monster and call different type of factory.ReferenceFactory Method Pattern – Design Patterns (ep 4)Factory Method in Ruby /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/design-pattern/2022/04/06/factory-method.html"},{"id":42,"title":"prototype","content":" const config = { theme: 'neutral', startOnLoad:true, htmlLabels:true, }; mermaid.initialize(config); hljs.highlightAll(); About Me prototype IntroductionFor example, at first, there is only one supervisor and the host needs to print file with the title of that supervisor; however, right before the meeting, another supervisor requests to join the meeting, so we need another same file with different title. The host now may have these options: copy the file and change the title of the copyed file (V) change the title of the file and print it out -> increaseing the risk that the wrong title printed out in other file rewrite the whole file -> takes too much time and some informations from private third-party departments may not be available while rewriting some confidential informations may need the customized styles to emphasize only used in this particular file for particular meetingsPrototype design pattern serves as the same concepts of the copy process (option 1); for creating new object by clone other object and do required modifications at run time.Why? run time saving (no need to reconstructure the file) avoid objects created dependent on class (we do not need to modify class to create new objects, which may affect the objects created after the midification) some private field must only connected to this object cannot be used in other objectHow? & What?the concept of copyGiven the documents looks like{ :title => 'supervisor_1', :article => ['article_1', 'article_2'], :confidential => ['confidential_1', 'confidential_2']}While programming, we may just declare another variable and change the title as followx1 = { :title => 'supervisor_1', :article => ['article_1', 'article_2'], :confidential => ['confidential_1', 'confidential_2']}x2 = x1x2[:title] = 'supervisor_2'puts x1 # the title changedThe title changed because both x2 and x1 points to the same object. We need the concept of copy to help us shallow copy (only copy the first layer and the objects of second layer still points to the same objects from the copyed object) deep copy (copy whole objects including the nested objects)In ruby, dup or clone are both shallow copyx1 = { :title => 'supervisor_1', :article => ['article_1', 'article_2'], :confidential => ['confidential_1', 'confidential_2']}x2 = x1.clonex2[:title] = 'supervisor_2'puts x1 # the title unchangedputs x2If we change the nested value as follow:x1 = { :title => 'supervisor_1', :article => ['article_1', 'article_2'], :confidential => ['confidential_1', 'confidential_2']}x2 = x1.clonex2[:article][0] = 'hahahaha'puts x1 # the article of x1 also changedputs x2To avoid it, we use deep_dup in ActiveSupport from railsx1 = { :title => 'supervisor_1', :article => ['article_1', 'article_2'], :confidential => ['confidential_1', 'confidential_2']}x2 = x1.deep_dupx2[:article][0] = 'hahahaha'puts x1 # the article of x1 not changedputs x2DemonstrationIf we build the class intuitively, we may just create a class as follow:class Prototype attr_accessor :title, :articles, :confidentials def initialize @title = nil @articles = nil @confidentials = nil end def clone @articles = deep_copy(@articles) @confidentials = deep_copy(@confidentials) @confidentials.prototype = self deep_copy(self) end private def deep_copy(object) Marshal.load(Marshal.dump(object)) endendclass ConfidentialReference attr_accessor :prototype def initialize(prototype) @prototype = prototype endend# The client code.p1 = Prototype.newp1.title = 'supervisor_1'p1.articles = ['article_1']p1.confidentials = ConfidentialReference.new(p1)p2 = p1.clonep2.title = 'supervisor_2'# ============# checkp1.title != p2.title # for two different supervisorp1.articles.equal?(p2.articles) # two different articles with same contentp1.confidentials.equal?(p2.confidentials)p1.confidentials.prototype.equal?(p2.confidentials.prototype) # again two different confidential articles with same content, so if the information leaks, we know who did it.design graph and pseudocodeThe code in section, Demonstration, is for one document. We can extend this design for more documents as following design graph and pseudocodedesign graphclassDiagram Client --|> Prototype : Call DocumentOne <|-- Prototype : Inherited From DocumentTwo <|-- Prototype : Inherited From Prototype : clone() DocumentOne: FieldOne DocumentTwo: FieldTwopseudocodeclass Prototype def clone endendclass ConfidentialReference ...endclass DocumentOne < Prototype def initialize @document = 'One' super end ...endclass DocumentTwo < Prototype def initialize @document = 'Two' super endendReferencePrototype Design Pattern Tutorial[Design Pattern] Prototype 原型模式PrototypePython Shallow Copy and Deep Copy /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/design-pattern/presentation/2022/03/22/prototype.html"},{"id":44,"title":"overview","content":" hljs.highlightAll(); About Me overview IntroductionBefore we get started, please understand object-oriented programming first. Design pattern provides elegant solutions to repeatable problems. There are three categories: Creational patterns: different ways to create objects Structural patterns: the relationship between these objects Behavioral patterns: interaction or communication between these objectsWhy?Design reusable and extensible object-oriented software.How?Main 23 design patterns as follow: creational: factory method, builder, prototype, singleton, abstract method structural: composition, decorator, adapter, proxy, bridge, facade, flyweight behavioral: observer, template Method, strategy, interpreter, chain of Responsibility, command, iterator, mediator, memento, null Object, state, visitorcomparison Creational design patterns try to create objects in a manner suitable for the situation Factory Method provides a way to delegate the creation of objects to subclasses. It’s useful when you want to create objects without specifying the exact class of object that will be created. Builder separates the construction of a complex object from its representation, so that the same construction process can create different representations. It’s useful when you want to create complex objects with many optional parameters. Prototype involves creating new objects by cloning existing objects. It’s useful when creating objects is expensive, and you want to reuse existing objects. Singleton ensures that only one instance of a class can be created, and provides a global point of access to that instance. It’s useful when you want to limit the number of instances of a class, or when you need to coordinate actions across the system. Abstract Method: This pattern provides an interface for creating families of related objects, without specifying the concrete classes of those objects. It’s useful when you want to create objects that share a common interface, but have different implementations. Structural design patterns deal with object composition and provide ways to organize objects to form larger structures Composition: This pattern allows you to create hierarchical structures of objects by composing objects into tree structures. It’s useful when you want to represent part-whole hierarchies. Decorator: This pattern allows you to add behavior to objects dynamically by wrapping them in an object of a decorator class. It’s useful when you want to add functionality to an object without changing its interface. Adapter: This pattern allows you to adapt an object to another interface, without changing the underlying object. It’s useful when you want to reuse existing code with a different interface. Proxy: This pattern provides a surrogate or placeholder for another object to control access to it. It’s useful when you want to add security, logging, or caching to an object. Bridge: This pattern separates an object’s interface from its implementation, so that the two can vary independently. It’s useful when you want to decouple an abstraction from its implementation, allowing both to evolve independently. Facade: This pattern provides a simplified interface to a complex subsystem of objects. It’s useful when you want to provide a simple interface to a complex system. Flyweight: This pattern allows you to share objects to reduce memory usage, by sharing common parts of state between objects. It’s useful when you want to create many objects with similar state. Behavioral design patterns deal with communication between objects and how objects interact with each other Observer: This pattern allows you to define a one-to-many dependency between objects, so that when one object changes state, all its dependents are notified and updated automatically. It’s useful when you want to keep multiple objects in sync with each other. Template Method: This pattern defines the skeleton of an algorithm in a base class, allowing subclasses to provide concrete implementations of certain steps. It’s useful when you want to define the basic structure of an algorithm, while allowing certain steps to be customized. Strategy: This pattern allows you to define a family of interchangeable algorithms, encapsulate each one, and make them interchangeable at runtime. It’s useful when you want to choose an algorithm dynamically, based on runtime conditions. Interpreter: This pattern provides a way to define the grammar of a language, and to interpret sentences in that language. It’s useful What?give general example to each patternfactory methodwait the other articlesbuilderprototypesingletonabstract methodReferenceSoftware design patternDesign Patterns in Plain English Mosh Hamedani /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/design-pattern/2022/01/30/overview.html"},{"id":47,"title":"Capitalism","content":" hljs.highlightAll(); About Me Capitalism IntroductionThis article describes my thoughts about the best system of economy.Why?Existed problems there are worldwide and the best solution now is to build a startup to solve the problem with sustainable business model. Capitalism is the main reason why we need sustainable business model. That is, problems around the world may contradict this system, so we should focus on solving other problems instead of those we thought important such as health, poverty, inequality, …etc.How?Given the training of economics, I will decompose capitalism with micro and macro methodologies and use statistics to answer the causalities.What?give an exampleReference /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/economics/2022/08/13/capitalism.html"},{"id":48,"title":"(independent) Take Risk","content":" hljs.highlightAll(); About Me (independent) Take Risk Successful people try new things and take risks rather than only doing what they know how to do well.People often have different perspective on whether to take risks to be successful. Based on my past experience, I believe that people should try new things to get a successful results.Firstly, I am a curious person and I always want to learn more things and try to use those knowledges to build new things. For example, I wrote a simple program and saved aroudn 50% processing time of a daily task when I was a financial analyst in a big company. Because of this program, I had a better career.Secondly, I actually like to take risks. To be more specific, I had founded a company with my friends and we actually make good impact on shrimp industry with advanced technology. Not only I contributed to economy growth but I get a big fortune with it.Thirdly, I really like to learn new things and I can combine these new knowledges with past experiences to inspire myself for building new adventures. That is to say, I am now building a software application with blockchain technology and wish I can give positive impact to the world.In conclusion, given my curious personality, willingness to take risk and eagerness to learn, I believe that people should not only do what they know how to do well. We should all try new things and take risks to gain a sucessful results. /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/english/2022/12/19/(independent)-take-risk.html"},{"id":49,"title":"(independent) Library","content":" hljs.highlightAll(); About Me (independent) Library Library exist or notPeople often have different opinions towards whether library will disappear because of the development of technology. In my opinion, the library will not disappear in the future.Firstly, I am a person needing environment to study and I actually like to learn search knowledge on internet in library. For example, as a software engineer, I build a blog to record my daily readings with code in library. Although I actually do not borrow books from library, I still like to work on blogs in library.Secondly, as a student with master degree, I do know that the authors of studies can choose whether to offer their articles on the internet. That is, the readers may not have the opportunity to read these materials on the internet and they must go to the library in universities to obtain required knowledge.Finally, library can serve as a place for people gathering because not all knowledge acquiring events can be hold on the internet. To be more specific, during the pandemic, I had tried to join study group on the internet but it is quite difficult to have deeper conversation because of unstable wifi. But if we can meeting in the library, we there will not be a problem.Given that I am a person needing environment to study, I do not want to share my study article on internet and I had faced problem related to internet issues during meetings, I think library will not disappear. That is to say, there are always some people like me, who needs libraries. /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/english/2022/12/19/(independent)-library.html"},{"id":51,"title":"(independent) Decorate Romm","content":" hljs.highlightAll(); About Me (independent) Decorate Romm Some prefer to decorate their room, study room or other places. Some keep it simple. Which do you prefer and why?People possess different perspectives on whether to decorate their room. As for me, I do not decorate my room at all.Firstly, I am an outgoing person. As a result, I often go out with my friends on my leisure time. That is, my room is only for me to sleep. To be more specific, I always stay outside my house from 8 a.m. to 10 p.m, so I really do not gain any energy in my personal room.Secondly, I am a poor person and decorate my room will cost me too much money. For example, I know my room is really boring and should not just have only one bed and one table, meaning I should have some budgets to buy something new to decorate it. However, the reality do not allow me to do it. Accordingly, I prefer to keep it simple.Finally, I really enjoy my focusing time to accomplish tasks smoothly and too many unnecessary things in my room must distract me. For instance, when I only have a table, I only need to clean this table and then I can start my work. Nevertheless, if I have too many decorations on my desk, I will need to reorganized them first, which take time and makes me inefficient.In conclusion, I will keep my room as simple as possible. After all, I am an outgoing person, trying to save more money and be more efficient on my work. /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/english/2022/12/19/(independent)-decorate-romm.html"},{"id":55,"title":"(independent) Advertisement","content":" hljs.highlightAll(); About Me (independent) Advertisement Most advertisements make products seem much better then they really are.People often possess different perspective on whether the advertisements exaggerate the products. As for me, I strongly argue that the advertisements are fake.First of all, the company cares about revenue and lying on the effects of products will help the company get at least income once. For example, when a company said that its product can clean any dirt in the world, the customers will buy this product because the company lets them feel this product is really good. On the other hand, if they did not exaggerate the properties of the product, the customers would not give this product any chance. Apparently, on the aspect of revenue, not exaggerating the effects is not a good strategy.Secondly, the company cares about the cost and telling the truth will not lower the cost. For instance, when the company tries to tell the truth, it may spend a really long advertisement explaining all the advantages of this product to persuade customers to buy it. However, the company can also take really short time to tell some exaggerated truth and let potential users to evaluate this product themselves. Therefore, on the aspect of cost, the company can transfer the cost of telling the details to the potential buyers.Last but not least, the company cares about eye balls. That is, the more people viewing this advertisement, the more potential customers will buy the products. Take apple watch as example, it will tell audiences that it can evaluate people’s health correctly. With common senses, we all know their applications are not doctors but the advertisement still achieve the purpose which attracts as many attractions as possible. That is, on the aspect of engagement, with exaggerated advertisements, the company can at least ensures the sources of customers.In conclusion, I really think the advertisements are all fake intentionally. After all, its responsibility is to bring as many potential customers as possible. /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/english/2022/11/21/(independent)-advertisement.html"},{"id":60,"title":"(toefl) Listening","content":" hljs.highlightAll(); About Me (toefl) Listening IntroductionThis article describes how to answer listening questions.Why?ToeflHow?Active listening is to infer the speaker’s purpose. So after listening the passage, we should know what questions may besteps drop down template when explanation conversation: T shape lecture: 6 grids while listening cross line for conversation or six grid for lecture make sure express v.o in notes guess questions based on information in notes main idea & purpose conclusion (how) (attitude) (attitude change) detail 1 detail 2 while answering read questions drop down keywords based on information before (must based on information in notes to avoid overgeneralization) pick answer mentioned in the notes Answer questions and grading Now we know whether the guesses are correct. Based on the information, we can listen it again and drop down note again for keywords of those questions Retrospect two different notes with key hintskey hintsListening is to find main idea, conclusion, attitude, detailtesttry to answer each question within 33 secondsWhat?conversation main idea the speaker will tell us and we should write it down conclusion In the end of conversation, make sure to write down the conclusion attitudes must, surprising, interesting … emphasis: repetition, transition, heavy tone, pause, slow details definition comparison cause lectureReferenceTPO /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/english/2022/11/19/(toefl)-listening.html"},{"id":53,"title":"(integration) Is Vessels The Same As Batteries","content":" hljs.highlightAll(); About Me (integration) Is Vessels The Same As Batteries Summarize the reading and lecture about the vesselBoth the reading and the lecture discuss whether the vessels, clay jay contained a copper cylinder surrounding an iron rod, were used as batteries in ancient times. The reading implies that the vessels were not used as batteries. However, the professor strongly disagrees with the reading passage.First of all, the reading passage mentions that no metal wires were attached to the vessels. Yet, the lecturer severely challenges the theory by arguing that the local people are not geologist. To elaborate, she states that they may not recognize the metal wires. Therefore, they may overlook the proof.Secondly, the passage suggests that the copper cylinder were used for holding scrolls of scared texts. Nevertheless, the scholar seriously contradicts the hypothesis because the copper cylinders later discovered with water can produce electricity. As a result, the copper can later be used for other reason, not just for holding scrolls.Last but not least, the reading indicates that no devices can reply on electricity in ancient time. Once again, the speaker opposes the evidence revealed in the passage because evidences showed that there are some invisible power in ancient times. To elaborate, the electricity may be used for healing or showing magic powers. Apparently, it may still be useful in ancient time even without devices.In conclusion, the professor argues against each theory in the reading. That is to say, he maintains that the vessels are batteries in ancient times. /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/english/2022/11/26/(integration)-is-vessels-the-same-as-batteries.html"},{"id":19,"title":"Origami","content":" hljs.highlightAll(); About Me Origami IntroductionOrigami is the Japanese art of paper folding that involves transforming a flat sheet of paper into a three-dimensional object using folding techniques. It has a rich history dating back centuries and has become a popular art form around the world. One of the unique aspects of origami is that it requires no cutting or gluing, and designs can range from simple to complex. Origami has educational and therapeutic benefits, improving skills such as hand-eye coordination, spatial reasoning, and problem-solving, while reducing stress and anxiety. Enjoyed by people of all ages and skill levels, origami is a fun and relaxing activity that encourages creativity and innovation.Why?Creative expression: Origami is a fun and creative way to express yourself and make something beautiful and unique. You can use your imagination to create a wide range of objects, from animals and flowers to geometric shapes and more.Relaxation: Folding paper can be a relaxing and meditative activity that helps reduce stress and anxiety. The repetitive motions of folding and creasing can be soothing and calming, promoting a sense of mindfulness and relaxation.Education: Origami has many educational benefits, such as improving hand-eye coordination, spatial reasoning, and problem-solving skills. It can also be used as a teaching tool in math, science, and other subjects.Socialization: Origami can be a social activity that brings people together. You can participate in classes or workshops, attend origami conventions or events, or join online communities to connect with other origami enthusiasts.Therapy: Origami has therapeutic benefits, especially for people with disabilities or mental health issues. It can improve fine motor skills, increase focus and attention, and provide a sense of accomplishment and self-esteem.How?Choose your paper: You can use any type of paper for origami, but the best paper is thin, easy to fold, and comes in different sizes and colors. You can find origami paper in craft stores, online, or even in some bookstores. Standard origami paper is usually square and comes in sizes ranging from 3 to 10 inches.Choose a design: There are countless origami designs to choose from, ranging from simple to complex. Some popular designs include animals, flowers, and geometric shapes. You can find instructions for many designs online, in books, or in magazines.Read the instructions: Before you start folding, it’s important to read and understand the instructions. Origami instructions typically use symbols to indicate the folds, so make sure you understand what each symbol means. Some instructions may also include written steps or diagrams.Make your first fold: Start by making a basic fold. For example, if you’re making a crane, fold the paper in half diagonally to create a triangle.Continue folding: Follow the instructions to make more folds, creases, and tucks. Use your fingers or a bone folder to make sharp creases. Make sure to fold the paper neatly and precisely.Shape the paper: Once you’ve made all the folds, use your fingers to shape the paper into the desired form. Some designs may require you to make multiple folds to achieve the desired shape.Finish the design: Once you’re satisfied with the shape, tuck in any loose flaps or edges and adjust the folds as needed to create a finished design. You may need to make small adjustments to get the model to stand up or sit properly.Display your creation: Once your origami model is complete, you can display it proudly or give it as a gift. If you’re using a delicate paper, be careful when handling the model to avoid tearing or damaging it.What?lionReferenceWhy: asking for the reason or purpose behind something.How: asking for the method or process of doing something.What: asking for information about a specific thing or object. /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/art/2023/04/23/origami.html"},{"id":15,"title":"process management","content":" const config = { theme: 'neutral', startOnLoad:true, htmlLabels:true, }; mermaid.initialize(config); hljs.highlightAll(); About Me process management Introduction A process is an instance of a program that is executing on a computer. Each process has its own memory space and runs independently of other processes. Process management involves creating, scheduling, and managing processes to ensure that they run efficiently and don’t interfere with each other. Process management also manages the state of each process, including whether it is running, blocked, or waiting for input. In addition, the process management system is responsible for terminating processes when they are no longer needed. One of the key functions of process management is CPU scheduling, which involves determining which process should be executed next. The scheduler allocates the CPU to the most deserving process, based on a set of predefined criteria, such as priority or time slice. By managing processes properly, the operating system can ensure that resources are used efficiently and that processes run smoothly.Why? Understanding operating systems: Processes are a fundamental concept in operating systems Writing efficient code: By managing processes properly, you can improve system performance and reduce resource utilization. Improving system stability: By managing processes properly, you can prevent crashes and other issues that can affect system stability. Developing concurrent systems: Allows multiple tasks to execute simultaneously. You can design and implement systems that make efficient use of system resources and improve system performance. Understanding process management can help you identify issues and debug code more effectively.How?PCB data structureThe PCB is a critical component of process management in modern operating systems, allowing the operating system to manage and control multiple processes concurrently and efficiently. By maintaining a separate PCB for each process, the operating system can track and manage each process individually, ensuring that each process runs safely and efficiently.With the help of PCB (Process Control Block), OS can manage tasks such as creation, scheduling, termination, deadlock. A Process Control Block (PCB) is a data structure used by the operating system to manage and control the execution of a process. It contains information about the state of a process, including its process ID, memory allocation, CPU usage, and other important parameters. The PCB is created when a process is initiated and is updated by the operating system as the process executes. The PCB is also used by the operating system to switch between processes and manage the scheduling of the CPU. When a process is created, the operating system allocates a PCB for that process and stores the relevant information about the process in that PCB. As the process runs, the operating system updates the PCB to reflect changes in the process state, memory allocation, CPU usage, and other parameters.How PCB flows:graph TB id1(new) --admitted--> id2(ready) subgraph processing id2(ready) --scheduler dispatch--> id3(running) id3(running) --interrupt--> id2(ready) id3(running) --I/O or event wait--> id5(waiting) id5(waiting) --I/O or event completion--> id2(ready) end id3(running) --exit--> id4(terminated)Flow Process creation (the process of creating a new process in an operating system) Allocating resources: Sets up a new address space for the process, including allocating memory and creating a page table to map the process’s virtual address space to physical memory Initializing data structures: Initializes the process control block (PCB), which is a data structure that contains information about the process, including its process ID, state, and resource usage. Setting up the necessary environment Typically created by a parent process, which may pass parameters to the child process or inherit some of its own properties. For example, a new process may inherit the file descriptors of its parent, allowing it to read and write to the same files. process scheduling process synchronization process termination process states, process control blocks, and context switching.CPU scheduling algorithmsCPU scheduling is a critical part of process management, and you should understand the different CPU scheduling algorithms such as Round Robin, FCFS, SJF, and Priority Scheduling. You should also learn about their advantages and disadvantages.Memory ManagementLearn about memory allocation, fragmentation, and virtual memory.OS Simulation ToolsProcess Explorer allows us to see the running processes and their resource utilization.Thread A lightweight execution unit that exists within a process A process can have multiple threads, and each thread can perform a different task, but they all share the same resources of the process, such as memory and files. Threads are scheduled by the operating system, but they are not self-contained like processes.IssuesResource Allocation Description: Resource starvation or overloading caused by failing to manage resource efficiently for different processes, which require different amounts of CPU, memory, disk space, network bandwidth, and other resources Solution: To manage resources effectively, you can use tools like task queues, load balancers, and resource allocation algorithms. You can also monitor the system’s resource usage and adjust the allocation based on the workload.Deadlocks Description: A deadlock occurs when two or more processes are blocked waiting for each other to release a resource. Deadlocks can lead to a system freeze, where no progress is made, and the processes become unresponsive Solutions (order with frequency) Mutual Exclusion Description: Two resources, A and B, and two processes, P1 and P2, that need access to both resources in order to complete their tasks. However, if both processes acquire one resource and then try to acquire the other, they may end up deadlocked, where neither process can proceed because they are both waiting for the other to release the resource it is holding. Solution: Give each resource a lock. That is, processes P1 or P2 must gain the lock of each resource, then they can start to process, which means P1 and P2 are mutual exclusive Code example: // Create a Mutex objectconst mutex = new Mutex();// Acquire the lockmutex.acquire().then(function() { // Critical section // Code here will be executed by only one thread at a time // Release the lock mutex.release();});// Mutex object is created and then the acquire() method is called to acquire the lock. If the lock is currently held by another thread, the acquire() method will block until it is released. Once the lock is acquired, the critical section of code is executed. Once the critical section is complete, the release() method is called to release the lock and allow other threads to acquire it. Deadlock detection and recovery algorithms: These are widely used in many operating systems and databases to detect and recover from deadlocks. Resource allocation policies: These policies are commonly used to allocate resources in a way that minimizes the risk of deadlocks. For example, some systems use priority-based scheduling to give higher priority to processes that are less likely to cause deadlocks. Message passing: This technique is often used in distributed systems to ensure that processes can communicate with each other without the risk of deadlocks. Lock-free programming: This technique is gaining popularity in highly concurrent systems because it avoids the need for locks and can improve performance. Transactional memory: This is a relatively new technique that is gaining popularity in highly concurrent systems because it allows for fine-grained locking and can improve performance. Hold and Wait: This strategy can be effective in some situations, but it can also be prone to deadlocks if not used carefully. No Preemption: This strategy can prevent deadlocks, but it can also lead to resource starvation in certain situations. Circular Wait: This strategy can be effective, but it requires careful resource allocation and ordering to prevent deadlocks. Mutual Exclusion and Hold and Wait are relatively simple to implement but can be more prone to deadlocks if used improperly No Preemption can prevent deadlocks but can also lead to resource starvation in certain situations Circular Wait can be effective, but it requires careful resource allocation and ordering to prevent deadlocks. Techniques like lock-free programming, transactional memory, and message passing can be more complex to implement but can offer higher performance and scalability. * Deadlock detection algorithms and resource allocation policies can also be effective in detecting and resolving deadlocks in a system. article in clean codeRace Conditions Description: A race condition occurs when two or more processes access a shared resource concurrently, and the outcome depends on the order of execution Solution: To prevent race conditions, you can use synchronization techniques like locks, semaphores, and barriers. You can also use atomic operations and message passing to ensure that shared resources are accessed safely and consistently.Priority Inversion Description: Priority inversion is a situation where a low-priority process holds a resource that a high-priority process needs, leading to a delay in the high-priority process’s execution. This problem is particularly prevalent in real-time systems. Solution: To prevent priority inversion, you can use techniques like priority inheritance, priority ceiling, and preemptive scheduling. These techniques ensure that high-priority processes get access to the resources they need without being delayed by low-priority processes. Process Synchronization Processes may need to synchronize their activities to ensure correct and consistent behavior. Synchronization problems can arise when processes access shared resources, communicate with each other, or perform parallel computations. Solution:Fault Tolerance Process management may need to handle faults and failures gracefully to maintain system availability and reliability. Fault tolerance mechanisms include process restarts, redundancy, and error detection and recovery. Solution:Security Process management needs to enforce access control and protect against unauthorized access, malicious attacks, and other security threats. Solution:What?Give me a real world exampleJavascriptReferenceProcess control blockOperating System: Process and Process ManagementProcess Management in OS: PCB in Operating SystemProcess Control Block /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/os/2021/12/24/process-management.html"},{"id":14,"title":"thread and concurrency","content":" const config = { theme: 'neutral', startOnLoad:true, htmlLabels:true, }; mermaid.initialize(config); hljs.highlightAll(); About Me thread and concurrency IntroductionThe structure of this article: Thread: the smallest unit of program for CPU to execute. Concurrency: lets CPU perform multiple threads at the same time. Process: the program that has been loaded into memory along with registers (how to execute this process) and a program counter (what’s the next process) register may hold an instruction, a storage address, or other kind of data needed by the process (refer to here) program counter (instruction pointer), a special type of register, storing the address of the instruction to be executed next The flow:graph TD id1(program) --compiled--> id2(binary form) id2(binary form) --loaded--> id3(memory) id3(memory) --decompose--> id4(process 1) id3(memory) --decompose--> id5(process 2) id3(memory) --...decompose--> id6(...other processes) id4(process 1) --decompose--> id7(thread 1) id4(process 1) --decompose--> id8(thread 2) id4(process 1) --...decompose--> id9(...other threads) threads share memory in the same process processes take their own part of memory and cannot share memory with other process communication between threads is faster than processesWhy?Concurrency decreases waiting time and response time and increase resource utilization and efficiency.How?decrease waiting timedecrease response timeincrease resource utilizationincrease efficiencyWhat?ReferenceThreadThread (computing)Multithreading and concurrency fundamentalsWhat’s the Diff: Programs, Processes, and ThreadsRegisters and RAM: Crash Course Computer Science #6 /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/os/2021/12/24/threads-and-concurrency.html"},{"id":21,"title":"Solidity","content":" hljs.highlightAll(); About Me Solidity IntroductionSmart contracts are self-executing contracts with the terms of the agreement between buyer and seller being directly written into lines of code. Solidity is essential for building decentralized applications and smart contracts on the Ethereum blockchain. statically-typed languageWhy? high-level programming language most widely used a range of built-in features, such as functions, variables, and control structures define the logic and conditions of a smart contract ensure the security and reliability of smart contracts with cryptographic operations, such as hashing and digital signatures detecting and preventing common security vulnerabilities, such as integer overflow and reentrancy attacks a wide range of use cases, from simple token contracts to complex decentralized applications (dApps) compatible with a range of development tools and frameworks, making it easy for developers to integrate their smart contracts with other blockchain-based applications used in the Ethereum ecosystem, which is one of the largest and most active blockchain communities in the worldHow?basic contract example// Declare the Solidity versionpragma solidity ^0.8.0;// Declare the contractcontract ExampleContract { // Declare a variable to store a string string public greeting; // Constructor function to set the initial value of the variable constructor() { greeting = \"Hello, World!\"; } // Function to update the value of the variable function setGreeting(string memory newGreeting) public { greeting = newGreeting; }}develop locally Download Ganache open Ganache and you will be presented with a local Ethereum blockchain network running on your computer Ganache provides you with ten pre-funded accounts that you can use for testing your smart contracts. Each account has an initial balance of 100 Ether, which can be adjusted as per your needs Configure your development environment to connect to Ganache. You can use Remix, Truffle, or any other development environment that supports Ethereum.Write your smart contract code in Solidity in a file with the .sol extension.Compile your Solidity code using Remix or a command-line compiler like Solc.Deploy your smart contract to Ganache using Remix or Truffle.Interact with your deployed smart contract using the Ganache interface or by sending transactions using Remix, Truffle, or a command-line tool like Web3.js.Write tests for your smart contract to ensure that it functions as expected and to catch any potential issues or vulnerabilities.deploy itCompile your smart contract code using a Solidity compiler. You can use an online compiler like Remix or a command-line tool like Solc. Choose a blockchain platform to deploy your smart contract on. Ethereum is the most popular platform for smart contract deployment, but there are other platforms like Binance Smart Chain, Polkadot, and others.Create a wallet on the chosen blockchain platform and fund it with the required cryptocurrency to pay for gas fees (transaction fees).Deploy your smart contract using a deployment tool like Remix, Truffle, or Hardhat. These tools provide an interface to interact with the blockchain network and deploy your smart contract.Once the deployment transaction is confirmed by the blockchain network, your smart contract will be deployed and you will receive the contract address.Interact with your deployed smart contract using a blockchain wallet or by sending transactions to the contract address.interact with it on productionand users can interact with it: view the current value of the greeting variableUsers can interact with a smart contract by sending transactions to the contract’s address on the blockchain. These transactions can trigger the execution of the contract’s functions and update its variables.In the case of the example contract I provided earlier, users could interact with it in the following ways:View the current value of the greeting variable: Users can simply read the value of the greeting variable by calling its getter function. This can be done using a blockchain explorer or by calling the function from another smart contract.Update the value of the greeting variable: Users can update the value of the greeting variable by calling the setGreeting function and passing in a new string value as a parameter. This can be done using a blockchain wallet or by calling the function from another smart contract.When a user sends a transaction to a smart contract, the transaction is processed by the blockchain network and added to the blockchain’s immutable ledger. The smart contract’s code is then executed on the blockchain, and any changes to the contract’s variables or state are recorded on the blockchain. This ensures that the contract’s behavior is transparent, auditable, and tamper-proof.What?going to give example in project, taskReference /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/blockchain/2022/10/21/solidity.html"},{"id":22,"title":"Client Side","content":" hljs.highlightAll(); About Me Client Side Introductionquick explanationWhy?focus on why we need itHow?focus on the mechanimWhat?give an exampleReference /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/cache/2022/08/19/client-side.html"},{"id":24,"title":"Ch5 Gas","content":" MathJax.Hub.Config({ TeX: { equationNumbers: { autoNumber: \"AMS\" } } }); hljs.highlightAll(); About Me Ch5 Gas IntroductionThis articleWhy?focus on why we need itHow?Boyle’s lawGiven constant external environment, pressure is inversely proportional to the volume\\(PV = k\\), \\(k\\) is constantCharles’s lawGiven constant external environment, volumn is proportional to temperature\\(V = kT\\), \\(k\\) is constantAvogadro’s lawGiven constant external environment, volumn is proportional to mole\\(V = nk\\), \\(k\\) is constantIdeal gas lawGiven the laws above,\\[pV = nRT\\] p is pressure V is volumn T is temperature n is amount of substance R is ideal gas constantDalton’s law of partial pressuresFor example, given mixture gas: 2 moles of \\(Ar\\) + 3 moles of \\(O_2\\) + 5 moles of \\(N_2\\) in total pressure of 1000 torr. the pressure of \\(Ar\\) = 1000 * 2 / (2+3+5) the pressure of \\(O_2\\) = 1000 * 3 / (2+3+5) the pressure of \\(N_2\\) = 1000 * 5 / (2+3+5)What?give an exampleNote SI unit: pascal; \\(1 atm = 101,325 Pa\\) ,\\(1 torr = 1 mm Hg\\) ,\\(1 atm = 760 torr\\)Reference /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/chemistry/2022/10/23/ch5-gas.html"},{"id":43,"title":"strategy","content":" const config = { theme: 'neutral', startOnLoad:true, htmlLabels:true, }; mermaid.initialize(config); hljs.highlightAll(); About Me strategy IntroductionConstructs multiple intefaces for variant methods in a upper class so that we can have multiple combinations to create multiple classes inherit from this upper class with shared methods.Why?We do not want to rewrite the same methods in different lower classes.How?For example, given lots of varieties of dogs, there are four dogs with different behaviors according to their characteristics: stupid dog: walks for losing its way smart dog: walks to anywhere it want anxious dog: kiss their owner for stroking to feel relieved calm dog: kiss their owner to express intimacyGiven the characteristics above we may have four type of dogs: stupid and anxious dog: Chihuahua stupid and calm dog: Bulldog smart and anxious dog: Sheepdogs smart and calm dog: RetrieverGiven the OOP concepts, we have choices as follow: create an upper class and then create four classes inherit from it create an polymorhpic class with four typeGiven the four characteristics map four behaviors, we need to write logics or overwrite the methods in the upper class. What if we want Chihuahua to share their kissing behavior with Sheepdogs? We need the concept of strategy and the UML as follow:classDiagram Dog <|-- Chihuahua : Inherit Dog <|-- Bulldog : Inherit Dog <|-- Sheepdogs : Inherit Dog <|-- Retriever : Inherit KissBehavior <-- Dog : Compose WalkBehavior <-- Dog : Compose KissBehavior : kiss() WalkBehavior : walk() KissForStroking --|> KissBehavior : Inherit KissForIntimacy --|> KissBehavior : Inherit WalkForLost --|> WalkBehavior : Inherit walkToAnywhere --|> WalkBehavior : Inherit KissForStroking : kiss() KissForIntimacy : kiss() WalkForLost : walk() walkToAnywhere : walk()What?class Dog def initialize(walk_behavior, kiss_behavior) end def kiss puts kiss_behavior.kiss end def walk puts walk_behavior.walk endendclass KissBehavior def kiss raise 'Must' endendclass WalkBehavior def walk raise 'Must' endendclass KissForStroking < KissBehavior def kiss puts \"kiss for stroking\" endendclass KissForIntimacy < KissBehavior def kiss puts \"kiss for intimacy\" endendclass WalkForLost < WalkBehavior def walk puts \"walk for lost\" endendclass WalkToAnyWhere < WalkBehavior def walk puts \"walk to any where\" endendand create instance from these four classeschihuahua = Dog.new(WalkForLost.new, KissBehavior.new)chihuahua.walkchihuahua.kissReferenceStrategy Pattern – Design Patterns (ep 1) /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/design-pattern/2022/03/22/strategy.html"},{"id":45,"title":"Docker","content":" hljs.highlightAll(); About Me Docker IntroductionDocker is a platform to develop, ship, and run applications in containers. Containers are a lightweight alternative to virtual machines that package an application and its dependencies together, allowing the application to run consistently across different environments. Docker provides tools for building and managing these containers, and it has become a popular choice for both development and production environments.Why?Container isolates Apps from host so it can be run on consistently across different environments.How?installbrew install --cask docker check installationdocker infostart dockeron mac, start docker withopen -a Dockerand shut down withpkill -SIGHUP -f /Applications/Docker.app 'docker serve'and run app withdocker run --name <xxx>applicationslist containerdocker psclear containerdocker rm -f $(docker ps -a -q)terminate appcheck app running on docker withdocker top <xxx>What?ReferenceInstall on Mac /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/docker/2022/01/09/docker.html"},{"id":59,"title":"(toefl) Reading","content":" hljs.highlightAll(); About Me (toefl) Reading IntroductionThis article describes the concept and techniques of readingWhy?ToeflHow?Steps to answer questions: 3 reading passage, 30 questions, 54 minutes draw template analyze question’s category utilize answer strategy technique skim: walk through passage and drop down conclusion note scan: directly find the keyword VocabularyCategory of VocabularyWhen the question asks the meaning of particular vocabularySteps to solve Vocabulary If this vocabulary is in subject of a sentence, check the prior sentence. If this vocabulary is in object of a sentence, check the laster sentence. If this vocabulary is verb, check the effect in near sentences Drop down key points of that checked sentence Choose answer based on key pointsExample of Vocabulary QuestionFor example, what’s the closest meaning to the word, abolished in the following sentencesIn 1857, in return for a payment of 63 million kronor from other commercial nations, Denmark abolished the Sound toll dues the fees it had collected since 1497 for the use of the Sound. This, along with other policy shifts toward free trade, resulted in a significant increase in traffic through the Sound and in the port of Copenhagen.Because this is the verb, we check the effect: increase the traffic -> the fees must be lower -> A or D -> the meaning of abolish is endReferenceCategory of ReferenceWhen pronounLead Word/ DetailCategory of Lead Word/ Detail When a question starts from ‘according to’ ends with ‘which of the following’ mentioned number of paragraph specificallySteps to solve Lead Word/ Detail Find keyword in question Scan article to find the keyword If find the keyword, write down the key point of that sentence containing the keyword If no keyword in passage, drop the inference why author write this passage (usually on the first and last sentences) choose the answerFor example,QuestionRhetorical PurposeCategory of Rhetorical Purpose The author discusses X in paragraph 2 in order to… Why does the author mention X? The author uses X as an example of How is paragraph 3 organized? How is paragraph 1 and 2 related?Steps to solve Rhetorical PurposeMindset: academic articles all have structure of main idea and then details. find where the key word in question is determine whether this sentence is main or detail If main, then the answer is in details and should summarize the details If detail, then the answer is in main and should summarize the mainExample of Rhetorical PurposeFor example,TBCParaphraseCategory of paraphraseIt will highlight the sentences and want us to paraphrase them.steps of paraphrase use sentence structure to find out the most important information trim the sentence into S.V.O and also get the attitude write down own idea choose the answerSentence InsertionSteps of Sentence InsertionSteps: Decompose the sentence into prior information and later information Skim through the whole paragraph and find the only keyword of each sentence Pair prior and later information to these key words. If these information matches the key words, then it is where to insertFor example, try to insertThis economics reliance on livestock in certain regions makes large tracts of land susceptible to overgrazing.into(A). The raising of livestock is a major economic activity in semiarid lands, where grasses are generally the dominant type of natural vegetation. (B). The consequences of an excessive number of livestock grazing in an area are the reduction of the vegetation cover and the trampling and pulverization of the soil. (C). This is usually followed by the drying of the soil and accelerated erosion. (D).Step 1prior information: economics reliancelater information: overgrazingStep 2(A) -> livestock -> economic -> (B) -> grazing -> vegetation, soil -> drying, erosion -> (D)Step 3Choose BEXCEPT/NOT/LEASTSteps for EXCEPT/NOT/LEASTSteps If no impression, skim to understand the passage (drop down conclusion notes) and then scan options If having impression, scan the options mark the options as true or falseFor example,The cinema did not emerge as a form of mass consumption until its technology evolved from the initial ‘peepshow’ format to the point where images were projected on a screen in a darkened theater. In the peepshow format, a film was viewed through a small opening in a machine that was created for that purpose. Thomas Edison’s peepshow device, the Kinetoscope, was introduced to the public in 1894. It was designed for use in Kinetoscope parlors, or arcades, which contained only a few individual machines and permitted only one customer to view a short, 50-foot film at any one time. The first Kinetoscope parlors contained five machines. For the price of 25 cents (or 5 cents per machine), customers moved from machine to machine to watch five different films (or, in the case of famous prizefights, successive rounds of a single fight).and the question:According the this paragraph, all of the following were true of viewing films in Kinetoscope parlors EXCEPT:(A) One individual at a time viewed a film(B) Customers could view one film after another(C) Prizefights wre the most popular subject for films(D) Each film was shortStep 1 (skim)Draw rectangle and input the key pointStep 2 (scan)Walk through the question and check T/F based on the passageInferenceCategory of InferenceThis kind of question is to infer why author write this passage.Steps of InferenceSteps Skim the passage and drop key point Think why author wrote this passage and write down self inference -> please summarize the paragraph first Scan the options and eliminate the extreme answerFor example,The extreme seriousness of desertification results from the vast areas of land and the tremendous numbers of people affected, as well as from the great difficulty of reversing or even slowing the process. Once the soil has been removed by erosion, only the passage of centuries or millennia will enable new soil to form. In areas where considerable soil still remains, though, a rigorously enforced program of land protection and over-crop planting may make it possible to reverse the present deterioration of the surface.Step 1 for Inference QuestionSkim and drop the notes: people, vast cause desertification (-) and to prevent them, we need protection and timeStep 2 for Inference QuestionTo appeal for actions to prevent deteriorationStep 3 for Inference Question(A) Governments will act quickly to control further desertification (x, extreme)(B) The factors influencing desertification occur in cycles and will change in the future (x, the factors are the same)(C) Desertification will continue to increase (o, to appeal)(D) Desertification will soon occur in all areas of the world (x, extreme)SummaryWe need to select three summaries for this questionSteps Read first sentence and last sentence of first paragraph and last paragraph to drop down main idea and purpose read first sentence of other paragraph and drop down the key points remove options that are too detailed remove wrong inference optionsFor example, for TPO 17 R3, the notes is as follow: symbiotic relationship: parasitism, commensalism, and mutualism parasitism, one better, one worse natural selection of parasitism commensalism, only one better, few mutualism, both better depends on connections among organismsmain: 3 typespurpose: explain themstructure: parasitism -> commensalism -> mutualism(A) true according to 2(B) false according to 5(C) true according to 5(D) (E) true according to 4(F)What?Vocabulary Review TPO 17 R1 (1): impetus is in O: read the after sentence summary after sentence: made the idea irresistible so we should choose the one, promoting something retrospect not enough vocabulary size but I get the right key point TPO 18 R1 (6): Lead Word/ Detail Review TPO 17 R1 (2): keyword: new way -> last sentence key point: maintain the traditional routes -> C or D summary the paragraph -> political retrospect problem of overgeneralization in C -> costly TPO 18 R1 (1): keyword: England/Germany key point: four country developed later -> strange (England/Germany -><- four country) summary the paragraph -> coal It seems that we still need to summarize this paragraph for this kind of questionInference Review TPO 17 R3 (5) the keyword in Q is rabbit population the keyword in the sentence containing wording, rabbit population, is deliberately introduced think why author wrote this paragraph -> to show the effect of deliberately introducing TPO 18 R1 (9) the summary is no significant barriers but the question asks protectionist, which is paradox so to infer why, we should choose B (exception) Insertion Review TPO 17 R3 (13) Q’s information: massive pop. -> problem overrun by huge rabbits -> (A) -> destroy expanses -> (B) -> deliberately introduced -> (C) -> devastated pop. -> (D) -> less deadly to offspring massive population maps to huge rabbits and problem maps to destroy expanses Summary Review TPO 17 R2 and there are five paragraphs light varies => quite conspicuous send signals => change color take account in changes of light => compete for best light Y/G color predominate => O/Y color visible rely other form => soundMain: animal signalPurpose: examplesStructure: environment -> change color -> with light -> contrast with light -> soundA. Animals that have different predators at different times of day change color to avoid being detectedB. To be noticed, an animal may draw attention to the contrast between its colors and the colors of its environmentC. Yellow and green are the most common colors found in the rain forestD. To escape notice, an animal may move or change color so that its color pattern is not visibleE. Animals must have signals for aggression as well as to indicate readiness to mateF. An animal may use sound rather than color to attract attention, because sound signals are not hindered by light conditionsA => maybe topicB => topic of 4C => not topicD => topic of 2E => must (x)F => topic of 5Reference articlesTPO /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/english/2022/11/19/(toefl)-reading.html"},{"id":64,"title":"basic usage","content":" hljs.highlightAll(); About Me basic usage IntroductionThis article describes the basic usage of gitWhy?Version control system helps us to track changes and why key decision were made along the way. Git is the most popular version control system.How?install git install: brew install git where it is: which git version: git --versionsetting setting: git config --list change local setting: git config --local user.email \"xxx@yyy.com\" change global setting: git config --global user.email \"xxx@yyy.com\"init initialize: git initremove git git: rm -rf .git untracked file: git clean -fXprocess status (details below): working -> git add -> staged -> git commit -> history -> view find keyword in commits: git log --oneline --grep='the_message_you_want_to_find' commits in a time frame: git log --online --since=\"9am\" --until=\"12am\" commits of specific file: git log the_specific_file.html historical changes of a specific file: git log -p the_specific_file.html remove a file: git rm --cached the_file_you_want_to_remove.html modify message: checkout to the commit (gco commit_sha) -> amend the message of this commit (git commit --amend) add files to last commit (git add -> git commit --amend --no-edit) add empty directory (touch .gitkeep) ignore files (details below): (.gitignore) check author: git blame checkout: (to be continued)statuscheck status (git status) and the messagecreate a file (echo \"hello.git\" > welcome.html) and check status again (git status)There is a untracked file now, welcome.html, in git statusAdd file to temp (git add welcome.html) then check status (git status)store it directly without vim (git commit -m \"the message to note to this commit\")or open vim to type in message we want (git commit)After all the works above, view the historical commits with (git log):or git log --oneline --graph for oneline messagesignoreCreate a file called .gitignore on the same level of .git created by initialization of git and input the file name in it# in .gitignorefilename_to_ignore.xxx# or ignore all the file with format .xxx with*.xxxReference什麼是 Git？為什麼要學習它？ - 為你自己學 Git /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/git/2022/08/11/basic-usage.html"},{"id":66,"title":"Overview","content":" hljs.highlightAll(); About Me Overview IntroductionHTML, or HyperText Markup Language, is the standard markup language used to create web pages. HTML is a markup language, which means it uses tags to define the structure and content of a web page.Tags are enclosed in angle brackets, like this: . Most tags have an opening tag and a closing tag, like this: content. The content goes between the opening and closing tags.WhyWith markup, search engine can read the content of website correctly, giving semantic meanings to website.Howbasic formEvery HTML document starts with a DOCTYPE declaration, which tells the browser what version of HTML the page is using.<!DOCTYPE html><html> <head> <title>Page Title</title> </head> <body> Page content goes here. </body></html>The <!DOCTYPE html> declaration should always be the first line of an HTML document. The <html> tag is the root element of the page, and everything else goes inside it.The <head> section of an HTML document contains metadata about the page, such as the title, keywords, and description. The <title> tag is used to define the title of the page, which appears in the browser tab and search engine results.The <body> section of an HTML document contains the content of the page. This is where you put text, images, links, and other elements that make up the page.tagsHTML has a variety of tags for different types of content. Here are some examples: <h1> to <h6>: Headings of different sizes <p>: Paragraphs of text <a>: Links to other pages or resources <img>: Images <ul> and <ol>: Unordered and ordered lists <table>: Tables of data <form>: Forms for collecting user inputHTML also has attributes, which are used to provide additional information about elements. Attributes are added to tags as name-value pairs, like this: <tagname attribute=\"value\">. Some common attributes include: id: A unique identifier for an element class: A way to group elements together for styling with CSS src: The source URL for an image or other resource href: The URL to link to alt: Alternate text for an image, for accessibility purposes That should give you a good starting point for learning HTML. There’s a lot more to learn, but these basics will help you get started with creating simple web pages.implementation add link to image <a href=\"http://example.com\"> <img src=\"path/to/image.jpg\" alt=\"Description of the image\"></a> Reference金魚都能懂的網頁設計入門 - 金魚都能懂了你還怕學不會嗎 :: 2019 iT 邦幫忙鐵人賽_金魚都能懂了，你還怕你學不會嗎？ 太多人在學習網頁的路上遭遇到挫折與失敗，這次Amos想利用自身的經驗來分享網頁設計入門的一些眉角，挑戰自己連續發文外，也…_ithelp.ithome.com.twCSS - Wikipedia_Edit description_en.wikipedia.org /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/html/2021/12/17/overview.html"},{"id":68,"title":"Overview","content":" hljs.highlightAll(); About Me Overview IntroductionThe internet is a system to connect all computers globally, mainly using internet protocol suite to communicate with all the objects in the network.WhyTBCHowinternet protocol suite conceptual model used in network model foundation Transmission Control Protocol (TCP) Internet Protocol (IP) A simple structure of TCP/IP is as follow: Link layer: a computer (sender) want to send data to another computer (receiver), the sender will send electromagnetic signals. These signals walk through wired or wireless connections from sender to receiver. Network layer (IP): Once the number of computers grow, we need to specify the address to identify which one is receiver. The address for identification is IP address. We called all the computer in this network nodes.Now the network looks like Transport layer (TCP): In the network plot above, if a sender wants to send signal to another computer, there are many path for signal to walk. (interlude) Packet Switching: The concept of packet switching is that it breaks down the data into small pieces and transfer these pieces with any possible routes to the destination and reassemble these pieces to show the complete data to the users at the destination.I am going to explain the way to decompose the data and the way to transfer it with following example:At the moment when the data is going to be sent, the available routes may be as follow: If there is arrows between nodes, then there is connection between the two computers and we call it the path. The number near the arrow is the cost to send a unit of data from sender to receiver.Based on these two concepts, we can define algorithms such as walk through minimum path and walk through minimum cost.TCP is used to make sure the packets are truly transported: sender want to send data to receiver the data being decomposed into packets algorithm pops up to determine how packets being sent the packets walk through the routes in networks and being reassembled at destination if the receiver did not receive the data, then tell sender to send again.Application LayerAfter the data arrives at destination, the receiver use Hypertext Transfer Protocol (HTTP) to translate the data from sender and then the page will show up on the receiver’s browsers.ReferenceInternet - Wikipedia_The Internet ( or internet ) is the global system of interconnected computer networks that uses the Internet protocol…_en.wikipedia.orgTransmission Control Protocol - Wikipedia_The Transmission Control Protocol ( TCP) is one of the main protocols of the Internet protocol suite. It originated in…_en.wikipedia.orgThe Internet protocol suite (article) | Khan Academy_Review the protocols that make up the suite of Internet Protocols and consider the stack of protocols that are used in…_www.khanacademy.orgWhat is Packet Switching? Definition & FAQs | Avi Networks_Back to Technical Glossary Packet Switching transmits data across digital networks by breaking it down into blocks or…_avinetworks.comhttp://www2.cs.uidaho.edu/~krings/CS420/Notes-F16/420-16-18-DCC10-Chap-19.pdfhttps://www.khanacademy.org/computing/computers-and-internet/xcae6f4a7ff015e7d:the-internet/xcae6f4a7ff015e7d:web-protocols/a/hypertext-transfer-protocol-http /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/internet/2021/03/29/overview.html"},{"id":71,"title":"adverb interjection conjunction (Japanese)","content":" hljs.highlightAll(); About Me adverb interjection conjunction (Japanese) IntroductionThis article list the collections of adverb, interjection, conjunction.Why?I am still thinking about it.How? & What?degree of adjective list: とても: means very and only before affirmative sentence 少し: means a little and but only before affirmative sentence 余り: means barely and only before negative sentence 全然: means absolutely not and only before negative sentence example: とても高いです > 高いです > 少し高いです > 余り高くないです > 全然高くないですdegree of verb list: よく: means very and only before affirmative sentence 少し: means a little and but only before affirmative sentence 余り: means barely and only before negative sentence 全然: means absolutely not and only before negative sentenceexample: よくわかります > わかります > 少しわかります > 余るわかりません > わかりません > 全然わかりません もう (already) vs まだ (not yet, still, going to) あなたはもう食事しましたか？ (はい、もう食事しました/いいえ、まだです) アナだはまだこの雑誌を目ますか？ (はい、まだ見ます/いいえ、もう見ません) 私はまだ帰りません It can be also used with noun and adjective; ex: 彼はまだ中学生です、彼女はまだわかいです。だから, から (because) vs でも, けど/が (but) 明日は土曜日です。だから、私は会社へ行きません = 明日は土曜日ですから、私は会社へ行きません 明後日はお休みです。でも、私は学校へ行きます。 = 明後日はお休みですけど(or が)、私は学校へ行きます。Reference /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/japanese/2022/04/13/adverb-interjection-conjunction.html"},{"id":74,"title":"pronounce (Japanese)","content":" hljs.highlightAll(); About Me pronounce (Japanese) Introduction tempo long vowels 促音 loanwords special pronounce of unit numbers toneWhy?To make sure Japanese knows what we are talking about.How & WhattempoThe number of tempos = The number of 仮名; for example, the number of tempo of 図書館（としょかん）is 4long vowels片仮名For example, we pronounce びール as びいる.平仮名お母さん 唸作 おかあさん。也有特殊的長音，例如： 時計 (とけい) 唸作 とけえ 空港（くうこう）唸作 くうこお促音喫茶店（きっさてん）唸作 Ki s Sa Te N，有 5 拍，看到 Ki 有促音的符號，在 Sa 之前發 s，做為一拍。loanwordsdemo with JSON structure as the items in a object are somehow related { ティ(thi): パーティー(party), ディ(dhi): シーディー(CD) } { ファ(fa): ‘’, フィ(fi): ‘’, フェ(fe): ‘’, フォ(fo): ‘’ } { ヴァ(va): ‘’, ヴィ(vi): ‘’, ヴ(vu): ‘’, ヴェ(ve): ‘’,　ヴォ(vo): ‘’ } { シェ(she): ‘’, チェ(che): ‘’, ジェ(je) :ジェっトき(jet 機) }special pronouncation of unit numbersThe common relationship between numbering and measure words: regular example: １台(いちだい)、２台(にだい)、３台(さんだい)、四台(よんだい)、5台(ごだい)、6台(ろくだい)、7台(ななだい)、８台(はちだい)、９台(きゅうだい)、10台(じゅうだい)、何台(なんだい) example: 一つ(ひとつ)、二つ(ふたつ)、三つ(みっつ)、四つ(よっつ)、五つ(いつつ)、六つ(むっつ)、七つ(ななつ)、八つ(やっつ)、九つ(ここのつ)、十(とお)、幾つ(いくつ) start with k and p use 促音 in number of 1, 6, 8, 10 example: １個(いっこ)、２個(にこ)、３個(さんこ)、４個(よんこ)、５個(ごこ)、６個(ろっこ)、７個(ななこ)、８個(はっこ)、九個(きゅうこ)、１０個(じゅっこ)、何個(なんこ) start with h use 促音 in number of 1, 6, 8, 10 and following the measure word in 半濁音 use 濁音 in measure word after 3, 何 example: １本(いっぽん)、２本(にほん)、３本(さんぼん)、４本(よんほん)、５本(ごほん)、６本(ろっぽん)、７本(ななほん)、８本(はっぽん)、９本(きゅうほん)、１０本(じゅっぽん)、何本(なんぼん) start with t and s use 促音 in number of 1, 8, 10 example: 一頭(いっとう)、二頭(にとう)、三頭(さんとう)、四頭(よんとう)、五頭(ごとう)、六頭(ろくとう)、七頭(ななとう)、八頭(はっとう)、九頭(きゅうとう)、十頭(じゅっとう)、何頭(なんとう) add も to express emphasis; example: にとうもexample regular{ for machine: 台 (だい), for flat objects: 枚 (まい), for behavior times: 度 (ど), for people: 名 (めん), for train: 両 (りょう), for indexing: 番 (ばん) ...} start with k and p{ objects: 個 (こ), behavior times: 回 (かい), page: ページ, floor: 階 (かい), // it follows the regularity of h ...} start with h{ long object: 本 (ほん), small animal: 匹 (ひき), cup: 杯 (はい), hundred: 百 (ひゃく) ...} start with t and s{ big animal: 頭 (とう), clothes: 着 (ちゃく), books: 冊 (さつ), goods: 点 (てん), letter: 通 (つう), building: 棟 (とう), shoes: 足 (そく), boat: 艘 (そう), ferry: 隻 (せき), company: 社 (しゃ), age: 歳 (さい)}toneThere are many pitch-accent in Japan and we follow the standard way. We use numbering to represent the tones as follow: 1 means lower the tone right after the first letter 2 means lower the tone right after the second letter and we need to raise the tone after the second letter so that we can lower the tone after second letter 3 means lower the tone right after the third letter and also we need to raise the tone after the second letter and keep the tone up until the third letter 4 means lower the tone right after the forth letter 0 means there is no position to lower the tone, meaning the tone is always high after the first lettersentence pronounce subsidiary and the noun together and subsidiary follows the tone of the last letter of noun The number of 胃(い) is 0 and the number of 目(め) is 1, they have different effects to the tone of subsidiary; the tone of は after 胃 should be higher but the tone of は after 目 should be lower.referenceJapanese pitch accent /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/japanese/2022/03/19/special-pronounce.html"},{"id":72,"title":"adjective (Japanese)","content":" hljs.highlightAll(); About Me adjective (Japanese) Introduction ends with な ends with い adjective + の Wh- question (どんな + noun) X は A が adjective です when X != A but A is related to X when use adjective to express verb Why?There are lots of sentence pattern issue related to adjective.How? & What?There are two common type of adjective, ending with な and ending with い.ends with なFor example, 綺麗な directly + noun: 綺麗なお皿 remove な before で: affirmative sentence (present): お皿は綺麗です。 affirmative sentence (past): 以前このお皿は綺麗でした。 negative sentence (past for ありません): 以前このお皿は綺麗ではありませんでした。 negative sentence (past for ないです) (treat xxxない as a new adjective ends with い and then use the logic): 以前このお皿は綺麗ではかったです。 お皿は綺麗でしょう？ negative sentence (present): noun は adjective (remove な) + (では/じゃ) + (ありません/ないです): お皿は綺麗ではありません。 remove な and plus に before verb: 私はカップを綺麗に洗いました。 two adjective to a noun (remove い + くて) このトイレは広くて、綺麗です。 examples(to be continued)regular form informal between a formal sentence affirmative + non-past tense: remove です example: TBC affirmative + past tense: remove です example: TBC negative + non-past tense: remove です example: TBC negative + past tense: remove です example: TBC ends with いFor example, 薄い directly + noun: 薄い鉛筆 reserve い before で: affirmative sentence (present): 鉛筆は薄いです。 鉛筆は薄いでしょう？ affirmative sentence (past): remove い and then + かったです: 鉛筆は薄かったです。 negative sentence: remove い + く + … (present) noun は adjective (remove い) + く + (ありません/ないです): 鉛筆は薄くないです。 よい = いい。 There is only よく + (ありません/ないです), no いく + (ありません/ないです) (past for ありませんでした) noun は adjective (remove い) + く + ありませんでした: 鉛筆は薄くありませんでした。 (past for ないです) treat 薄くない as a new adjective and use the logic of affirmative sentence: 鉛筆は薄くないです -> 鉛筆は薄くなかったです。 remove い and plus く before verb: 単語を正しくおぼえましょう two adjective to a noun (- な + で) 電車は便利で、速いです。 it is the same as two noun: かれは二十歳で、大学生です。 examples of い高い(expensive)、楽しい(happy)、つまらない(boring)regular form of い informal between a formal sentence affirmative + non-past tense: - です + だ example: TBC affirmative + past tense: - です + だった (express thinking) あのお婆さんは若いとき、綺麗だったと思います。 negative + non-past tense: - です example: TBC negative + past tense: - です example: TBC adjective + の use this pattern when you do not know what the thing is example: 青いのはいくらですか？ The (青い + の) means the one with green color.Wh- question (どんな + noun)To ask for objective perspective Q: 日本はどんな国ですか？ A: 日本は綺麗です。To ask for subjective perspective Q: 日本はどんですか？ A: 日本は寒いです。Other notes妹は可愛くなりました (sister becomes a cute girl)more adjectives寒い(さむい, cold)、古い(ふるい, old)、新しい(あたらしい, new) /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/japanese/2022/04/07/adjective.html"},{"id":75,"title":"study for N5","content":" hljs.highlightAll(); About Me study for N5 IntroductionThis article defines the required knowledge to pass JLPT N5. Given the defination in JLPT as follow: Reading: One is able to read and understand typical expressions and sentences written in hiragana, katakana, and kanji. Listening: One is able to listen and comprehend conversations about topics regularly encountered in daily life and classroom situations, and is able to pick up necessary information from short conversations spoken slowly.I need to possess knowledge as follow: enough vocabularies the structure of sentence conversations in daily lifeWhy?Because I want to know more about japanese culture.How?vocabulariesI can just start to memorize the words with Anki. ankiwebstructure of sentenceplease refer to the notesdaily conversationtry to practice in groupReference日本語能力測驗JLPT N5 Vocabulary ListUltimate JLPT N5 Vocabulary Deck v1.3 /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/japanese/2022/03/09/study-for-N5.html"},{"id":77,"title":"Methods","content":" hljs.highlightAll(); About Me Methods IntroductionThis article describes the methods in javascript.Why?To have better understanding of the common methods in javascript.How?Type checking methods typeof() instanceof() isNaN()Array Methods map() basic example: const array1 = ['a', 'b', 'c']; array1.map(element => element + 1); with index const myArray = [2, 4, 6, 8, 10]; const newArray = myArray.map((value, index) => { return value * index;}); console.log(newArray); // Output: [0, 4, 12, 24, 40] with object const myObject = { a: 1, b: 2, c: 3}; const modifiedObject = Object.fromEntries( Object.entries(myObject).map(([key, value], index) => { return [key, value * index]; })); console.log(modifiedObject); // Output: { a: 0, b: 2, c: 6 } filter() It will return the elements that match the condition example const people = [ { name: 'John', age: 30 }, { name: 'Jane', age: 25 }, { name: 'Bob', age: 40 }]; const matches = people.filter(obj => obj.age === 30); if (matches.length > 0) { console.log(`Found ${matches.length} people who are 30 years old`);} else { console.log('No people found');} find() It will return the first element only that match the condition example const people = [ { name: 'John', age: 30 }, { name: 'Jane', age: 25 }, { name: 'Bob', age: 40 }];const person = people.find(obj => obj.age === 30);if (person) { console.log(`Found ${person.name}, who is 30 years old`);} else { console.log('No person found');} reduce() forEach() example const array1 = ['a', 'b', 'c']; array1.forEach(element => console.log(element)); indexOf() push() // Declare an empty arraylet myArray = [];// Add elements to the array using push methodmyArray.push(\"apple\");myArray.push(\"banana\");myArray.push(\"orange\"); console.log(myArray); // Output: [\"apple\", \"banana\", \"orange\"] pop() shift() unshift() flat() example const nestedArray = [1, [2, 3], [4, [5, 6]]]; const flattenedArray = nestedArray.flat(); console.log(flattenedArray); // Output: [1, 2, 3, 4, 5, 6] String Methods substring between two string: const str = \"This is a sample string to demonstrate substring method in JavaScript\";const startStr = \"sample\";const endStr = \"method\";const startIndex = str.indexOf(startStr) + startStr.length;const endIndex = str.indexOf(endStr, startIndex);const result = str.substring(startIndex, endIndex); Object Methods An object example const object1 = {a: 'somestring',b: 42,c: false}; Object.keys() console.log(Object.keys(object1)); Object.values() console.log(Object.values(object1)); Object.assign() Object.create() Object.freeze() Object.seal() Object.entries(),joinconst elements = ['Fire', 'Air', 'Water'];console.log(elements.join());// expected output: \"Fire,Air,Water\"console.log(elements.join(''));// expected output: \"FireAirWater\"console.log(elements.join('-'));// expected output: \"Fire-Air-Water\"mathMath.floor(3 / 2); // 1Math.round(3 / 2); // 2otherquerySelectorDocument.querySelector() returns the first Element within the document that matches the specified selector, or group of selectors. If no matches are found, null is returned.parent & child nodeTo get children nodesparentNode.childrenAJAX (Asynchronous JavaScript and XML)Request data from external server -> Parse the data -> Load data without a refresh -> Data can be formats like (XML, JSON, HTML) index.html<!DOCTYPE html><html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <script src=\"main.js\"></script> </head> <body> </body></html> main.jsdocument.addEventListener('DOMContentLoaded', function() { fetch('https://jsonplaceholder.typicode.com/posts') .then(request => request.json()) .then(posts => { console.log(posts) })})then in console,Then, I am going to show the effect of AJAX, which is going to show a loading view and after it fetch the requested data successfully, the data will replace the loading without page refreshed.index.html<!DOCTYPE html><html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <script src=\"main.js\"></script> </head> <body> <div class=\"post-title\"> <h2> Loading... </h2> </div> </body></html>main.jsdocument.addEventListener('DOMContentLoaded', function() { fetch('https://jsonplaceholder.typicode.com/posts') .then(request => request.json()) .then(posts => { const firstPost = posts[0]; const postTitleA = document.querySelector('.post-title'); postTitleA.textContent = firstPost.title document.querySelector('.post-title').textContent = firstPost.title })})What?give an exampleReferenceArray.prototype.forEach()Object.keys()Array.prototype.join() /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/javascript/2022/12/25/methods.html"},{"id":76,"title":"Import Export","content":" hljs.highlightAll(); About Me Import Export IntroductionImport and export statements are used in JavaScript to organize code into reusable modules, making it easier to manage, maintain, and collaborate on larger applications.Why? Encapsulation: Modules allow you to keep the implementation details of a module hidden from other parts of the application. This helps to reduce the complexity of the code and prevent naming collisions. Reusability: Modules can be reused across different parts of the application, making it easier to develop and maintain the code. Better performance: By importing only the specific modules that are needed, you can reduce the amount of code that needs to be loaded, which can improve the performance of your application. Collaboration: When working on a project with other developers, modules allow you to work on separate parts of the application independently and then integrate them together.How?Source Part of the ECMAScript 2015 (ES6) specification, which was released in June 2015. Prior to ES6, JavaScript did not have a native module system, so developers had to use third-party libraries or workarounds to manage dependencies and module loading. The introduction of import and export in ES6 made it easier for developers to organize and reuse code across multiple files. Since the release of ES6, import and export have become a widely used feature in modern JavaScript development, and many tools and frameworks have been built around the module system, such as Node.js, Webpack, and Babel.ECMAScript modulesAdd “type”: “module” to your package.json file.This tells Node.js to treat all .js files in your project as ESM modules by default. Here’s an example of what your package.json might look like:{ \"type\": \"module\", \"dependencies\": { \"module-name\": \"^1.0.0\" }}After adding this line, you can use import and export statements in your JavaScript files without seeing the warning.Then transform old block frommodule.exports = { plugins: [ require('postcss-import'), require('tailwindcss')('./tailwind.config.js'), require('autoprefixer'), ]}toimport postcssImport from 'postcss-import';import tailwindcss from 'tailwindcss';import autoprefixer from 'autoprefixer';export const plugins = [ postcssImport(), tailwindcss('./tailwind.config.js'), autoprefixer(),];ExportThere are two way: export// export a functionexport function addNumbers(a, b) { return a + b;}// export an objectexport const person = { name: 'John', age: 30}; export at once// export multiple functions/objectsexport default { addNumbers, person };import// main.js fileimport { addNumbers, person } from './math.js';console.log(addNumbers(2, 3)); // Output: 5console.log(person.name); // Output: JohndefaultA default export is a way to export a single function, object, or value as the default export from a module.// utils.js fileconst add = (a, b) => a + b;const subtract = (a, b) => a - b;const multiply = (a, b) => a * b;export default { add, subtract, multiply };In this example, we’re exporting an object that contains multiple functions as the default export. When importing this module, you can destructure the object and access its properties like this:// main.js fileimport utils from './utils.js'; // you can name the imported object as anything you wantconsole.log(utils.add(1, 2)); // Output: 3console.log(utils.subtract(3, 2)); // Output: 1console.log(utils.multiply(2, 3)); // Output: 6What?give real world exampleReferenceWhy: asking for the reason or purpose behind something.How: asking for the method or process of doing something.What: asking for information about a specific thing or object. /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/javascript/2023/04/06/import-export.html"},{"id":79,"title":"Javascript","content":" hljs.highlightAll(); About Me Javascript IntroductionJavaScript is used in conjunction with popular web development frameworks like React, Angular, and Vue.js on the client-side to build complex and interactive web applications. On the server-side, JavaScript is used with Node.js to build web applications using popular frameworks like Express.js and NestJS, which provide a robust and scalable platform for building server-side logic. Object-oriented language Using objects to represent data and functionality This allows developers to create reusable code that can be organized into modules and classes, making it easier to maintain and update large codebase Client-side Interact with the Document Object Model (DOM) of a web page, which allows developers to manipulate the content and structure of a page in real-time without requiring a full page refresh Server-side NodeJS Allows developers to use JavaScript to build full-stack web applications that can handle both client-side and server-side logic. Why? commonly used for creating interactive web applications allows you to add interactivity to your web pages by responding to user actions can run on a wide variety of platforms, including desktop and mobile web browsers many libraries and frameworks available for JavaScript that can help you build complex web applications more quickly and easily be used on the server-side with technologies like Node.js Growing demandHow?Execution Order Normally, from top to bottom Function: If a function is defined in the file but not called until later in the code, the function definition will still be processed when the file is loaded, but the function itself will not be executed until it is called. Asynchronous: If the JavaScript code makes use of asynchronous operations, such as fetching data from an external API, the order in which the code is executed may not be strictly linear. In such cases, the JavaScript runtime will handle the asynchronous operations separately from the main execution thread, and the order in which the asynchronous code is executed may not correspond to the order in which it appears in the file. Module Firstly, any top-level import statements will be processed before any other code in the file is executed. This means that if a module depends on another module, the dependent module must be imported first. Secondly, any module-level statements, such as variable declarations or function definitions, will be processed. These statements can reference any imported modules, since the import statements have already been processed. Finally, any top-level export statements will be processed. These statements determine which functions, objects, or variables from the module should be exposed to other modules that import it. Modules are loaded and executed asynchronously, so the order in which they are loaded and executed may not correspond to the order in which they appear in the code. This can lead to issues with circular dependencies, where two or more modules depend on each other, but neither can be loaded until the other has been loaded. To avoid circular dependency issues, it’s important to design module dependencies carefully and avoid circular references wherever possible. datatypeIn JavaScript, data types define the type of data that a variable or a value can hold. JavaScript has six primitive data types and one non-primitive data type. For more information, please refer to datatypeoperators// Arithmetic operators:let a = 5 + 3; // additionlet b = 10 - 4; // subtractionlet c = 6 * 2; // multiplicationlet d = 8 / 2; // divisionlet e = 15 % 4; // modulus (returns the remainder after division)// Comparison operators:let f = 5 > 3; // greater than (returns true)let g = 10 <= 4; // less than or equal to (returns false)let h = \"hello\" === \"world\"; // strict equality (returns false)let i = \"hello\" !== \"world\"; // strict inequality (returns true)// Logical operators:let j = true && false; // logical AND (returns false)let k = true || false; // logical OR (returns true)let l = !true; // logical NOT (returns false)going to add more strange logic in javascriptControl Structure Conditional Statements: if statement let x = 10;if (x > 5) {console.log(\"x is greater than 5\");} switch statement let day = \"Monday\";switch(day) {case \"Monday\":console.log(\"It's Monday!\");break;case \"Tuesday\":console.log(\"It's Tuesday!\");break;default:console.log(\"It's not Monday or Tuesday.\");break;} Loops for loop for (let i = 0; i < 5; i++) {console.log(i);} while loop let i = 0;while (i < 5) {console.log(i);i++;} Control Statements break for (let i = 0; i < 10; i++) {if (i === 5) {break;}console.log(i);} continue (skip over an iteration of a loop) for (let i = 0; i < 10; i++) {if (i === 5) {continue;}console.log(i);} Function Arrow vs normal function Syntax: Arrow functions have a more concise syntax compared to normal functions. They can be written in a single line without using the “return” keyword. // Normal functionfunction add(a, b) { return a + b;} // Arrow functionconst add = (a, b) => a + b; Binding of “this”: In arrow functions, the “this” keyword refers to the enclosing context, while in normal functions, the value of “this” is determined by how the function is called. const person = { name: \"John\", sayHello: function() { console.log(\"Hello, my name is \" + this.name); }, sayHelloArrow: () => { console.log(\"Hello, my name is \" + this.name); }}; person.sayHello(); // output: Hello, my name is Johnperson.sayHelloArrow(); // output: Hello, my name is undefined In the above example, the value of “this” in the arrow function “sayHelloArrow” refers to the global context, which does not have a “name” property. Use of “arguments”: Normal functions have access to a special variable called “arguments”, which contains all the arguments passed to the function. Arrow functions do not have access to “arguments”. function sum() { let total = 0; for(let i=0; i<arguments.length; i++) { total += arguments[i]; } return total;} const sumArrow = (...args) => args.reduce((total, num) => total + num, 0); console.log(sum(1, 2, 3, 4)); // output: 10console.log(sumArrow(1, 2, 3, 4)); // output: 10 In the above example, the normal function “sum” uses the “arguments” variable to calculate the sum of all the arguments passed to it. The arrow function “sumArrow” uses the spread operator to convert the arguments into an array and then uses the “reduce” method to calculate the sum. protected methods in class class MyClass { constructor() { this._protectedProperty = 'foo'; } _protectedMethod() { console.log('This method is protected'); } publicMethod() { console.log('This is a public method'); this._protectedMethod(); // call the protected method from within the class }} arrowOOPsomething likeconst randomObject = { attributes1: 'attributes1', ...}built-in methodsJavaScript has many built-in methods that provide powerful functionality to manipulate strings, arrays, and other data types. These methods are part of the JavaScript language and can be called directly on the objects they operate on. For more information, please refer to methodserror handlingYou can return error withthrow \"Error occurred\";Promises and AsynchronousAsynchronous programming is usually implemented using callbacks or Promises JavaScript is a single-threaded language, which means that it can only execute one task at a time A callback is a function that is passed as an argument to another function, and is called when the other function completes its task. This allows the program to continue executing while the asynchronous task is being performed in the background. We can ensure that the data is processed only when it is available, rather than blocking the program while waiting for the data to be fetched. This allows the program to continue executing other tasks while the data is being fetched in the background. For example,function fetchData(callback) { // simulate fetching data from a server setTimeout(function() { const data = [1, 2, 3, 4, 5]; callback(data); }, 200); console.log('Process this first')}function processData(data) { console.log(\"Processing data:\", data);}// Call fetchData function and pass processData function as a callbackfetchData(processData); Promise is another way to implement asynchronous programming in JavaScript. A Promise is an object that represents a value that may not be available yet. When a Promise is resolved, the value is made available to the program. Promises can be chained together using the then() method to create a sequence of asynchronous tasks. For example,function fetchData() { // return a new Promise return new Promise(function(resolve, reject) { // simulate fetching data from a server setTimeout(function() { const data = [1, 2, 3, 4, 5]; resolve(data); // fulfill the promise with the data }, 2000); });}function processData(data) { console.log(\"Processing data:\", data);}// Call fetchData function which returns a promisefetchData().then((data) => processData(data)); Async/await is a newer syntax introduced in ES2017 that provides a more intuitive way to write asynchronous code. It allows developers to write asynchronous code that looks and behaves like synchronous code, making it easier to reason about and debug. Async/await works by using Promises under the hood, but hides the details of Promise chaining and error handling.AJAXAJAXESES stands for ECMAScript, which is a standardized scripting language specification that is used to implement JavaScript. ECMAScript is the official name for the scripting language that is commonly referred to as “JavaScript”. ECMAScript is maintained by the European Computer Manufacturers Association (ECMA) and is designed to be a cross-platform, vendor-neutral standard that can be used by multiple web browsers and other environments that support JavaScript. Each new version of ECMAScript (ES6, ES7, ES8, etc.) introduces new features and updates to the language, which are implemented by web browsers and other environments to provide developers with new tools and capabilities for building modern web applications.JSONImport and ExportImport and ExportserviceA service can refer to a type of object or module that provides a specific functionality or feature to an application. For example,function MyService() { constructor() { // initialize properties or perform setup tasks }, this.perform = function() { // implementation };}Document Object Model redirect open new tab window.open(url, '_blank').focus(); other topics Objects and prototypes Arrays and array methods String manipulation Regular expressions Date and time Error handling and debugging DOM (Document Object Model) manipulation Events and event handling AJAX (Asynchronous JavaScript and XML) APIs (Application Programming Interfaces) ES6 (ECMAScript 2015) features, such as arrow functions, template literals, and classes Functional programming concepts in JavaScript, such as higher-order functions, closures, and currying Node.js and server-side JavaScript Popular JavaScript libraries and frameworks, such as React, Angular, and Vue.js Best practices and code organizationWhatscroll to the topwith tailwind<button type=\"button\" data-mdb-ripple=\"true\" data-mdb-ripple-color=\"light\" class=\"inline-block p-3 bg-red-600 text-white font-medium text-xs leading-tight uppercase rounded-full shadow-md hover:bg-red-700 hover:shadow-lg focus:bg-red-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-red-800 active:shadow-lg transition duration-150 ease-in-out bottom-5 right-5\" id=\"btn-back-to-top\"> <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" class=\"w-4 h-4\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path fill=\"currentColor\" d=\"M34.9 289.5l-22.2-22.2c-9.4-9.4-9.4-24.6 0-33.9L207 39c9.4-9.4 24.6-9.4 33.9 0l194.3 194.3c9.4 9.4 9.4 24.6 0 33.9L413 289.4c-9.5 9.5-25 9.3-34.3-.4L264 168.6V456c0 13.3-10.7 24-24 24h-32c-13.3 0-24-10.7-24-24V168.6L69.2 289.1c-9.3 9.8-24.8 10-34.3.4z\"></path></svg></button>and JS// Get the buttonlet myButton = document.getElementById(\"btn-back-to-top\");// When the user scrolls down 20px from the top of the document, show the buttonwindow.onscroll = function () { scrollFunction();};function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; }}// When the user clicks on the button, scroll to the top of the documentmyButton.addEventListener(\"click\", backToTop);function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0;}ReferenceDocument.querySelector()ECMAScriptWhat are module exports in JavaScript?Tailwind Scroll back to top button componentHow can I split a javascript application into multiple files?JavaScript Module Pattern: In-Depth /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/javascript/2022/12/12/javascript.html"},{"id":80,"title":"Ajax","content":" hljs.highlightAll(); About Me Ajax IntroductionAJAX is a web development technique that allows you to update parts of a web page without reloading the entire page. AJAX = Asynchronous JavaScript and XML To make web applications more interactive and responsive by exchanging data with a web server asynchronously Asynchronous programming is common in javascript, because the process of rendering data from server takes time and we do not want our page to be stalled and the function to achieve it called callback function.WhyTo create more efficient, dynamic, and interactive web applications Enhanced User Experience: AJAX allows web applications to update specific parts of a web page without reloading the entire page, resulting in faster response times and a smoother user experience Reduced Server Load: Because AJAX requests only update specific parts of a web page, it can help reduce the amount of data that needs to be transferred between the client and the server. This can help reduce server load, improve application performance, and reduce bandwidth usage. Increased Efficiency: AJAX can help make web applications more efficient by enabling them to update data in real-time without requiring a page refreshHowPlain Javascript Create an instance of the XMLHttpRequest object const xhttp = new XMLHttpRequest(); Define a function to handle the response when it arrives. xhttp.onreadystatechange = function() {if (this.readyState == 4 && this.status == 200) { // handle the response here}}; Send the request to the server (GET request) xhttp.open(\"GET\", \"url_to_server_script\", true);xhttp.send(); Handle the server response: When the server response arrives, the function you defined in step 2 is executed. You can use the responseText property of the XMLHttpRequest object to get the response from the server xhttp.onreadystatechange = function() {if (this.readyState == 4 && this.status == 200) { document.getElementById(\"result\").innerHTML = this.responseText;}}; In the above code, the response from the server is added to an HTML element with the id of “result”.WhatFor example, thinking of my webpage is the burger store and I serve burgers. The ingredients are simply as follow: sauce, patty, lettuce. The chef(backend) needs time to prepare the ingredients. One second for lettuce cutting, two seconds for patty slicing, and three seconds for sauce cooking. I use setTimeout() to simulate the delivery time from backend. The Chef can cut and slice while the sauce is boiled. Then the coding may be as follow:index.html<!DOCTYPE html><html lang=\"en\"><head> <meta charset=\"UTF-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> <title>Document</title> <script>main.js</script></head><body> </body></html>main.jsconst ingredients = [ 'buns']serveBurger()createIngredient({ name: 'sauce', time: 3000 })createIngredient({ name: 'patty', time: 2000 })createIngredient({ name: 'lettuce', time: 1000 })function serveBurger() { setTimeout(() => { let burger = ''; ingredients.forEach((ingredient) => { burger += `<ul>${ingredient}</ul>` }); document.body.innerHTML = burger; }, 4000)}function createIngredient(ingredient) { setTimeout(() => { ingredients.push(ingredient.name) }, ingredient.time)}Then the burger looks likeHowever, what if we do not know how much time each ingredient takes, meaning the waiter may go to get the meal too early and may serve Semi-finished products if the chef did not notice; for example, taking the 4000 out from the setTimout() in the function, serveBurger.We need callback function to help us. With callback function, we can tell the waiter back after the burger prepared; for example, we call the waiter back every 0.5 second and check whether ingredients prepared. The code:javascriptconst requiredIngredients = ['lettuce', 'patty', 'sauce']const ingredients = [ 'buns']const recipes = [ { name: 'lettuce', time: 1000 }, { name: 'patty', time: 2000 }, { name: 'sauce', time: 3000 }]for (let i = 0; i < requiredIngredients.length; i++) { createIngredient(recipes[i], () => { checkIngredients(() => { serveBurger() }) })}function checkIngredients(callback) { setTimeout(() => { if (requiredIngredients.every(result => ingredients.includes(result))) { callback() } else { console.log(\"still preparing\") } }, 500)}function serveBurger() { setTimeout(() => { let burger = ''; ingredients.forEach((ingredient) => { burger += `<ul>${ingredient}</ul>` }); document.body.innerHTML = burger; })}function createIngredient(ingredient, callback) { setTimeout(() => { ingredients.push(ingredient.name); callback() }, ingredient.time)}As you can see, there is some callbacks looks likecreateIngredient(recipes[i], () => { checkIngredients(() => { serveBurger() })})As you can see, the more steps to wait, the more callbacks would be, making the code looks like boomerang and this is called the callback hell. To solve this kind of issue, we can use promisePromiseI am going to solve the callback part in the callback hell. With promise, we can eliminate callback from the function first. For example, the checkIngredient(), changing fromfunction createIngredient(ingredient, callback) { setTimeout(() => { ingredients.push(ingredient.name); callback() }, ingredient.time)}tofunction createIngredient(ingredient) { return new Promise((resolve, reject) => { setTimeout(() => { ingredients.push(ingredient.name); const error = true if (!error) { resolve(); } else { reject(`Error: Something went wrong while creating ingredient, ${ ingredient.name }`) } }, ingredient.time) })}and eliminate callback() from checkIngredients with same technique. Then, the callback hell structure, changing fromcreateIngredient(recipes[i], () => { checkIngredients(() => { serveBurger() })})tocreateIngredient(recipes[i]) .then(checkIngredients) .then(serveBurger) .catch(error => console.log(error))However, there is still a hell like chain structure, so I am going to use async/await.Async/AwaitWith the promise function defined above, we can turn the chain structure intoasync function step(recipe) { await createIngredient(recipe).catch(error) await checkIngredients() serveBurger()}and call them withfor (let i = 0; i < requiredIngredients.length; i++) { step(recipes[i]);}ReferenceUsing Promise (MDN)Promise (MDN)Async JS Crash Course - Callbacks, Promises, Async Await /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/javascript/2021/06/19/AJAX.html"},{"id":90,"title":"clean code ch2","content":" const config = { theme: 'neutral', startOnLoad:true, htmlLabels:true, }; mermaid.initialize(config); hljs.highlightAll(); About Me clean code ch2 IntroductionclassDiagram maintainability <|-- readability maintainability <|-- cowork readability : 1. Intention Revealing readability : 2. Avoid Disinformation readability : 3. Make Meaningful Distinctions readability : 4. Avoid Encodings readability : 5. Class Name & Method Name readability : 6. Avoid Mental Mapping readability : 7. Use Solution Domain Names readability : 8. Use Problem Domain Names readability : 9. Add Meaningful Context readability : 10. Do not Add Gratuitous Context cowork : 1. Use Pronounceable Names cowork : 2. Use Searchable Names cowork : 3. Do not Be Cute cowork : 4. Pick One Word per Concept cowork : 5. Do not PunWhy?Because we do so much of naming, we’d better do it well to improve the maintainability. It will pay off in the short term and continue to pay in the long run.What?Intention-RevealingvariableFromd = 10 # elapsed time in daystoelapsed_time_in_days = 10functionFromdef get_them list1 = [] theList.each do |x| if (x[0] == 4) list1 << x end end list1endtodef get_flagged_cells flagged_cells = [] game_board.each do |cell| if (cell.flagged?) # write a method to check the status flagged_cells << cell end end flagged_cellsendAvoid DisinformationThe o, l, 0, 1 making it hard to find out this is an unnecessary logic.def equal_one if o != 1 l = 01 else l = o * 1 end lendMake Meaningful DistinctionsClass nameFromBook1Book2Book3ProductProductInfoProductDatatoPictureBookEncyclopediaTextBookProductAvoid Encodings (Hungarian Notation, Member Prefixes, Interfaces and Implementations)variableFromstr_phone = \"0901xxxxxx\"tophone = \"0901xxxxxx\" # call class method to know the typefunctionFromdef set_name(name) m_dsc = name # avoid m_endtodef set_description(description) self.description = descriptionendClass Name & Method NameUse noun in class name and use verb in method name.Fromclass SetEmployeeData def initialize(params) end def salary endendtoclass Employee def set_salary endendAvoid Mental MappingAvoid reader mapping variables mentally; for example, child is better than x in following methodFromchildren.each do |x| if x.age < 18 teenagers << x return teenagersendtochildren.each do |child| if child.age < 18 teenagers << child return teenagersendUse Solution Domain Name & Use Problem Domain NamesUse Solution Domain NameUse postgresql_adapter instead of postgresql_connection because programmers have the concept of adapter in design pattern.Use Problem Domain NamesBut use problem descriptions when there is no good professional wordings.Add Meaningful ContextFor example, adding context to explain the logic of following methodFromdef printGuessStatistics(candidate, count) if count == 0 number = \"no\" verb = \"are\" pluralModifier = \"s\" elsif count == 1 number = \"1\" verb = \"is\" pluralModifier = \"\" else number = count.to_s verb = \"are\" pluralModifier = \"s\"; end guessMessage = \"There #{verb}, #{number}, #{candidate}#{pluralModifier}\"endtoclass GuessStatisticsMessage def initialize(candidate, count) create_plural_dependent_message_parts(count) guessMessage = \"There #{@verb}, #{@number}, #{@candidate}#{@pluralModifier}\" end private def create_plural_dependent_message_parts(count) if count == 0 there_are_no_letters elsif count == 1 there_is_one_letter else there_are_many_letters(count) end end def there_are_many_letters(count) @number = count.to_s @verb = \"are\" @pluralModifier = \"s\" end def there_is_one_letter @number = \"1\" @verb = \"is\" @pluralModifier = \"\" end def there_are_no_letters @number = \"no\" @verb = \"are\" @pluralModifier = \"s\" endendDo not Add Gratuitous ContextFor example, use Student instead of OpenApplyStudentUse Pronounceable NamesTo communicate with other programmers,FromgenymdhmsmodymdhmstogenerationTimestampmodificationTimestampUse Searchable NamesFromfor (let j=0; j<34; j++) { s += (t[j]*4)/5;}toconst numberOfTasks = 4;const realDaysPerIdealDay = 4;const workDaysPerWeek = 5;for (let j=0; j < numberOfTasks; j++) { realTaskDays = taskEstimate[j] * realDaysPerIdealDay; realTaskWeeks = (realdays / workDaysPerWeek); sum += realTaskWeeks;}Then you can search the terms, sum, task, per, …etcDo not Be CuteAvoid using jokes such as burnOutAll to mean destroyPick One Word per Concept and Don’t PunBuild a team convention, do not use fetch, retrieve, get for the same purpose. But also do not use get to all environments. For example, we can use get in backend and fetch in frontend.Reference /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/mindset/presentation/2022/02/20/clean-code-ch2.html"},{"id":41,"title":"observer","content":" const config = { theme: 'neutral', startOnLoad:true, htmlLabels:true, }; mermaid.initialize(config); hljs.highlightAll(); About Me observer IntroductionApple fans (果粉) really want new iphone, so they keep visiting store everyday to check whether new iphone released. The company feels disturbed, so they decided to send the release information through advertisements and broadcasts. But in this time, people not interested complain that they do not want to see this information.graph TD id2(fan 1) --visit--> id1(apple store) id3(fan 2) --visit--> id1(apple store) id4(fan 3) --visit--> id1(apple store) id5(fan 4) --visit--> id1(apple store)Bad solution: (broadcast randomly), which will notify someone not interested or skip some fansgraph TD id1(apple store) --broadcast--> id2(fan 1) id1(apple store) --broadcast--> id3(fan 2) id1(apple store) --broadcast--> id4(bystander 1) id1(apple store) --broadcast--> id5(fan 4) id1(apple store) --broadcast--> id6(...)To solve this problem, Apple lets people visiting store for new iphone information to leave email so that the company can send notifications to these people when new iphone released. The notification is just like observer pattern.Better solution:graph TD subgraph Observer Pattern id1(observer) -- observes --> id2(apple store) end subgraph Broadcast id1(observer) --broadcast--> id3(fan 1) id1(observer) --broadcast--> id4(fan 2) id1(observer) --broadcast--> id5(fan 3) id1(observer) --broadcast--> id6(...other fans) endWhy?pros: Open/Closed Principle. You can introduce new observers classes without having to change the observable’s code (and vice versa).cons: Subscribers are notified in random order.How? One to many relationship (one observable (apple store) to many observers (fans)) The state of observable changed and all observers are notifiedgraph LR id1((Observable)) -- push: I changed status --> id2((observers)) id1((Observable)) -- push: I changed status --> id3((observers)) id1((Observable)) -- push: I changed status --> ...and the UML (suppose fans can receive release information through phone and computer)classDiagram direction RL InterfaceObservable --> InterfaceObserver : has many InterfaceObservable : add(observer) InterfaceObservable : remove(observer) InterfaceObservable : notify() InterfaceObserver : update() InterfaceObservable <-- StoreObservable : is a InterfaceObserver <-- StoreObserverA : is a InterfaceObserver <-- StoreObserverB : is a StoreObservable : add(InterfaceObserver) StoreObservable : remove(InterfaceObserver) StoreObservable : notify() StoreObservable : business_logic() StoreObserverA : update() StoreObserverB : update() update: How observer reacts to observable events add: Let observers to observe remove: disable observers to observe notify: how observable object want observers to react business_logic: the business logic of observable and observers can react accordinglyWhat?class InterfaceObservable def add(observer) raise NotImplementedError, \"#{self.class} has not implemented method '#{__method__}'\" end def remove(observer) raise NotImplementedError, \"#{self.class} has not implemented method '#{__method__}'\" end def notify raise NotImplementedError, \"#{self.class} has not implemented method '#{__method__}'\" endendclass InterfaceObserver def update(_subject) raise NotImplementedError, \"#{self.class} has not implemented method '#{__method__}'\" endendclass StoreObservable < InterfaceObservable attr_accessor :state def initialize @observers = [] end def add(observer) @observers << observer end def remove(observer) @observers.delete(observer) end def notify @observers.each { |observer| observer.update(self) } end def business_logic @state = ['new iphone released', 'no new iphone released'].sample # simulate the business logic going to change the state of the observable puts \"Subject: My state has just changed to: #{@state}\" notify endendclass StoreObserverA < InterfaceObserver def update(subject) puts \"Inform A: #{subject.state}\" endendclass StoreObserverB < InterfaceObserver def update(subject) puts \"Inform B: #{subject.state}\" endend# the implementationstore_observable = StoreObservable.newstore_observer_a = StoreObserverA.newstore_observer_b = StoreObserverB.new# let observer to observes the observablestore_observable.add(store_observer_a)store_observable.add(store_observer_b)# the states of the observers will change according to the state of store observablestore_observable.business_logicstore_observable.business_logicstore_observable.remove(store_observer_a)# the observer a will not be notifiedstore_observable.business_logicWhat we can do more: add methods to specify informing methods in StoreObserver; for example, use phone for StoreObserverA and use computer for StoreObserverB add methods to specify when to inform StoreObserver; for example, only particular events or particular timingReferenceObserver Pattern – Design Patterns (ep 2)Observer in RubyObserver /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/design-pattern/2022/03/25/observer.html"},{"id":46,"title":"Incentive","content":" hljs.highlightAll(); About Me Incentive IntroductionIn economics, an incentive is a factor that motivates or influences individuals or organizations to behave in a particular way. They are a fundamental concept in microeconomics and are used to understand economic behavior and decision-making.Why?To understanding how economic agents make decisions and behave in various economic settings, which in turn can help policymakers, businesses, and individuals make informed choices and achieve desired outcomes.How?MonetaryTax, subsidies, grants, rebates, cleaner technologies more affordablesocial normsPublic recognitionmoral and ethical considerationspersonal satisfaction or achievementWhat?A real world example of incentive is implementation of a carbon tax, which imposes a fee on the production or consumption of fossil fuels based on their carbon content. By making it more expensive to use fossil fuels, the tax creates a financial incentive for individuals and companies to switch to cleaner energy sources or adopt more energy-efficient technologies. This can help to reduce carbon emissions and mitigate the negative effects of climate change.ReferenceWhy: asking for the reason or purpose behind something.How: asking for the method or process of doing something.What: asking for information about a specific thing or object. /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/economics/2023/04/16/incentive.html"},{"id":50,"title":"(integration) Preserve Torreya Taxifoha","content":" hljs.highlightAll(); About Me (integration) Preserve Torreya Taxifoha Preserve Torreya taxifohaBoth the article and lecturer comment on the preservation of a kind of tree, called Torreya taxifoha. The article proposes three possible solutions towards preservation but the speaker strongly disagrees them.Firstly, the reading material mentions reestablish this species in the same location where some small areas have a better microclimate for them to thrive. However, the professor decline this solution with macroclimate must affect microclimate. As a result, during the climate changes, these trees will not survive.Secondly, the passage proposes we can move these tree to the north places where there are cooler. Nevertheless, the lecturer rejects this idea because this movement will affect the creatures living there. To eb more specific, this three will spread a lot, so it will kill other planets.At last, the teacher argues that the method, protecting these tree in research center, is also useless because the tree themselves need diversity. That is to say, the area of the research center is too small for these tree to have enough population, causing them do not have enough members to fight the disease.In conclusion, the lecturer rejects all the possible solutions from this article. We may still try to find a better solution for saving these trees. /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/english/2022/12/19/(integration)-preserve-torreya-taxifoha.html"},{"id":52,"title":"(integration) Rchaeologist In Britain","content":" hljs.highlightAll(); About Me (integration) Rchaeologist In Britain Summarize the reading and lecture about archaeologist in BritainBoth the reading and lecture discuss the situation of archaeologists in Britain. The reading implies that archaeologists faces serious problems and limitations in Britain. However, the professor strongly disagrees with this passage.First of all, the reading passage mentions that the constructions destroy the artifacts, so there is no researching materials for archaeologists. Yet, the lecturer severely challenges the theory by arguing that a law enforces that all constructions needs to be examined by archaeologists before any progress, which can preserve the artifacts around the construction area. (字數不夠可以把它再拆成更 detail 的)Secondly, the passage suggests that archaeologists feel the financial support for archaeological research is inadequate. Nevertheless, the scholar seriously contradicts this suggestions because the law also asks construction company to pay for archaeologists’ examinations. To elaborate, with the law, archeologists can not only get financial add from construction companies but also research more artifacts before the constructions begins.Last but not least, the reading indicates that it is difficult to have a career in archaeology. Once again, the speaker opposes the evidences revealed in the reading passage by the law. To be more specific, because construction needs to hire archaeologists to preserve artifacts before any progress, the market demands of archeologists is increases. Apparently, the aspect of this paragraph is not correct.In conclusion, the professor argues against each theory in the reading. That is, he maintains that archaeologists face no serious problems and limitations in Britain. /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/english/2022/11/26/(integration)-rchaeologist-in-Britain.html"},{"id":57,"title":"(toefl) Writing","content":" hljs.highlightAll(); About Me (toefl) Writing IntroductionThis article describes how to prepare writingWhy?toeflHow?time Integrated writing task (20 minutes) Independent writing task (30 minutes)Independent WritingSteps After reading the question, find the main topic of this question and list three main aspects this topic cares based on the attitude and environment provided in this question think about or write down 6 points of each aspect to fill in the structure positive example (1) what it is (2) details (3) how large is the effect negative example (4) what it is (5) details (6) how large is the effect the example six pointsFirst of all, the government generally places emphasis on budget control (<- 1), and preserving old buildings can help it successfully save its budget. For instance, when the Taiwanese government decided to fix the Western wing of National Palace Museum, it only spent 20,000 US dollars to repair the ancient main entrance. Moreover, repainting the walls merely cost 1,000 US dollars. (<- 2) As a result, the government saved up to 50% of the original budget. (<- 3) on the other hand, if it decided to build a brand new monument, such as Taipei 101 (<- 4), it would have spent at least 1 million US dollars to import expensive materials from England. Furthermore, hiring workers and engineers would have easily amounted to 2 million US dollars. (<- 5) Apparently, the new project might have totally exceed the budget. (<- 6)template of independent writingQuestion: Should xxx do yyy?Find three aspects: (1), (2), (3)People often possess different perspective on (yyy). As for me, I strongly argue that (xxx should do yyy).First of all, xxx cares about (1) and yyy can help (1). For example, when xxx decides to do (1-1), xxx only needs to (1-2). As a result, (1-3). On the other hand, if xxx decides to (1-4), xxx will cost (1-5). Apparently, (1-6)Secondly,…Last but not least,…In conclusion, the government obviously should preserve ancient buildings. After all, it seeks to controller the budget, preserve history, and gain higher reputation.Integration WritingSteps before reading draw 6 grids while reading (3 mins) write down topic (first paragraph) write down the three reasons (second to fourth paragraph) in the article (all with S.V.O format) while listening (1.5 mins) write down what professor says sentence by sentences in each reason section in order make sure each section has main, detail, conclusion while writing We can still read the article while writing template of integration writingBoth the reading and the lecture discuss xxx. The reading implies that yyy. However, the professor strongly disagrees with the reading passage.First of all, the reading passage mentions that (1). Yet, the lecturer severely challenges the theory by arguing that (1-opposite-main). Furthermore, he states that (1-opposite-detail). Therefore, (1-opposite-conclusion).Secondly, the passage suggests that (2). Nevertheless, the scholar seriously contradicts the hypothesis because (2-opposite-main). To elaborate, he contends that (2-opposite-detail). As a result, (2-opposite-conclusion).Last but not least, the reading indicates that (3). Once again, the speaker opposes the evidence revealed in the passage. To elaborate, (3-opposite-detail). Apparently, (3-opposite-conclusion). (=> when skip the main while listening)Inclusion, the professor argues against each theory in the reading. That is to say, he maintains that yyy-opposite.What?Integration Writing Review while reading no need to write down all the details because we can compose with reading passage make sure truly get the main point while listening should write down the gender of the lecturer should write down the reason in order so that we know which reason is the main reason we should write down the main, detail, conclusion, so there should be three S.V.O general just give positive examples in each point first. Should insufficient number of wordings, add the anti examples.Referencedetails /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/english/2022/11/20/(toefl)-writing.html"},{"id":58,"title":"(toefl) Speaking","content":" hljs.highlightAll(); About Me (toefl) Speaking IntroductionThis article describes how to practice speaking Task 1 Task 2: campus situation reading + listening draw 6 grids Task 3: lecture reading + listening draw T Task 4 Why?ToeflHow?Intonation rising tone Yes/No Question When there are still sentence to speak rise and down tone to emphasize a word Task 1 during preparation Please memorize the template because I do not think we have time to write down template read the question and write down the why; for example, lazy and then write down the example and then write down conclusion (effect) during speaking In A/D questions, just need to speak out that I agree or disagree the statement speak slowly remember to speak the opposite example try to paraphrase think that you are talking to a person conclusion should just use That's way I think... Task 2Steps before reading draw six grids and write down transition words write template as follow: TBC When reading decide university announces or student proposes write down announcement or proposal (S.V.O) write down the two reasons (S.V.O) When listening decide the speaker agrees, disagrees, or has mixed feelings towards this UA or SP write down the detail reason why the speaker agrees or disagrees When 30 secs preparation decide transition words and restructure the sentences in 30 seconds preparation mark intonations (to show attitude) When speaking focus on fluency focus on intonation slow down We can prepare the same test multiple times before we move on to other TPO questions.Task 3Steps before reading draw T write down the term, xxx, means, yyy. The professor gave several examples. write down that's how the professor explained the term, xxx write template as follow: TBC when reading write down topic, xxx write down summary, yyy scan keyword write down the sentence explaining the keyword when listening make sure how to spell the topic write down as many S.V.O as possible to explain the term when preparing read through the dropdown sentences and draw intonation to make sure we know where to emphasize write down transition words Task 4Steps: listening -> 20 seconds preparation -> 60 seconds answering before listening draw T write down the template Well, the professor illustrated the two reasons.Okay. The first reason is (First Topic); for example, xxxxxxxx (lots of transition words, S.V.O). So, yyyyy (first conclusion)The second reason is (Second Topic); for example, xxxxxxx (lots of transition words, S.V.O). So, yyyyyy (second conclusion)And that's how the professor explained the two reasons. while listening write down two topics write down the examples: main idea -> detail -> conclusion if there is weird word, make sure write down the spelling while preparing write down transition words read through the sentences and draw intonations if not enough sentences, try to create more sentences by paraphrasing while speaking slow down intonations What?Task 2 practice Speed up notes taking Skim the announcement Make sure to restructure all sentences on note in 30 seconds preparation When we draw intonation, make sure to draw rising tone for key information and each sentence should have one university should use announcementTask 3 practice the speaking speed can be slower. take it easy make sure to drop intonation mark because it make sure we know the notes we are taking and where to emphasize for restructuring the thoughtsReferenceTPO /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/english/2022/11/20/(toefl)-speaking.html"},{"id":65,"title":"Github","content":" hljs.highlightAll(); About Me Github IntroductionA code hosting platform for version control and collaboration.WhyWith it, we can organize distributed commits.Howstart a projectSteps: create a project on local follow official instructions: Adding a project to GitHub with GitHub CLIdelete a branchgit push origin :secondmeans to push an empty to origin, and create a branch named second. Because the branch is empty, the branch disappears accordingly.fetch/pull/pushfetchGiven there is a repository on local machine and pushed on github we do some commits on github so that the online progress is more forward than the local machine then after we do git fetch, git will ‘fetch’ the online progress to local machine.(to be continued)Then the full commits look likeAs you can see, there are commits from adc1a5 to 85e848 on local machine and 8c3a0a fetched from remote branch. And because these commits are on the same branch, they will be connected together with two different HEAD point on different commits.PullPull = fetch + merge. Because there is merge in pull, after we do git pull, the branch looks likemeaning it merges the branches on local machine and the version on remote node.Pull RequestThe meaning of pull request: request the owner of the code to pull my code, which means fetch it and merge it.If I want to contribute to a project, then I can pull request first. After the main developer accepts it, the two version can be combined into oneFirst thing first, get the code so that we can modify it$ git clone 'url'however, after lots of modification, we want to push it and we may get rejection with no right; as a result, if we do not have the right to write into a branch of a project, we should ‘fork’ it to our github first and then do modification on it. As a result, the steps will befork it first to copy the project to our reporsitoryand clone it$ git clone 'url'and do modification on that forked project. After lots of modifications, create pull request; for example,After we click ‘create pull request’, the modifications will be sent to the owner of this project and if the owner accepts it, the two different versions of code will be merged together.If you are in an organization in github and have the right to push modification directly, then you do not have to use fork first and can do pull request directly. We can still step up the review mechanism for pull request merges; for example, all members clicks accept and then pull it.meaning of pushgit push origin main:secondmeans to push main to the node, origin, and create a branch named secondremove a reporeferenceManagement Create an organization and all repo owned by that organization To fork or not to fork? It depends, but feature branches a must All commits must go through pull requests and squash commits before merging Git pull -> git branch feature/ticket -> make changes -> commit -> git push to feature/ticket -> send PR -> Approved -> Mergehost frontend on github pagesinstall librarynpm install gh-pagesIn package.json, add\"homepage\": \"https://<username>.github.io/<repository-name>/\",\"scripts\": { \"predeploy\": \"npm run build\", \"deploy\": \"gh-pages -d build\",}then runnpm run deployadd .env in root path withPUBLIC_URL=https://ycchenvictor.github.io/world/remember to change all path into relative path so that PUBLIC_URL can be required.user email per repohttps://crunchify.com/how-to-set-github-user-name-and-user-email-per-repository-different-config-for-different-repository/Reference與其它開發者的互動 — 使用 Pull Request（PR） — 為你自己學 Git 高見龍Push 上傳到 GitHub — 為你自己學 Git 高見龍Pull 下載更新 — 為你自己學 Git 高見龍*[Git Note] — React 部署至 GitHub Page 超級淺入遷出Host using GitHub Pages /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/git/2021/05/02/Github.html"},{"id":70,"title":"verb (Japanese)","content":" hljs.highlightAll(); About Me verb (Japanese) IntroductionThis article desribes the regularity of verbs. tense types of verb ます form て form ない form lemma form regular form あります、います、できます、わかります あげます(give)、もらいます(get)、くれます(give) たいです verb classWhy?With this article, we can ?How? & What?tense not past tense for future, be going, common truth example: xxxます past tense use it if the timing is during the past example: xxxました types of verbThere are three types of verb; pesudocode:function type_of(verb) { if (verb === '来ます') { return 'type 3' } else if (verb in ['起きます', '借ります', 'できます', '浴びます', '降ります', '居ます', '着ます', '見ます']) { return 'type 2 exception' } else if (verb.replace('します', '') is in nouns) { return 'type 3' } else if (verb.replace('ます', '').theInitial === 'e') { return 'type 2' } else if (verb.replace('ます', '').theInitial === 'i') { return 'type 1' }} Please input the masu_form of verbtype_of_verb(‘うります’) = type 1type_of_verb(‘たべます’) = type 2forms ます means formal and polite て means order ない means negativeて formPesudocode:function te_form(verb) { if (['type 2', 'type 3'].include type_of(verb)) { return without_masu(verb) + 'て' } else if (verb === 'いきます') { return 'いって' } else if (['い', 'ち', 'り'].include okurigana_of(verb)) { return without_masu(verb) - okurigana_of(verb) + 'って' } else if (['き'].include okurigana_of(verb)) { return　without_masu(verb) - okurigana_of(verb) + 'いて' }　else if (['ぎ'].include okurigana_of(verb)) { return　without_masu(verb) - okurigana_of(verb) + 'いで' } else if (['に', 'み', 'び'].include okurigana_of(verb)) { return　without_masu(verb) - okurigana_of(verb) + 'んで' } else if (['し'].include okurigana_of(verb)) { return without_masu(verb) + 'て' }}function without_masu(verb) { return verb - 'ます'}function okurigana_of(verb) { return 'kana suffixes following kanji stems'} Please input the masu_form of verbte_form(‘たべます’) = ‘たべて’te_form(‘うたいます’) = ‘うたって’when ask someone to do te-form verb + ください example: りんさん、太田さんに電話をたけてください。when only someone need to do te-form verb + ください example: 3年生はバズに乗ってください。express specific timingThe point is doing at specific timing present: te-form verb + います example: 私は今漢字の練習をしています。 example: 今田中さんはもう昼ごはんを食べています。 (now already) example: 呉さんは今まだお酒を飲んでいます。 (now not yet) past: te-form verb + いました example: そのとき、あなたは何をしていましたか？ example: そのとき、山田さんはもうさいさんに電話をかけていました (at that time already) example: そのとき、ちょうさんはまだ洋服を洗っていませんでした。 (at that time not yet) express keeping doing or keeping in a condition present: te-form verb + います example: 私ははんだ塾で日本語を勉強しています。(I keep learning Japanese for a period of time now) example: 私は今この言葉の意味を憶えています。(I keep remembering the meaning of this word now since the past) example: いいえ、私はまだついていません。(No, I keep in the condition, which I not yet arrive.) only in present tenseto ask for permission te_form + も + いいですか？ example: 先に帰ってもいいですか？ affirmative はい、帰ってもいいです かまいません 大丈夫です はい、どうそ、帰ってください negative いいえ、いけません いいえ、だめです いいえ、困ります to express the order of the verbs 私は朝起きて顔を洗ってはを磨きます。 私は大学を卒業してからアメリカへ行きたいです。to express doing verbs at the same time 山本さんはバイクがあって、くるまがあります。(山本 has bike and car)ない formfunction nai_form(verb) { if (verb === 'あります') { return 'no nai form' } else if ('type 1' === type_of_verb(verb)) { return from_i_to_a(verb) + 'ない' } else if ('type 2' === type_of_verb(verb)) { return verb - 'ます' + 'ない' } else if (verb === 'します') {　// type 3 return 'しない' }　else if (verb === 'きます') { // type 3 return 'こない' }}function verb_without_masu(verb) { // should refactor to chain functions verb.without_masu return verb - 'ます'}function from_i_to_a(verb) { without_masu(verb) - last_letter + a_initials_of_last_letter} nai_form(‘うたいます’) = ‘うたわない’when ask someone nai_form - ない + ないで + ください example: あした検査をしますから、朝ご飯を食べないでくださいwhen express have to do something nai_form - ない + なければ + (なりません   いけません   だめです) example: 私は明日も残業をしなければなりません example: この学校の生徒は制服を着なければいけません example: 高橋さんは来週大使館へいかなければだめです なりません > いけません > だめですexpress it’s fine not to do something nai_form - ない + なくても + (いいです   結構です   かまいません) example: 私はあさって学校へ行かなくてもいいですlemma formpesudocode:function lemma_form_of(verb) { if ('type 1' === type_of_verb(verb)) { return without_masu(verb) - okurigana_of(verb) + u_initial_okurigana(verb) } else if (['type 2', 'type 2 exception'].include(type_of_verb(verb))) { return without_masu(verb) + 'る' } else if (verb === 'します') { return 'する' } else if (verb === 'きます') { return 'くる' }} lemma_form_of(‘うたいます’) = ‘うたう’turn verb into noun lemma_form_of(verb) + ‘こと’ example: カレーを作ること then you can treat it as noun in the sentencesexpress something must happen after this verb lemma_form_of(verb) + ‘と’ example: パターを少し入れると、もっと美味しくなります。た formThe regularity of た form is the same as て formPesudocode:function ta_form(verb) { if (['type 2', 'type 3'].include type_of(verb)) { return without_masu(verb) + 'た' } else if (verb === 'いきます') { return 'いった' } else if (['い', 'ち', 'り'].include okurigana_of(verb)) { return without_masu(verb) - okurigana_of(verb) + 'った' } else if (['き'].include okurigana_of(verb)) { return　without_masu(verb) - okurigana_of(verb) + 'いた' }　else if (['ぎ'].include okurigana_of(verb)) { return　without_masu(verb) - okurigana_of(verb) + 'いだ' } else if (['に', 'み', 'び'].include okurigana_of(verb)) { return　without_masu(verb) - okurigana_of(verb) + 'んだ' } else if (['し'].include okurigana_of(verb)) { return without_masu(verb) + 'た' }}function without_masu(verb) { return verb - 'ます'}function okurigana_of(verb) { return 'kana suffixes following kanji stems'} ta_form(‘食べます’) = ‘食べた’ ta_form(‘勉強します’) = ‘べんきょうした’ ta_form(‘うたいます’) = 歌った ta_form(‘磨きます’) = みがいた ta_form(‘死にます’) = しんだ ta_form(‘話します’) = 話したexperience in the past It turns the verb into noun example: 佐藤さんは引っ越したことがあります。list example: 母は毎日洗濯したり料理を作ったりしますexpress one verb then another verb example: 食事をした後で薬を飲んでくださいexpress recommandation example (recommand to do): サラリーマンは毎日ニュースを見たほうがいいです example (recommand not to do): 給料日の前にたくさん買い物をしないほうがいいですregular form affirmative + non-past tense: lemma form (to tell someone a story) 加藤さんはりんさんに私は明日の午後眼鏡を買いに行くと言いました。 affirmative + past tense: ta form example: TBC negative + non-past tense: nai form example: TBC negative + past tense: なかった example: TBC 私は明日の午後目がねを買いにいくあります、います、できます、わかります X は A が (あります、います、できます、わかります) should use with が, not を 彼は自分の鍵があります X は B に (あります、います) when B is location. Express that X exist in B but the point is B ナイフは台所にあります -> 台所 is the point X が B に (あります、います) when B is location. Express that X exist in B but the point is X あげます(give)、もらいます(get)、くれます(give) こうさんは鈴木さんに花をあげました (こうさん give flower to 鈴木さん) <-> 鈴木さんはこうさんに花をもらいました (鈴木さん get flower from こうさん) 私は山田さんにボールぺンをあげます, 私はちょうさんからカレンダーをまらいました (always start from 私) やまもどさんは私にストーブをくれました (やまもどさん give me a stove) (always start from others) おうさんは弟に飴をくれました (くれました can be used by family and self)たいです remove ます and add たいです express wish to do A は xxx B(verb, remove ます and add たいです) example: 私は静かなところで勉強したいです (勉強します remove ます and add たいです) when using たいです, the wordings becomes adjective ends with い adjective: 結婚したい人はお見合いをします past tense: 私はあの池で釣りがしたかったです When we use たいです, because we are using adjective to express verb, we can also use the pattern, X は A が adjective です 私は暖かいコーヒーが飲みたいです referenceJapanese verb conjugation /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/japanese/2022/04/19/verb.html"},{"id":78,"title":"Datatype","content":" hljs.highlightAll(); About Me Datatype IntroductionData types define the way to store values and pass them as parameters. The built-in data types as follow: primitive data types number string boolean undefined: absence of a value null: deliberate non-value symbol: represents a unique identifier reference data types object: represents complex data types, such as arrays, functions, and objects NaN, which stands for “Not a Number” and is returned when a mathematical operation failsVariables in JavaScript do not have to be declared with a specific data type, as the data type is determined dynamically at runtime. This means that a variable can hold different types of data at different points in the program.Why?To work with data more effectively and avoid errors in your code Type conversions: JavaScript automatically converts data types in some situations, such as when performing mathematical operations or comparing values. Understanding how these conversions work is important for avoiding unexpected results in your code. Variable declaration: In JavaScript, variables are dynamically typed, meaning their data type can change based on the value assigned to them. It’s important to understand how variables are declared and initialized to avoid errors in your code. Data manipulation: Understanding data types is crucial for manipulating data effectively in your code. For example, you need to know how to concatenate strings, perform mathematical operations on numbers, and loop through arrays. Memory management: Different data types consume different amounts of memory in JavaScript, which can affect the performance of your program. It’s important to be aware of how much memory your data types are using and to optimize your code accordingly.How?const vs let const is used to declare a variable that cannot be reassigned after its initial value is set, while let allows for reassignment. const variables must be initialized with a value at the time of declaration, whereas let variables can be initialized later. exampleconst x = 5;x = 10; // This will throw an error, because x is a const and cannot be reassigned.let y;y = 5;y = 10; // This is allowed, because y is a let and can be reassigned.if (true) { const z = 5; let w = 10; console.log(z); // This will output 5. console.log(w); // This will output 10.}console.log(z); // This will throw an error, because z is only accessible within the if block.console.log(w); // This will also throw an error, because w is only accessible within the if block.Number Numeric literals:let x = 42; // integerlet y = 3.14; // floating-point numberlet z = -10; // negative integer Arithmetic operators:let a = 5 + 3; // additionlet b = 10 - 4; // subtractionlet c = 6 * 2; // multiplicationlet d = 8 / 2; // divisionlet e = 15 % 4; // modulus (returns the remainder after division) Math library:let f = Math.sqrt(16); // square root of 16let g = Math.floor(3.9); // round down to nearest integer (returns 3)let h = Math.random(); // generate a random number between 0 and 1 NaN:let i = 0 / 0; // NaN (not a number)let j = \"abc\" / 2; // NaN (attempting to divide a string by a number) Infinity and -Infinity:let k = 1 / 0; // Infinitylet l = -1 / 0; // -Infinity Number object:let m = Number(\"42\"); // convert a string to a numberlet n = 42.3456.toFixed(2); // round a number to 2 decimal places (returns \"42.35\")let o = Number.MAX_VALUE; // largest possible number in JavaScriptlet p = Number.MIN_VALUE; // smallest possible positive number in JavaScriptstring string with variable `Hello, ${name}` substring originalString.replace(substringToRemove, \"\") clean text let text = \" Hello World! \";let result = text.replace(/^\\s+|\\s+$/gm,''); HTMLCollectionIf you want to loop itArray.from(document.getElementsByClassName(\"events\")).forEach(function(item) { console.log(item.id);});get textHTMLElement.innerTextnodelistTBCarray fill array with a value Array(5).fill(2) unique Array.from(new Set(myArray)) every const myArray = [0, 0, 0, 0];const containsOnlyZeros = myArray.every(element => element === 0); first lastset create setconst mySet1 = new Set();mySet1.add(1);console.log(mySet1) read setmySet1.has(1); add lots of elementsconst mySet = new Set([1, 2, 3]);const newElements = [4, 5, 6];mySet.add(...newElements);console.log(mySet); // Output: Set(6) { 1, 2, 3, 4, 5, 6 }mapMap allows you to store key-value pairs and quickly retrieve the value associated with a given keyexampleconst myMap = new Map();myMap.set('key1', 'value1');myMap.set('key2', 'value2');console.log(myMap.get('key1')); // Output: 'value1'console.log(myMap.has('key2')); // Output: trueconsole.log(myMap.size); // Output: 2myMap.delete('key1');console.log(myMap.size); // Output: 1map vs object Map can use any value, including objects, as keys, while an Object can only use strings and symbols as keys Map is an ordered list of key-value pairs, while an Object is not guaranteed to be orderedundefined vs nullto be continuedobject example const object1 = {a: 'someString',b: 42,c: false}; get keys Object.keys(object1) get values Object.values(object1) destructing const person = {firstName: 'John',lastName: 'Doe',age: 30};//const { firstName, lastName, age } = person;//console.log(firstName); // Output: Johnconsole.log(lastName); // Output: Doeconsole.log(age); // Output: 30 check whether a value match an attributes: use find or filter; please refer to [methods]What?give real world exampleReferenceSet /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/javascript/2022/12/25/datatype.html"},{"id":82,"title":"React","content":" hljs.highlightAll(); About Me React IntroductionThis article explains how to include react in jekyll.Why?I want to create a sidebar in my gh page.How?initActually, we can just follow Using Webpack and React with JekyllThe concept is to let webpack pack all assets (javascript, css, etc) and import it with bundle.jsinstallrun ls to know what dependency lostnpm lsand npm i xxxReferenceUse React Components and webpack With Jekylljekyll-react-webpackHow I use React in Jekyll (with Create React App) [Updated 2021]Using Webpack and React with Jekyll /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/jekyll/2022/12/04/react.html"},{"id":84,"title":"Overview","content":" hljs.highlightAll(); About Me Overview IntroductionThis article describes my thoughts about computer science.Why?TBCHow?backendfrontendblockchainmachine learningconceptsFor other fields please refer to Computer scienceWhat?give an exampletestReference /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/mindset/2023/02/04/overview.html"},{"id":87,"title":"encoding","content":" MathJax.Hub.Config({ TeX: { equationNumbers: { autoNumber: \"AMS\" } } }); hljs.highlightAll(); About Me encoding IntroductionThis article describes the concept of encodings 7 bit ASCII (encoding): basic 128 characters 8 bit encodings: extensions of 7 bit ASCII Unicode (character set): put every characters in the world in a sets UTF-8 UTF-16 UTF-32Why?Given character sets, we need a way to tell computers which character to be used, so we need a character encoding standard for electronic communication such as ASCII.How?7 bit ASCII ASCII = American Standard Code for Information Interchange Why 7 bits? Computers were using 8 bits when ASCII invented, so these encodings must can be stored and had a whole bit to spare 7 bits -> 128 possible values (\\(2^7\\)) -> use numbers, 0 ~ 127, to represent characters control characters (0 ~ 31): not printable and start particular action such that 7 makes computer to beep. printable characters (32 ~ 127): printable characters such as a, 1, !, ` `, …etc Please refer to appendix for full list of 7 bit ASCII8 bit encodingsThere are more languages other than English and we use following encodings to deal with them: 8 bit single byte (256) Latin: EBCDIC Western: ISO/IEC 8859, MS-Windows, MAC OS Roman Russian related: KOI8, MIK South Asian: ISCII, TSCII, VSCII 8 bit double byte (65536) Japanese: JIS Simplified Chinese: Guobiao Traditional Chinese: Big5 Korean: KS X 1001 problem of 8 bit encodings aboveAfter switching languages, wrong strings may be showed on screen because every encodings has their own characters; for example, the same bytes: 11000000 represents different characters in ISO/IEC 8859-1 (À) and ISO/IEC 8859-2 (Ŕ). Here comes Unicode to deal with this problem.Unicode (character set)For example, As you can see, these characters map to a string with 4 numberings by hexadecimal system. Using hexadecimal system for character set does not mean it is 16 bit encoding. We can use 32 bit, 16 bit, 8 bit encoding to encode a character set; for example, UTF-8 (Unicode Transformation Format – 8-bit) uses 8 bit and up to 6 bytes to encode characters and can encode 1,112,064 valid character code points.UTF-8 (Unicode Transformation Format 8 bits)The following 4 steps show how to find UTF-8 encoding according to unicode of particular character.(step 1) UnicodeThe unicode of 啊 is u554a(step 2) Transfer to BinaryThe binary of 554a (Hexadecimal) is 101010101001010(step 3) Insert into Encoding TableGiven the UTF-8 table in appendix, we need to use the row three; that is,101010101001010 -> 0101 & 010101 & 001010 -> 11100101 10010101 10001010(step 4) transfer back to Hexadecimal System11100101 10010101 10001010 (binary) = E5 95 8A (hexadecimal) and save it.UTF-16 (Unicode Transformation Format 16 bits)Again, UTF-16 follows following 4 steps(step 1) UnicodeIf unicode of character < 10000 (in hexadecimal system), then this unicode will be stored in memory with the unicode itself; for example, unicode of 啊 (u554a) will be stored in memory with 55 and then 4a in big-endian and 4a and then 55 in little-endian.If unicode of character > 10000 (in hexadecimal system), then go on the following steps:(step 2) Unicode minus 1000010A6F (Hexadecimal) minus 10000 -> 0A6F(step 3) Transfer to Binary0A6F -> 000000101001101111(step 4) Insert into Encoding TableGiven the UTF-16 table in appendix00 00000010 10 01101111 -> insert into 110110yy yyyyyyyy 110111xx xxxxxxxx -> 11011000 00000010 11011110 01101111(step 5) transfer back to Hexadecimal System11011000 00000010 11011110 01101111 (binary) -> D802DE6F (hexadecimal) and save it.UTF-32 (Unicode Transformation Format 32 bits)Because encoding of 32 bit can save 2^32 (4294967296) characters, we can directly save the unicode in memory.What?UTF-8 dominates the web page world image source: wiki/UTF-8 Use Unicode -> UTF-8, UTF-16, UTF-32 basic ASCII use 8 bits -> UTF-8 wins Endian issues -> UTF-8 winsEndian issuesGiven Endianness, the same Unicode may have different results in UTF-16 and UTF-32 because computers need to deal with the order of multiple bytes in these encodings; for example,Unicode, U+554a comes and we need to tell computer to read it in order 55 and then 4a (big-endian) or 4a and then 55 (little-endian).UTF-8 does not have this kind of issue.self-made character encodingSteps: define a character set -> replicate encoding -> define mapping to Unicode define character set image source: https://www.youtube.com/watch?v=9PA6twS9Oq4 replicate encoding image source: https://www.youtube.com/watch?v=9PA6twS9Oq4 define mapping to Unicode image source: https://www.youtube.com/watch?v=9PA6twS9Oq4some other notesutf-8 in MySQL actually is not UTF-8 because it only support up to 3 bytes. utf8mb4 in MySQL is UTF-8 because it support up to 4 bytes.Appendixthe concept of bits most basic unit of digital communications possible value: 1 or 0 example of 8 bit: 01011011 in decimal system (10 進位): 01011011 = 91 in hexadecimal system (16 進位): 01011011 = 5Bencoding rule in 7-bit ASCIIfull list of 7-bit ASCIIlist of 8-bit encodingsThe encoding rule are case by case in each 8-bit encoding and please refer to common character encodings in wiki.UTF-8 Number of bytes First code point Last code point Byte 1 Byte 2 Byte 3 Byte 4 Byte 5 Byte 6 1 U+0000 (0) U+007F (127) 0xxxxxxx (2^7)           2 U+0080 (128) U+07FF (2047) 110xxxxx (2^5) 10xxxxxx (2^6)         3 U+0800 (2048) U+FFFF (65535) 1110xxxx (2^4) 10xxxxxx (2^6) 10xxxxxx (2^6)       4 U+10000 (65536) U+1FFFFF (2097151) 11110xxx (2^3) 10xxxxxx (2^6) 10xxxxxx (2^6) 10xxxxxx (2^6)     5 U+200000 (2097152) U+3FFFFFF (67108863) 111110xx (2^2) 10xxxxxx (2^6) 10xxxxxx (2^6) 10xxxxxx (2^6) 10xxxxxx (2^6)   6 U+4000000 (67108864) U+7FFFFFFF (2147483647) 1111110x (2^1) 10xxxxxx (2^6) 10xxxxxx (2^6) 10xxxxxx (2^6) 10xxxxxx (2^6) 10xxxxxx (2^6) 2^7 = 128 2^11 = 2048 2^16 = 65536 2^21 = 2097152 2^26 = 67108864 2^31 = 2147483648ReferenceThe Absolute Minimum Every Software Developer Absolutely, Positively Must Know About Unicode and Character Sets (No Excuses!)ASCII TableASCIIASCII 控制字符(美國標準資訊交換標準碼)3 Steps to Fix Encoding Problems in Ruby[JA] Dive into Encoding / Mari Imaizumi @ima1zumiCharacter encodingDouble-byte character set fundamentalsUnicode character encodingUNICODEA Rubyist’s Introduction to Character Encoding, Unicode and UTF-8What are Double-Byte, Single-Byte, and Multi-Byte Encodings?BitUTF-8進位換算Unicode、UTF-8、UTF-16，終於懂了 /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/mindset/presentation/2022/07/08/encoding.html"},{"id":89,"title":"clean code ch7","content":" hljs.highlightAll(); About Me clean code ch7 IntroductionThe methodology forces coders to handle exception with Try-Catch-Finally StatementWhy?We want code that handles errors with grace and style.How? Use Exception Rather Than Return Codes: we easily forget the else section Write your Try-Catch-Finally Statement First: use TDD to force exceptions Use Unchecked Exceptions: not an issue in ruby Provide Context with Exceptions: write as clear as possible Define Exception Classes in Terms of a Caller’s Needs: the concept of inteface Define the Normal Flow: remove the exception if it should be part of business logic Don’t Return Null Don’t Pass NullWhat?Use Exception Rather Than Return CodesGiven device has been initalized somewhere and we use DeviceHandle to handle this device,class DeviceController ... def send_shut_down handle = DeviceHandle.new(ENVIRONMENT) if handle == DeviceHandle.VALID record = retrieve_device_record(handle) if record.getStatus != DEVICE_SUSPENDED pause_device(handle) clear_device_work_queue(handle) close_device(handle) else logger.log(\"Device suspended. Unable to shut down\"); end else logger.log(\"Invalid handle for: \" + ENVIRONMENT); end end ...toclass DeviceController { ... def send_shut_down begin try_to_shut_down rescue DeviceShutDownError => e logger.log(e) end end private def try_to_shut_down handle = DeviceHandle.new(ENVIRONMENT) if handle == DeviceHandle.VALID record = retrieve_device_record(handle) if record.getStatus != DEVICE_SUSPENDED pause_device(handle) clear_device_work_queue(handle) close_device(handle) end end endWrite your Try-Catch-Finally Statement FirstRSpec.describe 'file' do ... context 'after retriving an invalid file' do it 'should return exception' do expect{File.retrieve('invalid_file')}.to raise_error(NoFileError) end end ...endThen given the spec, we will write method as follow:class File ... def retrieve(file_name) begin 'some process' rescue NoFileError => e puts 'cannot find the file' + e end end ...endThis approach makes sure exception to be included in the methods.Use Unchecked ExceptionsThere is no checked exceptions in ruby but in java. Java will check obvious errors while compiling; to avoid it in java, use Try-Catch-Finally statements. Since the author forces us to use this statements at all time, we do not need checked exceptions.public class CheckedVsUnchecked { public satic void main(String[] args){ readFile('myFile.txt'); // no myFile.txt } private static void readFile (String fileName) { try { // must use it or it will not compile FileReader reader = new FileReader(fileName); } catch (FileNotFoundException fnfe) { System.out.println('No file found'); } }}Provide Context with Exceptionsuseclass File ... def retrieve(file_name) begin 'some process' rescue NoFileError => e puts 'cannot find the file' + e end end ...endinstead ofclass File ... def retrieve(file_name) begin 'some process' rescue Exception => e e end end ...endDefine Exception Classes in Terms of a Caller’s NeedsFor example, ACMEPort may throw three kinds of exceptions DeviceResponseException, ATM1212UnlockedException, and GMXError. We should use the concept of APIFromport = ACMEPort.new(12);def perform begin port.open() rescue DeviceResponseException => e reportPortError(e) logger.log(\"Device response exception\", e) rescue ATM1212UnlockedException => e reportPortError(e) logger.log(\"Unlock exception\", e) rescue GMXError => e reportPortError(e) logger.log(\"Device response exception\") ensure ... endtoport = LocalPort.new(12)def perform begin port.open rescue PortDeviceFailure => e reportError(e); logger.log(e.getMessage(), e); ensure ... endendclass LocalPort def initialize(portNumber) innerPort = ACMEPort.new(portNumber) end def open begin innerPort.open rescue DeviceResponseException => e raise PortDeviceFailure(e) rescue ATM1212UnlockedException => e raise PortDeviceFailure(e) rescue GMXError => e raise PortDeviceFailure(e) end endendDefine the Normal FlowAvoid putting business logic into rescue sectionFromdef perform begin meal_expenses = ExpenseReportDAO.meals(employee.ID) m_total += meal_expenses rescue m_total += meal_per_diem endendtodef perform meal_expenses = ExpenseReportDAO.meals(employee.ID) m_total += meal_expensesendclass ExpenseReportDAO def meals if meal_expense return meal_expense else return per_diem_amount end endendDon’t Return NullReturn empty object or raise an error insteadFromemployees = get_employeesif employees != nil employees.each do |employee| total_pay += employee.pay endenddef get_employees ...endtoemployees = get_employeesemployees.each do |employee| total_pay += employee.payenddef get_employees ... return [] if no_employees # or raise NoEmployeeError ...endDon’t Pass NullPass null usually do not have meaningful results. We should raise exception in the method; however it still cost some run time. The better way is just return it if caller pass a null value.Referenceclean code by Robert /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/mindset/presentation/2022/03/27/clean-code-ch7.html"},{"id":93,"title":"Service","content":" hljs.highlightAll(); About Me Service Introductionquick explanationWhy?focus on why we need itHow? Define a service module class MyService { constructor(param1, param2) { this.param1 = param1; this.param2 = param2; this.data = []; } addData(item) { this.data.push(item); } getData() { return this.data; }}module.exports = MyService; Use this service module const MyService = require('./my-service.js'); const myServiceInstance = new MyService('value1', 'value2');myServiceInstance.addData('item1');myServiceInstance.addData('item2'); console.log(myServiceInstance.getData()); // Output: ['item1', 'item2'] What?ChatGPTclass ChatGPT { constructor() { this.input = null; } perform(sentence) { this.input = sentence; // post this sentence }}ReferenceWhy: asking for the reason or purpose behind something.How: asking for the method or process of doing something.What: asking for information about a specific thing or object. /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/node/2023/04/19/service.html"},{"id":95,"title":"Token","content":" hljs.highlightAll(); About Me Token IntroductionThis article describes how to implement JWT in node project.Why?We need a good way for authentication to grand user permission. For more other authentication method, please refer to here.How?with node and react On the client side (React), when a user submits their sign-up form, a request is made to the server to create a new user account. For example, you can use the fetch API to send a POST request to the server with the user’s information:handleSubmit = (event) => { event.preventDefault(); const { email, password, name } = this.state; fetch('/api/signup', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ email, password, name }) }) .then(response => response.json()) .then(data => { localStorage.setItem('token', data.token); // try to prevent XSS this.setState({ isAuthenticated: true }); }) .catch(error => console.error(error));} On the server side (Node), the user’s information is verified and then added to the database. After that, a JWT is generated and sent back to the client in the response. For example, you can use the jsonwebtoken library to generate a JWT:const jwt = require('jsonwebtoken');app.post('/api/signup', (req, res) => { const { email, password, name } = req.body; //verify the input and create user if (isValid(email, password, name)) { createUser(email,password,name) const user = { email }; const token = jwt.sign(user, 'secret_key'); res.json({ token }); } else { res.status(401).json({ message: 'Invalid input' }); }});It’s important to note that you should also hash the password before storing it in the database. This can be done using a library such as bcrypt. On the client side, the JWT is stored in local storage or a cookie. For subsequent requests to protected routes or resources, the client attaches the JWT to the request header as an Authorization field.const token = localStorage.getItem('token');fetch('/api/users', { method: 'GET', headers: { 'Authorization': `Bearer ${token}` }}).then(response => response.json()).then(data => { console.log(data);}).catch(error => console.error(error)); On the server side, the JWT is extracted from the request header and verified. If the JWT is valid, the request is processed, otherwise, the server sends back a 401 Unauthorized response.const jwt = require('jsonwebtoken');app.use((req, res, next) => { const token = req.headers.authorization; if (token) { jwt.verify(token, 'secret_key', (error, decoded) => { if (error) { res.status(401).json({ message: 'Invalid token' }); } else { req.decoded = decoded; next(); } }); } else { res.status(401).json({ message: 'No token provided' });expirations// Sign a JWT token with an expiration time of 30 minutesconst token = jwt.sign({ userId: 123 }, 'your-secret-key', { expiresIn: '30m' });// Verify the token and check whether it has expiredjwt.verify(token, 'your-secret-key', (err, decoded) => { if (err) { // Token is invalid or has expired } else { // Token is valid and has not expired }});What?give an exampletestReference /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/node/2023/02/10/token.html"},{"id":100,"title":"Api","content":" hljs.highlightAll(); About Me Api IntroductionThis article describes how to design API in nodeWhy?We need a common senseHow? internal API create app and then design the routes in it also needs special way to consume internally external API use axios to CRUD internal APIstructureconcept: create a directory, api/ with API going to be imported in app.jsFor example, api/summary.jsmodule.exports = function(app) { app.get('/', (req, res) => { console.log(req.query) res.send('Hello World!') })}in app.js,...const express = require('express')const api = require('./routes_summary.js');const app = express()app.use(express.json())app.listen(5000, () => { api(app) ...})...reqThe way to get request paramsreq.queryresThe way to get responseres.bodyRESTGiven pre-knowledge, we can compose RESTful them as follow:// restful API// GET /records -> records#index// POST /records -> records#create// GET /records/new -> records#new// GET /records/:id/edit -> records#edit// GET /records/:id -> records#show// PATCH /records/:id -> records#update// PUT /records/:id -> records#update// DELETE /records/:id -> records#destroyconst modelRecord = require('../database/models/record.js')module.exports = (app) => { // TODO: add RESTful api for record here}internal consumeJust call them with proper endpointrequest({ url: 'http://127.0.0.1:3000/api/', //on 3000 put your port no. method: 'POST', json: { obj: Obj } }, function (error, response, body) { console.log({error: error, response: response, body: body});});external APIA real quick example:const axios = require('axios');const data = { param1: 'value1', param2: 'value2'};axios.post('https://api.example.com/path', data) .then(response => { console.log(response.data); }) .catch(error => { console.log(error); });What?give an exampletestReference /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/node/2022/01/26/api.html"},{"id":103,"title":"structure and bonding","content":" MathJax.Hub.Config({ TeX: { equationNumbers: { autoNumber: \"AMS\" } } }); const config = { theme: 'neutral', startOnLoad:true, htmlLabels:true, }; mermaid.initialize(config); hljs.highlightAll(); About Me structure and bonding IntroductionReviewing atoms, bonds, and molecular geometry. nucleus orbitals electron bondingWhy? Anyone with a curiosity about life and living things must first understand organic chemistry Organic chemistry is the study of carbon compoundsHow?graph LR id1((atom)) --> id2((nucleus)) id1((atom)) --> id3((electrons)) id2((nucleus)) --> id4((protons)) id2((nucleus)) --> id5((neutrons)) id3((electrons)) --> id6[orbitals] id3((electrons)) --> id7[bonding]Nucleus a dense, positively charged nucleus subatomic particles called protons, which are positively charged neutrons, which are electrically neutral surrounded at a relatively large distance by negaively charged electrons number of positive protons in the nucleus = number of negative electrons const atom_id = 'atom' let atom = p5Draw('atom') let atomP5 = new p5(atom, atom_id); the number of protons = Z the mass number = A = total number of protons plus neutrons atomic number: 1 for hydrogen, 6 for carbon, 15 for phosphorus, and so on but different mass numbers depending on neutrons Atoms with the same atomic number but different mass numbers are called isotopes Orbitals four different kinds: s, p, d, and f, each with a different shape. s looks like a ball; p looks like a dumbbell; d looks like flower (the real shape of orbitals is too hard to draw, refer to Orbitals: Crash Course Chemistry #25 for further information) stastically, electron spends 90% to 95% of its time in an orbitals, derived from quantum mechanical model hybridiztion: the orbitals will not overlap multiple orbitals forms electron shells; for example, first shell has one s, denoted as 1s; second shell has one s and three p, denoted as 2s + 2p; third shell has one s, three p, and five d, denoted as 3s + 3p + 5d and so on each orbital can hold 2 electrons, so first shell can hold 2 electrons, second shell can hold 8 electrons, and third shell can hold 18 electrons we can simplify electron shell to concentric circles as follow const electron_shell_id = 'electron_shell' let electron_shell = p5Draw('electron_shell') let electronShellP5 = new p5(electron_shell, electron_shell_id);ElectronElectrons follow ground-state electron configuration, a lowest-energy arrangement, which is most stable arrangement; when an electron comes, it goes to the place with lowest energy.Three rules: Aufbau principle: the lowest-energy orbitals fill up first, so the order: 1s -> 2s -> 2p -> 3s -> 3p -> 4s -> 3d, … Noted that it does not follow the order of electron shells but rather the energy level Pauli exclusion principle: one orbital can only contain 2 electrons at most and these 2 electrons must have opposite spins (math result) Hund’s rule: for most stable structure, when two or more orbitals with equal energy available such that 2p has three orbitals with equal energy, electrons occupy each orbital with spins parallel until all orbitals are half-full and then start to full these orbitalsGiven the rules, the order of filling electrons in each orbitals: image source: https://terpconnect.umd.eduand the detail arrangement of 1s 2s 2p 3s: const electronDetailArrangementId = 'electron_detail_arrangement' let electronDetailArrangementP5 = new p5(p5Draw(electronDetailArrangementId), electronDetailArrangementId);bonding Atoms bond together because of more stable state compared to separation Energy flows out when a bond forms All atoms tried to be more stable; noble gas has most stable status by nature He (\\(1s^2\\)) Ne (\\(1s^2 2s^2 2p^6\\)) Ar (\\(1s^2 2s^2 2p^6 3s^2 3p^6\\)) Kr (1s²2s²2p⁶2s²3p⁶3d¹⁰4s²4p⁶) (abbreviated as 3d¹⁰4s²4p⁶) spectrum of bonding const spectrum_of_bondingId = 'spectrum_of_bonding' let spectrum_of_bondingP5 = new p5(p5Draw(spectrum_of_bondingId), spectrum_of_bondingId);Atoms achive ionic bond by transfering electrons and achive covalent bond by sharing electrons. With electronegativity, we can determine whether this bond is ionic, covalent, or polar covalent.electronegativityelectronegativity (EN) is the ability of an element to attract shared electons and the values as follow: image source: McMurry Organic ChemistryRoughly, nonpolar covalent: electronegativities differ by less than 0.5 polar covalent: electronegativities differ by 0.5–2 ionic: electronegativities differ by more than 2ionic bondexample (\\(NaCl\\)): \\(Na\\) (\\(1s^2 2s^2 2p^6 3s^1\\)) can achieve more stable status by losing one electron (\\(1s^2 2s^2 2p^6\\) just like Ne) to \\(Na^+\\) and \\(Cl\\) (\\(1s^2 2s^2 2p^5\\)) can achieve more stable status by gaining one electron (\\(1s^2 2s^2 2p^6\\) just like Ne) to \\(Cl^-\\)polar covalent bondexample (\\(HCl\\)): TBCnonpolar covalent bondexample (\\(CH_4\\)): it takes too much energy for C (\\(1s^2 2s^2 2p^2\\)) to lose 4 electrons or gain 4 electrons, so to be more stable, C will share the electrons with other atoms such as four \\(H\\) and we called this stable substance as molecule and we can draw it as follow: const ch4Id = 'ch4' let ch4P5 = new p5(p5Draw(ch4Id), ch4Id); valence bond theory explains covalent bond: two atoms approach -> orbital with single electoron overlaps the other atom’s orbital with single electron example: (\\(2H.\\) -> \\(H_2\\)) -> release energy, 436 kJ/mol and the best distance between atoms is 74pm Given both H. is \\(1s^1\\), it has no doubt that both H share their electrons the other 1s, making them both \\(1s^2\\) and the shapes looks like (add the egg shapes of H_2 here)hybrid orbitals for bondingexplains the concept of mixed orbitals ready to bond (refer to this) \\(sp^3\\) = s + p + p + p const sp3Id = 'sp3' let sp3P5 = new p5(p5Draw(sp3Id), sp3Id); \\(sp^2\\) = s + p + p const sp2Id = 'sp2' let sp2P5 = new p5(p5Draw(sp2Id), sp2Id); \\(sp\\) = s + p const spId = 'sp' let spP5 = new p5(p5Draw(spId), spId); example (\\(CH_4\\)): C is \\(2s^22p^2\\), desired to share these four electrons. Although there are 2 electrons in 2s and 2 electrons in 2 p orbitals out of \\(2p\\), when C shares the electrons with the other 4 H, the shape of the bonding orbitals will be \\(sp^3\\) which looks like(draw CH_4)* example ($$NH_3$$):(draw NH_3)* example ($$H_2O$$):(draw H_2O)also explain pi and sigma bond \\(sp^2\\) = s + p + p example (\\(C_2H_4\\)): (to be continued) (draw C_2H_4) \\(sp\\) = s + p example (\\(C_2H_2\\)): (to be continued) (draw C_2H_2)####What?ground-state electron configuration of Oxygen const ElectronConfigurationOfOxygenId = 'electron_configuration_of_oxygen' let ElectronConfigurationOfOxygenP5 = new p5(p5Draw(ElectronConfigurationOfOxygenId), ElectronConfigurationOfOxygenId);Predicting the Number of Bonds (\\(PH_?\\))In period table, P is the 15th element -> \\(1s^2 2s^2 2p^6 3s^2 3p^3\\) -> P needs three more electrons to achieve noble gas H is the 1th element -> \\(1s^2\\) -> H needs one more electron to achieve noble gas-> \\(PH_3\\)draw CH3CH2CH3 and predict the value of each bond angle and the shape of each molecule const CH3CH2CH3Id = 'CH3CH2CH3' let CH3CH2CH3P5 = new p5(p5Draw(CH3CH2CH3Id), CH3CH2CH3Id);the number of H in carvone const carvoneId = 'carvone' let carvoneP5 = new p5(p5Draw(carvoneId), carvoneId);answerReferenceMcMurry Organic ChemistryOrbitals: Crash Course Chemistry #25Electron shellElectron configuration罕德定則（Hund’s rule [Hybrid Orbitals explained - Valence Bond Theory Orbital Hybridization sp3 sp2 sp](https://www.youtube.com/watch?v=vHXViZTxLXo&t=11s) /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/organic-chemistry/2022/07/25/1-structure-and-bonding.html"},{"id":54,"title":"(integration) Birds Population","content":" hljs.highlightAll(); About Me (integration) Birds Population Birds populationBoth the article and the lecture discuss whether the growth of human population and the corresponding increase in agriculture and pesticide use harm the birds. The reading material implies that it is true; however, the professor strongly oppose the article.First of all, the passage mentions that the increase of human population decreases the natural habitats of birds, causing birds’ population decreases. Nevertheless, the lecturer argues that some species of birds actually benefit from the urban area such as pigeons and seagull.Secondly, the reading indicates that the increase of agricultural activities costs wilderness area, causing less living area for birds. Yet, the speaker proposed that there are less and less land being used for agriculture because of the advancement of technologies and new corps are developed.Last but not the least, the reading passage suggests that the pesticides will inevitably get into the water and food chain and harm the birds. Once again, the scholar contradicts this idea by putting forward that there will be new and less harmful pesticides and pesticides-resisted corps in the future, which will cause less harm to the birds.In conclusion, the professor opposes all the points in the passage. That is, the professor thinks the bird population will not necessarily decline. /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/english/2022/11/21/(integration)-birds-population.html"},{"id":62,"title":"Separating Actions Calculations Data","content":" const config = { theme: 'neutral', startOnLoad:true, htmlLabels:true, }; mermaid.initialize(config); hljs.highlightAll(); About Me Separating Actions Calculations Data IntroductionLet’s first distinguish actions, calculations, and data with example: grocery shoppingfromsource: grokking simplicitytosource: grokking simplicity Why decide shopping list is calculation rather than action because there is no side effect produced by it side effect: change the attributes of original components decide shopping list did not change the location of this person, the inventories in fridge, …ect Why?With ACD process, we can make sure we can truly solve a problem with perfect functional programming and then utilize the advantages of it such as parallel computing.How?In the functional programming world, we solve a problem with concept of input and output while minimizing the side effect outside each function. To achieve it, following steps (ACD): (action) decompose a problem with flow of actions to define the desired input and desired output of each action (data) find the data needed in each action to define immutable datasets (calculation) with immutable dataset and desired input, define required calculationsTake the example in introduction section as example, we decompose the process into check fridge, drive to store, …etc the input and output of check fridge input: true (whatever reason such as cooking, hungry, …etc) output: inventory in fridge the input and output of drive to store input: inventory to buy output: locations between actions, check fridge and drive to store, the desired input of drive to store is inventory to buy. However, the output of check fridge is inventory in fridge. As a result, there must be a calculation, compare inventory we need and inventory in fridge, here and we can get inventory to buy.What?new codeExample: CouponDog, a company sending coupons via email, wants to have a new feature to send better coupon to customers recommending more other customers. Let’s walk through this problem without any concept of programming and we will get list of customers (action) get list of coupons (action) distinguish customers with > 10 recommendations (calculation) distinguish coupons with better (calculation) compose emails (calculation) send emails (action)Accordingly, we havesource: grokking simplicityInside the Plan list of emails, we need to do step 3 and 4 as follow:source: grokking simplicitysource: grokking simplicityBased on above information, our composition should be as follow:function sendIssue() { // action const coupons = fetchCouponsFromDB(); // action const subscribers = fetchSubscribersFromDB(); //action const emails = emailsForSubscribers(subscribers, coupons); // calculation console.log(emails)// for(let e = 0; e < emails.length; e++) { // action// const email = emails[e];// emailSystem.send(email);// }}function fetchCouponsFromDB() { // here return fake coupons return [ // data { code: 'MAYDISCOUNT', rank: 'good', }, { code: '10PERCENT', rank: 'bad', }, { code: 'PROMOTION45', rank: 'best', }, ]}function fetchSubscribersFromDB() { // here return fake coupons return [ // data { email: 'john@coldmail.com', rec_count: 2, }, { email: 'sam@pmail.co', rec_count: 16, }, ]}function emailsForSubscribers(subscribers, coupons) { // calculation const goodCoupons = selectCouponsByRank(coupons, 'good'); // calculation const bestCoupons = selectCouponsByRank(coupons, 'best'); // calculation const emails = subscribers.map(subscriber => emailsForSubscriber(subscriber, goodCoupons, bestCoupons)) // calculation return emails;}function emailsForSubscriber(subscriber, goodCoupons, bestCoupons) { // calculation const rank = subCouponRank(subscriber); if (rank === 'best') { return message(subscriber.email, bestCoupons) } else if (rank === 'good') { return message(subscriber.email, goodCoupons) } else { 'no email' }}function message(email, coupons) { // data return { from: \"newsletter@coupondog.co\", to: email, subject: \"Your weekly coupons inside\", body: \"Here are the coupons: \" + coupons.map(coupon => coupon['code']).join(\", \") }}function subCouponRank(subscriber) { // calculation if(subscriber.rec_count >= 10) { return 'best'; } else { return 'good'; }}function selectCouponsByRank(coupons, rank) { // calculation const couponsRanked = coupons.filter(coupon => coupon.rank === rank); return couponsRanked}existing codeSuppose we havefunction main(affiliates) { affiliatePayout(affiliates);}function affiliatePayout(affiliates) { for(var a = 0; a < affiliates.length; a++) { figurePayout(affiliates[a]); }}function figurePayout(affiliate) { var owed = affiliate.sales * affiliate.commission; if(owed > 100) { sendPayout(affiliate.bank_code, owed); }}As you can see, this main program will pay salaries to affiliates and it seems only one action in main. This is a terrible design because actually we can break process into steps: get affiliates list calculate the owed fees send payout to themasfunction main() { const affiliates = getAffiliates() // action const owedFees = affiliates.map(affiliate => affiliate.sales * affiliate.commission) // calculation for(let i = 0; i < affiliates.length; i++) { // action sendPayout(affiliate.bank_code, owedFees[i]); }}function sendPayout() { ...}function getAffiliates() { ...}which is actually not just one actionReferencegrokking simplicity /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/functional-programming/presentation/2022/12/10/separating-actions-calculations-data.html"},{"id":63,"title":"Overview","content":" hljs.highlightAll(); About Me Overview IntroductionFunctional programming is a programming paradigm that emphasizes the use of pure functions, immutability, and higher-order functions. Functions can be passed around as arguments to other functions, returned as values, and stored in variables. Pure functions: Easy to reason about and test, since they always return the same output given the same input and have no side effects. This can make your code more reliable and easier to maintain Immutability: Immutability refers to the idea that once a data structure is created, it cannot be modified. Instead, you create a new data structure that is based on the original one. This helps prevent bugs and makes your code more predictable, since you can be sure that the data structure will not change unexpectedly. Higher-order functions: A higher-order function is a function that takes another function as an argument, or returns a function as its result. Higher-order functions allow you to write more concise and expressive code, and they can help you avoid repetition and increase code reuse.Why? Improved code quality: By emphasizing pure functions and immutable data structures, functional programming can lead to code that is easier to read, test, and maintain. With fewer side effects to worry about, it can be easier to reason about the behavior of a program and to ensure that it is working correctly. Concurrency and parallelism: Take advantage of multiple processing cores or distributed systems. Since pure functions have no side effects, they can be safely executed in parallel without worrying about race conditions or other synchronization issues. Better abstraction and modularity: Abstractions such as higher-order functions, which can make it easier to write reusable code that can be composed and combined in flexible ways. This can help reduce code duplication and make it easier to reason about the behavior of a program. Declarative programming: Functional programming emphasizes what a program should do rather than how it should do it. This can make code easier to read and understand, especially for complex tasks that involve many transformations on data. Strong type systems: Many functional programming languages have strong type systems that can catch errors at compile time rather than at runtime. This can help catch bugs earlier in the development process and reduce the likelihood of runtime errors.How?Pure functionsTechniques to create them Distinguishing actions, calculations, and data Isolating TimelinesImmutabilitymore predictable and easier-to-maintain codeHigher-Order FunctionsThis chapter introduces the concept of higher-order functions, which are functions that can take other functions as arguments or return functions as results. The author explains the advantages of higher-order functions, and how they can be used to write more expressive and modular code. higher order function will return a function; for examplefunction baker(degree) { return function (food) { return food + ' baked in ' + degree; }}var baker_100 = baker(100);baker_100('banana') No iterationUse map, reduce, filter instead. For example, we want to make a sandwich with ingredients, bread, tomato, onion, lettuce and we need to process them before making sandwich. With iteration, we can dovar ingredients = ['bread', 'tomato', 'onion', 'lettuce']for (let i = 0; i < ingredients.length; i++) { ingredients[i] = ingredients[i] + '_processed';}console.log(ingredients)which the ingredients changed, causing side effect. Or we can achieve it withvar ingredients = ['bread', 'tomato', 'onion', 'lettuce']ingredientsProcessed = []for (let i = 0; i < ingredients.length; i++) { ingredientsProcessed[i] = ingredients[i] + '_processed'}console.log(ingredientsProcessed)console.log(ingredients)tedious, and we can use mapconst ingredients = ['bread', 'tomato', 'onion', 'lettuce']ingredientsProcessed = ingredients.map(x => x + '_processed')What?I got the give a real world example, I think I should try to make my frontend projects fits functional programmingReferenceLearning Functional Programming with JavaScript - Anjana Vakil - JSUnconfgrokking the simplicity /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/functional-programming/2022/12/10/overview.html"},{"id":67,"title":"Http","content":" hljs.highlightAll(); About Me Http IntroductionHTTP is on application layer; With this layer, people use understandable logics to operate and achieve their goals; for example, users can use mouse to click a link on webpage in browsers, and then the client side will send requests which follows HTTP and walk through the layers below application layer to server. Given the informations sent from client, server side will parse these informations to decide the next move.The layers as follow: reference: https://developer.mozilla.org/en-US/docs/Web/HTTP/Overview Why?HTTP (HyperText Transfer Protocol) defines the official way for machines to communicate with each other. It normalizes the communications between client side (browsers in Mac, Pc, iPhone, …etc) and server side on internet.How?For example, a user uses browser and want to see news on website. Then the following steps occur: user input URL (uniform resource locator) in browsers browsers identify the specific server browsers send request to the specific server The specific server response dataInput URLUser knows the specific URL to locate the website and input it into web browser; for example, http://www.example.com/index.html. This URL means please use http to GET index.html file from www.example.com and it will send somthing belowIdentify Specific ServerThe browsers will go to the internet try to get www.example.com. The way it uses to identify www.example.com is through IP address with DNS. DNS will map www.example.com to a specific IP address for browsers locate the specific server.Browsers Send Data to The Specific ServerAfter it locate the server, it will send a HTTP request to the server through internet and the message will go through bottom layers. For example,GET / HTTP/1.1Host: www.example.comUser-Agent: Mozilla/5.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Language: en-GB,en;q=0.5Accept-Encoding: gzip, deflate, brConnection: keep-aliveThe meaning of this message: get / through HTTP/1.1 from www.example.com and HTTP/1.1 means the version, 1.1 of HTTP.An HTTP request from client side contains: version type example: HTTP/1.0 intention: let sender to tell receiver the format of this http message and the expected format of further http communication URL TBC method TBC request headers: key informations (refer to wiki) body (optional)The Specific Server Response dataIf the server successfully get the request from browsers, the browsers will returnHTTP/1.1 200 OKDate: Mon, 23 May 2005 22:38:34 GMTContent-Type: text/html; charset=UTF-8Content-Length: 155Last-Modified: Wed, 08 Jan 2003 23:11:55 GMTServer: Apache/1.3.3.7 (Unix) (Red-Hat/Linux)ETag: \"3f80f-1b6-3e1cb03b\"Accept-Ranges: bytesConnection: close<html> <head> <title>An Example Page</title> </head> <body> <p>Hello World, this is a very simple HTML document.</p> </body></html>The meaning of this message: Successfully locate HTTP/1.1 and return status 200 and the type of data to be sent is text/html. 200 is a kind of HTTP status, meaning success.An HTTP response from server side contains: status code TBC response headers: key informations (refer to wiki) body (optional)If fails, the browsers will returnHTTP/1.1 404 NOT FOUNDmeaning it cannot found www.example.com and return HTTP status, 404All the status:Informational responses (100–199)Successful responses (200–299)Redirection messages (300–399)Client error responses (400–499)Server error responses (500–599)What?TBCReferenceHypertext Transfer Protocol - WikipediaHTTP: Hypertext Transfer Protocol (article) Khan AcademyAn overview of HTTPHTTP Requests Codecademy什麼叫做 Protocol (通訊協定)5 Advantages and Disadvantages of HTTP Drawbacks & Benefits of HTTP一文搞懂 HTTP 和 HTTPS 是什麼？兩者有什麼差別｜ALPHA Camp Blog什麼是 URL 網址 IP ？網域 Domain 中文 意思是什麼？｜鵠崙設計HTTP response status codesWhat is HTTP?List of HTTP header fieldsRFC 1945, Hypertext Transfer Protocol - HTTP/1.0 /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/internet/2021/04/09/http.html"},{"id":69,"title":"noun (Japanese)","content":" const config = { theme: 'neutral', startOnLoad:true, htmlLabels:true, }; mermaid.initialize(config); hljs.highlightAll(); About Me noun (Japanese) IntroductionThis article describes the common nouns in following aspects: personal pronoun deixis numbers age dollar time absolute time relative time period location regular formWhy?To memorize the essential nouns.How & Whatpersonal pronoun   singular plural First person 私 (わたし) 　私達 (わたしたち) second person あなた あなたたち third person (male) かれ 彼たち third person (female) かのじょ かのじょたち Use あなた when you do not know who he/she is but should not use it towards someone familiar. We can use their last name to show our familiarity.deixis Do not put noun after これ, それ, あれ, どれ; use この, その, あの, どの if you want to have noun after. こちら, … is more formal than ここ, … A talk to B: こ (near A), そ (near B), あ (far from A and B), ど (?)numbers 1(いち), 2(に), 3(さん), 4(よん), 5(ご), 6(ろく), 7(なな), 8(はち), 9(きゅう), 10(じゅう) 一(ひ)、二(ふ)、三(み)、四(よ)、五(いつ)、六(む)、七(なな)、八(や)、九(ここの)、十(とお) other 千 pronounced as せん but ぜん in 三千 ハ pronounced as はち but はっ in 八百 and 六百 一 proununced as いち but いっ in 一千万\\ omit いち when pronouncing numbers, 1,xxx; 1,xxx,xxx; 1xx,xxx,xxx age please refer to 2022-03-19-special-pronounce other 二十 can be pronounced as はたち 100歳 (ひゃくさい) dollar 4円 pronounced as よえんpeople一人(ひとり)、二人(ふたり)、三人(さんにん)、四人(よにん)、五人(ごにん)、六人(ろくにん)、七人(ななにん/しちにん)、八人(はちにん)、九人(きゅうにん)、十人(じゅうにん)timeabsolute timeThe wordings in bold has special pronounciation: 月(がつ): 一月(いちがつ), 二月(にがつ), 三月(さんがつ), 四月 (しがつ), 五月(ごがつ), 六月(ろくがつ), 七月 (しちがつ), 八月(はちがつ), 九月 (くがつ), 十月(じゅうがつ), 十一月(じゅういちがつ), 十二月(じゅうにがつ) 月曜日(げつようび), 火曜日(かようび), 水曜日(すいようび), 木曜日(もくようび), 金曜日(きんようび), 土曜日(どようび), 日曜日(にちようび) 週(しゅう): 三週 (さんしゅう) 日(にち): 一日 (ついたち), 二日 (ふつか), 三日 (みっか), 四日 (よっか), 五日 (いつか), 六日 (むいか), 七日 (なのか), 八日 (ようか), 九日 (ここのか), 十日 (とおか), 十四日 (じゅうよっか), 二十日 (はつか), 二十四日 ((にじゅうよっか) regular number pronounce + にち: 十一日, 十二日, 十三日, 十五日, 十六日, 十七日, 十八日, 十九日, 二十一日, 二十二日, 二十三日, 二十五日, 二十六日, 二十七日, 二十八日, 二十九日, 三十日, 三十一日 時(じ): 一時(いちじ)、二時(にじ)、三時(さんじ)、五時(ごじ)、六時(ろくじ)、八時(はちじ)、十時(じゅうじ) special: 四時 (よじ), 七時 (しちじ), 九時 (くじ) 分 (ぷん): (to be continued) 1, 3, 4, 6, 8, 10, 13, 20, 24, 28, 30, 31, 40, 50, 何 + 分 (ぷん) 二分 (にふん), 五分 (ごふん), 七分 (ななふん), 九分 (きゅうふん), 十五分 (じゅうごふん), 半 (はん), 37分 (さんじゅうななふん), 42分 (よんじゅにふん), 49分 (よんじゅうきゅうふん) 一分 (いっぷん), 六分 (ろっぷん), 八分 (はっぷん), 十分 (じゅっぷん), 20分 (にじゅっぷん), 28分 (にじゅうはっぷん), 30分 (さんじゅっぷん), 31分 (さんじゅういっぷん), 40分 (よんじゅっぷん), 50分 (ごじゅっぷん) relative timeIt’s easier to understand it with Chinese. Please read the row of week first and then compare the logics. It’s inappropriate for not listing the special pronunce words here for comparation.   再来(さらい) 来(らい) 今(こん/こ/きょ) 先(せん)/去(きょ)/昨(き) 一昨(おと)/先々(せんせん) 毎(まい) 年(ねん/とし) 再来年 来年 今(こ)年(とし) 去(きょ)年   毎年(まいとし) 月(げつ/つき) 再来月 来月 今月 先月 先々月 毎月(つき) 週(しゅう) 再来週 来週 今週 先週 先々週 毎週 日 明後日(あさって) 明日(あした) 今日(きょう) 昨日(きのう) 一昨日(おととい) 毎日(まいにち) graph TB A(朝,あさ:sun raise to 10:00) --> B(午前中, ごぜんちゅう: sun raise to 11:59) B --> C(昼,ひる/お昼,おひる/正午,しょうご: right at 12:00) C --> D(夕方,ゆうがた: 17:00 to sunset) D --> E(晩,ばん: sunset to 24:00) E --> F(夜,よる: sunset to sun raise)usage of relative time 明日の飛行機: when + の + noun 明後日 の 10時 -> 明後日10時: when + の + when and can be when + when 店は今月暇です or 今月店は暇ですperiodTo express a given period; for example, in 10 seconds. Again, it also follows the regularity of 2022-03-19-special-pronounce.mdexample: { in_3_second: 三秒間 (さんびょうかん), // the かん is omittable in_3_minutes: 三分間 (さんぷんかん), // the かん is omittable in_3_hours: 3時間 (さんじかん), // the かん is not omittable in_3_days: 三日間 (みっかかん), // the かん is omittable in_3_weeks: 三週間 (さんしゅうかん), //　the かん is not omittable in_3_months: 三カ月間 (さんかげつかん), // the かん is almost omittable (?) in_3_years: 三年間 (さんねんかん), // the かん is omittable} 前(まえ)、後(ご): add after the period example: ５時間前(ごじかんまえ)、十日後(とかご) location 上(うえ)、下(した)、左(ひだり)、右(みぎ)、前(まえ)、後ろ(うしろ)、外(そと)、中(なか)、東(ひがし)、西(にし)、南(みなみ)、北(きた) 隣(となり), it means next to 横(よこ), it means the objects on the row 側(そば), it means side 近く(ちかく), it means near 向こう(むこう), it means the directionusage of location noun(location) + に example: 上に　…ectregular form informal between a formal sentenceexamples affirmative + non-past tense: - です + だ from: 李さんは留学生ですから、日本語があまり上手ではありありません。 to: 李さんは留学生だから、日本語があまり上手ではありありません。(informal) to: 日本語があまり上手ではありありません。 李さんは留学生だからです。(formal) affirmative + past tense: - です + だった example: TBC negative + non-past tense: - です example: TBC negative + past tense: - です example: TBC Reference /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/japanese/2022/05/26/noun.html"},{"id":91,"title":"Music","content":" hljs.highlightAll(); About Me Music IntroductionMusic plays an important role in human life, and its beauty and power can be appreciated and enjoyed by all A form of art that uses sound to express emotions, ideas, and experiences Universal language that transcends cultural boundaries Music can be created and performed in many different styles and genres, including classical, rock, pop, jazz, hip-hop, and more Listening to music can reduce stress, improve mood, and enhance cognitive function Playing an instrument or singing can improve hand-eye coordination, develop fine motor skills, and boost self-esteem Used for therapeutic purposes, such as music therapy, which can help individuals with physical, emotional, or mental health issuesWhy?I need itHow?In this article, I am going to produce a song from zero to publish.songwritingThe first step in producing a song is to write the lyrics and melody. This can be done by a single person or a team of songwriters, and can be based on personal experiences, stories, or emotionsPre-productionOnce the song is written, the next step is to develop a rough arrangement of the song. This can involve deciding on the structure of the song, the instrumentation, and the overall sound and feel of the music.Recording: After the pre-production stage, the song is recorded. This can involve recording the instrumental parts and vocals separately or simultaneously, depending on the preference of the producer or artist.Editing: After recording, the individual tracks are edited and mixed together to create a final version of the song. This can involve adjusting levels, adding effects, and manipulating the sound of individual tracks.Mastering: Once the final mix is complete, the song is mastered, which involves optimizing the sound of the song for different playback systems, such as radio or streaming services.Distribution: After the song is mastered, it is ready for distribution. This can involve releasing the song through a record label, distributing it through online platforms, or promoting it through live performances.What?give real world exampletestReferenceWhy: asking for the reason or purpose behind something.How: asking for the method or process of doing something.What: asking for information about a specific thing or object. /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/music/2023/04/11/music.html"},{"id":92,"title":"Overview","content":" hljs.highlightAll(); About Me Overview IntroductionMySQL is a kind of SQL language for data manipulation in relational database.Why?(to be continued)How?install install: brew install mysql start: brew services start mysqlother console: mysql -u root -p and then enter password create: row (details below): INSERT INTO table_name(attributes...) VALUES(values...) table (details below): CREATE TABLE desired_table_name ... database: CREATE DATABASE desired_database_name read: list of databases: SHOW DATABASES;’ specific database: USE database_name; list of tables: SHOW TABLES; specific table: SELECT * FROM users; update rename database first approach (details below): create a new database -> move tables to new database -> remove the old database second approach (details below): export and import with mysqldump rename table: RENAME TABLE tb1 TO tb2; transfer table: CREATE TABLE destination_db.my_table SELECT * FROM source_db.my_table; delete database: drop database <db_name>; table in database: DROP TABLE \"TABLE_NAME\"; row in table: DELETE FROM ‘table_name’ WHERE id = 1 LIMIT 1 data type integer types: INTEGER, INT, SMALLINT, TINYINT, MEDIUMINT, BIGINT NOT NULL: No empty value in this column VARCHAR(255): Each cell in this column can include up to 255 characters time related DATE: reveal data in format, 'YYYY-MM-DD' and range from '1000-01-01' to '9999-12-31' DATETIME: reveal data in format, 'YYYY-MM-DD HH:MM:SS' and range from '1000-01-01 00:00:00' to '9999-12-31 23:59:59' TIMESTAMP: reveal data in format, 'YYYY-MM-DD HH:MM:SS' and range of '1970-01-01 00:00:01' UTC to '2038-01-19 03:14:07' UTC DECIMAL(M, D): M means maximum number of digits (the precision) and has range from 1 to 65 D means number of digits to the right of the decimal point (the scale) and has a range of 0 to 30 and must be no larger than M PRIMARY KEY: unique and not empty numberings to identify each record in a table relations create (detail below): FOREIGN KEY ... REFERENCES ... settings table: DESCRIBE users; insert rowexample:INSERT INTO timeseries_data_stocks(name, ticker, introduction) VALUES('S&P_500', '^GSPC', 'S&P 500 is a market-capitalization-weighted index of the 500 largest U.S. publicly traded companies by market value.')create tableexample:CREATE TABLE users(id INT(11) AUTO_INCREMENT PRIMARY KEY, name VARCHAR(100), email VARCHAR(100), username VARCHAR(30), password VARCHAR(100), register_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP);rename databasefirst approachCREATE DATABASE new_db_name;RENAME TABLE db_name.table1 TO new_db_name.table1, db_name.table2 TO new_db_name.table2;DROP DATABASE old_db_name;second approach# export databasemysqldump -u root -p pwd db_name > db_name_dump.sql# create new databasemysqladmin -uroot -p pwd create new_db_name # ormysql -uroot -p pwd -e “create database new_db_nme”# import databasemysql -uroot -p pwd new_db_name < db_name_dump.sql# drop old databasemysql -uroot -p pwd -e “DROP DATABASE db_name”setup relationsTo let table, timeseries_data_prices, have relation with table, customers, upon creation,CREATE TABLE timeseries_data_prices( customer_id INT, amount DOUBLE, FOREIGN KEY (customer_id) REFERENCES customers(id));What?Here give some pratical examplesinsert csvcreate table -> load data -> security issue (error)Create table with same column names of csv fileCREATE TABLE Nikkei_225 ( id INT NOT NULL AUTO_INCREMENT, Date DATE NOT NULL, Open DECIMAL(19, 4), High DECIMAL(19, 4), Low DECIMAL(19, 4), Close DECIMAL(19, 4), Adj_Close DECIMAL(19, 4), PRIMARY KEY (id));load csv dataLOAD DATA INFILE '/private/tmp/C.csv' INTO TABLE Nikkei_225 FIELDS TERMINATED BY ',' ENCLOSED BY '\"' LINES TERMINATED BY '\\n' IGNORE 1 ROWS; FIELDS TERMINATED BY ',' means the method to separate each data in a row is by , ENCLOSED BY '\"' means each data is warped by \" LINES TERMINATED BY '\\n' means the separating method between each line is \\n, the regular expression representing change line IGNORE 1 ROWS means the process during import csv file will ignore the column names whose location is on first rowReference /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/mysql/2022/08/12/overview.html"},{"id":94,"title":"Web Security","content":" hljs.highlightAll(); About Me Web Security IntroductionThis article describes how node deal with web security.Why?Please refer to here to see why we need to deal with web security.How?CORSWe can add CORS middleware in node// initconst express = require('express')const app = express()...// corsconst cors = require('./middleware/cors.js');app.use(cors);// APIconst api = require('./api/api_summary.js');if (process.env.NODE_ENV === 'development') { app.listen(5000, () => { api(app) })} else if (process.env.NODE_ENV === 'test') { app.listen(8080, () => { api(app) })} else { // TODO for production}module.exports = appand the middlewarecors = (req, res, next) => { // Website you wish to allow to connect res.setHeader('Access-Control-Allow-Origin', 'http://localhost:3000'); // Request methods you wish to allow res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS, PUT, PATCH, DELETE'); // Request headers you wish to allow res.setHeader('Access-Control-Allow-Headers', 'X-Requested-With, content-type, Authorization'); // Set to true if you need the website to include cookies in the requests sent to the API (e.g. in case you use sessions) res.setHeader('Access-Control-Allow-Credentials', true); // Pass to next layer of middleware next();}module.exports = cors we define resources of node can only be requested by localhost:3000 remember to add headers of fields in Access-Control-Allow-HeadersWhat?to be continuedReference /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/node/2023/02/13/web-security.html"},{"id":97,"title":"Sign Up And Login","content":" hljs.highlightAll(); About Me Sign Up And Login IntroductionThis article describes how to implement sign up and log in with express-session passport (For login authentication) middleware for authentication multiple authentication strategies Local Authentication (username and password) OAuth (e.g. Facebook, Google) OpenID Connect improve the security bcrypt (encode password and store it in database, so attackers still cannot attack even they access database)Why?Validate whether this user can use our productHow?server body-parser express-session passport...// parse bodyconst bodyParser = require('body-parser')app.use(bodyParser.json())// sessionconst session = require('express-session');app.use(session({ secret: 'keyboard cat', resave: true, saveUninitialized: true,}));// passportconst passport = require('./middleware/passport.js');app.use(passport.initialize());...module.exports = appAPI signup frontend post email and password backend encode password with bcrypt and store email and encoded password in database return jwt token login frontend post email and password backend find user with email backend decode password return jwt token const passport = require('../middleware/passport.js');const User = require('../database/models/user.js');const jwt = require('jsonwebtoken');module.exports = (app) => { app.post('/signup', async (req, res, next) => { // create const email = req.body.params.username const password = req.body.params.password if (!email || !password) { return res.status(401).json({ msg: 'Please enter all fields' }); } const user = await User.create({ email, password }) const token = jwt.sign(user.email, 'secret_key'); res.json({ token: token }); res.end() }) app.post( '/login', passport.authenticate('local'), (req, res) => { res.status(200).send({token: req.user.token}); } );}passport middlewareYou can think passport.js as a middleware to check whether this user can enter the border of our app. add ./middleware/passport.jsconst User = require('../database/models/user.js');const LocalStrategy = require('passport-local').Strategy;const passport = require('passport');const jwt = require('jsonwebtoken');const customizedPassport = passport.use( new LocalStrategy({ // here can be changed to JWT strategy usernameField: 'email', passwordField: 'password', session: false, }, async (username, password, done) => { user = await User.findOne({ username, password }) if (!user) { return done(null, false, { message: 'no user' }); } else { const token = jwt.sign(user.email, 'secret_key'); return done(null, {token: token}); } }));customizedPassport.serializeUser(function(user, done) { done(null, user);});customizedPassport.deserializeUser(function(user, done) { done(null, user);});module.exports = customizedPassportspecTBCsession vs tokenI just choose JWT (token) for my apps (Of course, we can use both). Both sessions and JWTs (JSON Web Tokens) are commonly used for user authentication and authorization.Session: server-side authentication -> server creates unique session ID -> store on server -> send it to client as cookie -> client send session ID in each request -> match for authenticationJWT: stateless authentication -> server generates token containing the user’s identity -> send to client as a response to a successful login request -> client includes the token in header of requests -> server authenticate and authorizeWhat?give a project and use postman to demoReferenceNode Authentication using passport.js - Part 1How do you debug Jest Tests?Username & PasswordEasy Way to Debug Passport Authentication in Express[npm] Passport 筆記（Learn to Use Passport JS）Session vs Token Authentication in 100 Seconds /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/node/2022/12/31/sign-up-and-login.html"},{"id":98,"title":"Node","content":" hljs.highlightAll(); About Me Node IntroductionThis article describes how to setup baseline node app.Why? node: real-time, high-performance, and scalable network applications. rails: convention -> easier to code & build app quickerHow?init(1) install dependencies: for production node () pg (connect postgreSQL database) dotenv axios (executes get and post) bcrypt (encode password and store it in database, so attackers still cannot attack even they access database) for development & test nodemon debug (2) initialize:mkdir my-projectcd my-projectnpm init -y(3) git:add .gitignore# Dependency directoriesnode_modules/# Optional npm cache directory.npm# dotenv environment variables file.env(4) env:In .env, we can add environment variables we want; for example, how to connect development database …etcWe can call it with process.env.xxx(5) serverNODE_ENV=development npx nodemon server.jsstructureThis is what I prefer node app test api configs models database migrations middleware services sign in and sign up server.js (core file to start the app) Import and ExportWhether to use import or require() in Node.js project depends on the version of Node.js and personal preference for code style and syntax, with import being advantageous for newer versions of Node.js, while require() may be preferred for backwards compatibility and certain package compatibility. For more information, please refer to import and exportabsolute pathTBCserver(1) server.js// initconst express = require('express')const app = express()// parse bodyconst bodyParser = require('body-parser')app.use(bodyParser.json())// passportconst passport = require('./middleware/passport.js');app.use(passport.initialize());// CSRFconst cors = require('./middleware/cors.js');app.use(cors);// APIconst api = require('./api/api_summary.js');if (process.env.NODE_ENV === 'development') { app.listen(5000, () => { api(app) })} else if (process.env.NODE_ENV === 'test') { app.listen(8080, () => { api(app) })} else { // TODO for production}module.exports = app passport for sign up and login(2) package.json\"scripts\": { \"test\": \"NODE_ENV=test jest\", \"dev\": \"NODE_ENV=development npx nodemon server.js\", \"debug\": \"npx nodemon --inspect-brk server.js\"}, test it with curl: curl http://localhost:5000/DatabaseSet up a database and models for a node project using PG and Sequelize. The process involves creating a database, installing Sequelize, configuring it using a .sequelizerc file and a config.js file, generating a migration file for the models, and migrating the database. For more information, please refer to database setupServiceIn Node.js, a service module can be a self-contained piece of code that performs a specific task or set of tasks, such as communicating with an external API, handling database interactions, or performing complex business logic. For more information, please refer to serviceModelVarious libraries and frameworks such as Mongoose, Sequelize, or Bookshelf can be used to implement models in Node.js, providing an ORM layer for interacting with databases and managing data models. For more information, please refer to modelAPIAPIspecspecdebuggerprojectIn package.json,\"scripts\": { \"debug\": \"NODE_ENV=test npx nodemon --inspect-brk server.js\",}and run debug withnpm run debugand in chrome, enter chrome://inspect and then click “inspect”consoleThe better way is to use vscode.open command palette with Command + Shift + P and then inputDebug: JavaScript Debug TerminalIn the terminal, inputnpm test --watch # for jest# ornode xxx.js # for plain scriptThen we can debug the code in [debug console]File storeconst fs = require('fs');// Sample JSON dataconst myData = { \"name\": \"John\", \"age\": 30, \"city\": \"New York\"};// Convert JSON data to a stringconst jsonString = JSON.stringify(myData);// Write the JSON data to a filefs.writeFile('myData.json', jsonString, function (err) { if (err) throw err; console.log('Saved!');}); readWhat?TBCReferenceHow to organize routes in Nodejs Express appHow to use .env file in node.jsModel Querying - Findersjest debugMocking a Database in Node with JestNode.js v19.5.0 documentationnpm Passport 筆記（Learn to Use Passport JS）Password hashing in Node.js with bcrypt /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/node/2022/12/30/node.html"},{"id":106,"title":"Grokking Simplicity Ch7","content":" const config = { theme: 'neutral', startOnLoad:true, htmlLabels:true, }; mermaid.initialize(config); hljs.highlightAll(); About Me Grokking Simplicity Ch7 IntroductionMaintaining immutability when interacting with code designed with mutable data.Why?Stay immutable with legacy code and other library designed with mutable dataHow?For example, we have a legacy code, black_friday_promotion, which modifies shopping_cart for black fridaylegacy code pollute immutable designThe main process of add_item_to_cartfunction add_item_to_cart(name, price) { const item = make_cart_item(name, price); shopping_cart = add_item(shopping_cart, item); let total = calc_total(shopping_cart); set_cart_total_dom(total); update_shipping_icons(shopping_cart); update_tax_dom(total); black_friday_promotion(shopping_cart); // legacy -> having mutable issues}and then the shopping_cart will be pollutedrules Copy as data leaves your code Make a deep copy of the immutable data Pass the copy to the untrusted code Copy as data enters your code Immediately make a deep copy of the mutable data passed to your code Use the copy in your code => these two steps confine the mutable data in legacy codeinteract with it: defensive copyingSolution: doppelgänger (real, copy)function add_item_to_cart(name, price) { const item = make_cart_item(name, price); shopping_cart = add_item(shopping_cart, item); // should be immutable let total = calc_total(shopping_cart); set_cart_total_dom(total); update_shipping_icons(shopping_cart); update_tax_dom(total); const cart_copy = deepCopy(shopping_cart); // deep copy (rule 1) black_friday_promotion(cart_copy); // pass it to the untrusted code (rule 1) and the cart_copy may be mutable shopping_cart = deepCopy(cart_copy) // deep copy (rule 2) and use it in our code}The black_friday_promotion consumes cart_copy, modify cart_copy, and refer to cart_copy without any issue related to shopping_cart. But we can still get modified shopping_cart after black_friday_promotiondeepCopy Every nested object and array is copied cannot share those unchanged dataexample:const user = { name: 'John Cena', age: 45, job: 'WWE Actor'}const deepClone = {...user} // use in frontend frameworkconst shallowClone = userdeepClone['name'] = 'new John Cena'console.log(user) // deep clone has nothing to do with the real oneshallowClone['name'] = 'new John Cena'console.log(user)What? Defensive copying in web application programming interfaces (API):graph LR id1(request) --JSON-deep-copy-from-request--> id2(API) id2(API) --JSON-deep-copy-from-API--> id3(response) Defensive copying in Erlang and ElixirThe functions designed in both languages follow functional programming. They will deepCopy the data sent in and received from.Referencegrokking simplicity /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/mindset/presentation/2023/01/05/grokking-simplicity-ch7.html"},{"id":107,"title":"Separating Actions Calculations Data","content":" const config = { theme: 'neutral', startOnLoad:true, htmlLabels:true, }; mermaid.initialize(config); hljs.highlightAll(); About Me Separating Actions Calculations Data IntroductionLet’s first distinguish actions, calculations, and data with example: grocery shoppingfromsource: grokking simplicitytosource: grokking simplicity Why decide shopping list is calculation rather than action because there is no side effect produced by it side effect: change the attributes of original components decide shopping list did not change the location of this person, the inventories in fridge, …ect Why?With ACD process, we can make sure we can truly solve a problem with perfect functional programming and then utilize the advantages of it such as parallel computing.How?In the functional programming world, we solve a problem with concept of input and output while minimizing the side effect outside each function. To achieve it, following steps (ACD): (action) decompose a problem with flow of actions to define the desired input and desired output of each action (data) find the data needed in each action to define immutable datasets (calculation) with immutable dataset and desired input, define required calculationsTake the example in introduction section as example, we decompose the process into check fridge, drive to store, …etc the input and output of check fridge input: true (whatever reason such as cooking, hungry, …etc) output: inventory in fridge the input and output of drive to store input: inventory to buy output: locations between actions, check fridge and drive to store, the desired input of drive to store is inventory to buy. However, the output of check fridge is inventory in fridge. As a result, there must be a calculation, compare inventory we need and inventory in fridge, here and we can get inventory to buy.What?new codeExample: CouponDog, a company sending coupons via email, wants to have a new feature to send better coupon to customers recommending more other customers. Let’s walk through this problem without any concept of programming and we will get list of customers (action) get list of coupons (action) distinguish customers with > 10 recommendations (calculation) distinguish coupons with better (calculation) compose emails (calculation) send emails (action)Accordingly, we havesource: grokking simplicityInside the Plan list of emails, we need to do step 3 and 4 as follow:source: grokking simplicitysource: grokking simplicityBased on above information, our composition should be as follow:function sendIssue() { // action const coupons = fetchCouponsFromDB(); // action const subscribers = fetchSubscribersFromDB(); //action const emails = emailsForSubscribers(subscribers, coupons); // calculation console.log(emails)// for(let e = 0; e < emails.length; e++) { // action// const email = emails[e];// emailSystem.send(email);// }}function fetchCouponsFromDB() { // here return fake coupons return [ // data { code: 'MAYDISCOUNT', rank: 'good', }, { code: '10PERCENT', rank: 'bad', }, { code: 'PROMOTION45', rank: 'best', }, ]}function fetchSubscribersFromDB() { // here return fake coupons return [ // data { email: 'john@coldmail.com', rec_count: 2, }, { email: 'sam@pmail.co', rec_count: 16, }, ]}function emailsForSubscribers(subscribers, coupons) { // calculation const goodCoupons = selectCouponsByRank(coupons, 'good'); // calculation const bestCoupons = selectCouponsByRank(coupons, 'best'); // calculation const emails = subscribers.map(subscriber => emailsForSubscriber(subscriber, goodCoupons, bestCoupons)) // calculation return emails;}function emailsForSubscriber(subscriber, goodCoupons, bestCoupons) { // calculation const rank = subCouponRank(subscriber); if (rank === 'best') { return message(subscriber.email, bestCoupons) } else if (rank === 'good') { return message(subscriber.email, goodCoupons) } else { 'no email' }}function message(email, coupons) { // data return { from: \"newsletter@coupondog.co\", to: email, subject: \"Your weekly coupons inside\", body: \"Here are the coupons: \" + coupons.map(coupon => coupon['code']).join(\", \") }}function subCouponRank(subscriber) { // calculation if(subscriber.rec_count >= 10) { return 'best'; } else { return 'good'; }}function selectCouponsByRank(coupons, rank) { // calculation const couponsRanked = coupons.filter(coupon => coupon.rank === rank); return couponsRanked}existing codeSuppose we havefunction main(affiliates) { affiliatePayout(affiliates);}function affiliatePayout(affiliates) { for(var a = 0; a < affiliates.length; a++) { figurePayout(affiliates[a]); }}function figurePayout(affiliate) { var owed = affiliate.sales * affiliate.commission; if(owed > 100) { sendPayout(affiliate.bank_code, owed); }}As you can see, this main program will pay salaries to affiliates and it seems only one action in main. This is a terrible design because actually we can break process into steps: get affiliates list calculate the owed fees send payout to themasfunction main() { const affiliates = getAffiliates() // action const owedFees = affiliates.map(affiliate => affiliate.sales * affiliate.commission) // calculation for(let i = 0; i < affiliates.length; i++) { // action sendPayout(affiliate.bank_code, owedFees[i]); }}function sendPayout() { ...}function getAffiliates() { ...}which is actually not just one actionReferencegrokking simplicity /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/functional-programming/presentation/2022/12/10/separating-actions-calculations-data.html"},{"id":113,"title":"prototype","content":" const config = { theme: 'neutral', startOnLoad:true, htmlLabels:true, }; mermaid.initialize(config); hljs.highlightAll(); About Me prototype IntroductionFor example, at first, there is only one supervisor and the host needs to print file with the title of that supervisor; however, right before the meeting, another supervisor requests to join the meeting, so we need another same file with different title. The host now may have these options: copy the file and change the title of the copyed file (V) change the title of the file and print it out -> increaseing the risk that the wrong title printed out in other file rewrite the whole file -> takes too much time and some informations from private third-party departments may not be available while rewriting some confidential informations may need the customized styles to emphasize only used in this particular file for particular meetingsPrototype design pattern serves as the same concepts of the copy process (option 1); for creating new object by clone other object and do required modifications at run time.Why? run time saving (no need to reconstructure the file) avoid objects created dependent on class (we do not need to modify class to create new objects, which may affect the objects created after the midification) some private field must only connected to this object cannot be used in other objectHow? & What?the concept of copyGiven the documents looks like{ :title => 'supervisor_1', :article => ['article_1', 'article_2'], :confidential => ['confidential_1', 'confidential_2']}While programming, we may just declare another variable and change the title as followx1 = { :title => 'supervisor_1', :article => ['article_1', 'article_2'], :confidential => ['confidential_1', 'confidential_2']}x2 = x1x2[:title] = 'supervisor_2'puts x1 # the title changedThe title changed because both x2 and x1 points to the same object. We need the concept of copy to help us shallow copy (only copy the first layer and the objects of second layer still points to the same objects from the copyed object) deep copy (copy whole objects including the nested objects)In ruby, dup or clone are both shallow copyx1 = { :title => 'supervisor_1', :article => ['article_1', 'article_2'], :confidential => ['confidential_1', 'confidential_2']}x2 = x1.clonex2[:title] = 'supervisor_2'puts x1 # the title unchangedputs x2If we change the nested value as follow:x1 = { :title => 'supervisor_1', :article => ['article_1', 'article_2'], :confidential => ['confidential_1', 'confidential_2']}x2 = x1.clonex2[:article][0] = 'hahahaha'puts x1 # the article of x1 also changedputs x2To avoid it, we use deep_dup in ActiveSupport from railsx1 = { :title => 'supervisor_1', :article => ['article_1', 'article_2'], :confidential => ['confidential_1', 'confidential_2']}x2 = x1.deep_dupx2[:article][0] = 'hahahaha'puts x1 # the article of x1 not changedputs x2DemonstrationIf we build the class intuitively, we may just create a class as follow:class Prototype attr_accessor :title, :articles, :confidentials def initialize @title = nil @articles = nil @confidentials = nil end def clone @articles = deep_copy(@articles) @confidentials = deep_copy(@confidentials) @confidentials.prototype = self deep_copy(self) end private def deep_copy(object) Marshal.load(Marshal.dump(object)) endendclass ConfidentialReference attr_accessor :prototype def initialize(prototype) @prototype = prototype endend# The client code.p1 = Prototype.newp1.title = 'supervisor_1'p1.articles = ['article_1']p1.confidentials = ConfidentialReference.new(p1)p2 = p1.clonep2.title = 'supervisor_2'# ============# checkp1.title != p2.title # for two different supervisorp1.articles.equal?(p2.articles) # two different articles with same contentp1.confidentials.equal?(p2.confidentials)p1.confidentials.prototype.equal?(p2.confidentials.prototype) # again two different confidential articles with same content, so if the information leaks, we know who did it.design graph and pseudocodeThe code in section, Demonstration, is for one document. We can extend this design for more documents as following design graph and pseudocodedesign graphclassDiagram Client --|> Prototype : Call DocumentOne <|-- Prototype : Inherited From DocumentTwo <|-- Prototype : Inherited From Prototype : clone() DocumentOne: FieldOne DocumentTwo: FieldTwopseudocodeclass Prototype def clone endendclass ConfidentialReference ...endclass DocumentOne < Prototype def initialize @document = 'One' super end ...endclass DocumentTwo < Prototype def initialize @document = 'Two' super endendReferencePrototype Design Pattern Tutorial[Design Pattern] Prototype 原型模式PrototypePython Shallow Copy and Deep Copy /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/design-pattern/presentation/2022/03/22/prototype.html"},{"id":116,"title":"Developmental Psychology","content":" hljs.highlightAll(); About Me Developmental Psychology Introductionquick explanationWhy?focus on why we need itHow?Developmental psychology Theory: Various factors, such as genetics, environment, culture, and social experiences can influence an individual’s development Progress: Examining the physical, cognitive, emotional, and social changes that occur as individuals progress from infancy through childhood, adolescence, and adulthood Application parenting style on child development mental health education … Parenting style on child developmentparenting style child developmentLong-term effects of childhood trauma on adult mental healthchildhood trauma on adult mental healthCognitive development in childrenTBCInfluence of culture on child developmentTBCWhat?give real world exampletestReferenceWhy: asking for the reason or purpose behind something.How: asking for the method or process of doing something.What: asking for information about a specific thing or object. /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/psychology/2023/04/01/developmental-psychology.html"},{"id":101,"title":"Model","content":" hljs.highlightAll(); About Me Model IntroductionIn Node.js, a model is a JavaScript object that represents data and its behavior, commonly used in web development to handle data and perform CRUD operations.Why?Using models in Node.js can improve data organization, manipulation, and management within an application, leading to increased efficiency.How?To implement models in Node.js, we can use various libraries and frameworks such as Mongoose, Sequelize, or Bookshelf, which provide an ORM (Object-Relational Mapping) layer for interacting with databases and managing data models. For SQL, use Sequelize For NoSQL, use MongoosesequelizeTo create a user model,create ./model/index.js with sequelize as follow:'use strict';require('dotenv').config()const Sequelize = require('sequelize');let sequelizeif (process.env.NODE_ENV === 'development') { sequelize = new Sequelize(process.env.DEV_DATABASE_URL)} else if (process.env.NODE_ENV === 'test') { sequelize = new Sequelize(process.env.TEST_DATABASE_URL)} else { sequelize = new Sequelize(process.env.DATABASE_URL)}module.exports = sequelize;and then in ./model/user.js'use strict';const Sequelize = require('sequelize');const sequelize = require('./index.js');const user = sequelize.define('user', { name: { type: Sequelize.STRING }, mail: { type: Sequelize.STRING }, password: { type: Sequelize.STRING }})module.exports = userCreateconst user = await User.create({ email: email, password: passwordHash,})// orconst jane = await User.build({ name: \"Jane\" });jane.saveRead// find last onerecord = await model.findOne({ where: { key }, order: [ [ 'createdAt', 'DESC' ]], });UpdateDeleteConsoleYou are correct that Sequelize does not have a console feature that is equivalent to the one in Rails.While Rails console allows developers to interact with their application’s environment, including its database, through a command-line interface, Sequelize is a JavaScript ORM that can be used with Node.js applications to interact with databases programmatically. It does not provide a command-line console like Rails.However, you can use the Node.js REPL (Read-Evaluate-Print Loop) to interact with your Sequelize models in a similar way to the Rails console. The Node.js REPL is a built-in feature of Node.js that allows developers to execute JavaScript code interactively.To use the Node.js REPL with Sequelize, you can start a Node.js process and import your Sequelize models into it. Once you have done this, you can use the Node.js REPL to interact with your models and test out various queries.For example, assuming you have a Sequelize model for a User object, you can start a Node.js REPL by running node in your terminal, and then import your model using the following code:javascriptCopy codeconst { User } = require(‘./path/to/models’);Once you have imported your model, you can interact with it using the REPL by calling methods on the model, such as User.findAll() or User.create().While this method is not exactly the same as using a console like Rails provides, it can be a useful way to interact with your Sequelize models in a command-line environment.What?I use node with sequelize in my project, taskReference /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/node/2022/01/20/model.html"},{"id":81,"title":"Overview","content":" hljs.highlightAll(); About Me Overview IntroductionThis article describes how to implement jeykll.Why?Because I am now still using jekyll for blog.How?environmentadd a file environment-variables.json with{ \"production\": { \"endpoint\": \"https://ycchenvictor.github.io/blog/\" }, \"production\": { \"endpoint\": \"http://127.0.0.1:4000/blog/\" }}and import it with javascriptfunction() { fetch('/environment-variables.json') .then(response => response.json()) .then(response => { this.environmentVariables = response; }) .catch(error => { console.log(error); });}What?give an exampleReference /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/jekyll/2022/12/25/overview.html"},{"id":56,"title":"(independent) Support Artists","content":" hljs.highlightAll(); About Me (independent) Support Artists Should the government support artist or should the artists support themselves?People often possess different perspective on whether government should support artist or not. As for me, I strongly argue that the government should not support artists.First of all, the government cares about budget and supporting artists will cost government lots of money. For example, when the government decides to give each artist 10 thousand NT Dollars each month, it cost for total 1 million NT Dollars. However, the artists can still produce no valuable arts, which will not worth more than 1 million NT Dollars a month on average. As a result, supporting artists can an unreturnable investment. On the other hand, if the artists support themselves, the government would not need to pay any cost. Moreover, those untalented artists will be selected out of market so that government can make sure only qualified artists in the country. Apparently, on the aspect of budget, not supporting artists can give better result for the government.Secondly, the government usually focuses on votes and supporting artist may lose more votes. To be more specific, artists are the minority and the government can put more emphasis on welfare of majority, which can gain more votes with same efforts. On the contrary, if the artists support themselves, the government will lose only artists’ votes. Moreover, this policy are still under consideration, meaning the artists will not notice the government refuses to support them and keep voting ruling party. Therefore, on the aspect of votes, the government should not support the artists.Last but not least, the government often whishes to gain better international relationship and supporting artists has little help towards better relationship. Instead of supporting any foreign or domestic artists with one billion NT Dollars per year, we should invest more important industries such as semiconductor, computer science, and health care for better economic status. With better status, when there are conflicts between countries, we can have more power to negotiate with other countries or even help other them. Clearly, putting too much efforts on artists makes no sense.In conclusion, the government obviously should not support artists. After all, it seeks to controller budget, have more votes, and gain better international relationship. /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/english/2022/11/21/(independent)-support-artists.html"},{"id":73,"title":"sentence pattern (Japanese)","content":" hljs.highlightAll(); About Me sentence pattern (Japanese) IntroductionCategorized sentence patterns listed below and only show the necessary part of speech. pure noun A(noun) の B(noun) A(noun) は B(noun) です A も B です A は(wa) B では(wa) ありません yes no question: Affirmative + ですか？ X は A ですか？ (それとも、) B ですか？ A が X ですか？ A(noun) は B(noun) から C(noun) までです option/range(nouns) (のなか) で A(noun) か いちばん … noun + adjective noun は adjective でしょう？ A(noun) は B(noun) より C(adjective) A(noun) と B(noun) (と)、とっちが C(adjective) か？ X は A が adjective です noun + verb A(noun) を + ください A(noun) は verb A(noun) は B(noun) + を C(verb) A は B に C(verb) A は B(timing) に C(verb) A は B(third-party) に C(verb) A は B(person) に C(verb) A は B(goal) に C(verb) A は B(time) から C(time) まで D(verb) A は B(destination) へ(え) C(verb) A は B で C(verb) A(noun) は B(noun) + と C(verb) noun + 2 verbs A(noun) は B (noun) を C(verb, remove ます) に D(destination) へ E(verb) A(noun) は B (verb, remove ます) なから、C(verb) Wh- questionWhy?In order to make my sentences meaningful and effective.How & WhatA の B The meaning: it means B of A の are the subsidiary of A. example:A は(wa) B です The meaning: when we talk about A, it is B. は and です are subsidiaries. It means B is in A if B is a place. example: 私は男です。女ではありません。past tense: A は B です -> A は B でした when we talk about something in the past. wrong example: 私は男です -> 私は男でした (really strange because the truth is I am still a man, so this is not correct example) correct example: これは椅子でした。A も B です も means too -> The meaning: when we talk about A, it is B too. も and です are the subsidiaries of A and B. example:A は(wa) B では(wa) ありません It means A is not B we can also use じゃ to replace では. では is more formal than じゃ. example:past tense: A は B では ありません -> A は B では ありません でした example: これは椅子ではありませんでした。yes no question: Affirmative + ですか？ interrogative sentence for sentence: A(noun) は B(noun) ですか？ The example and answers as follow: example: あそこはうもですか？ yes: はい、そうです。 no: いいえ、違いまです。 for sentence: A(noun) は B(adjective) ですか？ The example and answers as follow: example: おばさんの病気は大丈夫ですか？ yes: はい、大丈夫ですか。(It’s truly odd to use そうです because the question itself is neutral) no: いいえ、大丈夫ではありません。 X は A ですか？ (それとも、) B ですか？ multiple choice question If A: X は A です。 If B: X は B です。 いいえ、C です。A が X ですか？ どちらがあなたの先生ですか？ こちらが私の先生です。noun は adjective でしょう？ looking for agreementsA(noun) は B(noun) より C(adjective) To compare which one (A or B) is more C. B is worse than A on the aspect of C. 電車はバズより便利です (train is more convenient than bus)A(noun) と B(noun) (と)、とっちが C(adjective) か？ To ask which one (A or B) is more C ask: 天ぷらとお寿司と、とっちがおいしいですか？ answer: お寿司の方が美味しいです。X は A が adjective ですwhen X != A but A is related to X example: 彼女は髪の毛が綺麗です we can also use this sentence pattern if A is the family of Xwhen use adjective to express verb the concept is like the word, pregnant example: 私は新しい時計が欲しいです other adjective verb: 欲しい、嫌い、好きな(すきな)、とくいA(noun) は B(noun) から C(noun) までです the meaning: There is A from B to C. example: 朝食は六時から十までです。option/range(nouns) (のなか) で A(noun) か いちばん question: タクシーと電車とバスで、どれが一番便利ですか？ answer: 電車が一番便利です。 question: 乗り物で、何が一番便利ですか？ answer: 電車が一番便利です。 A(noun) を + ください It means please give me A If we want to express the number of A: A(noun) を + (measure word) + ください example: ろくじゅうごえんのきってをにまいください A(noun) は B(verb) noun は verb (~ます) affirmative sentence example: 私は勉強します。 past tense ます -> ました 昨日りんさんは十時まで勉強しました noun は verb (~ません) negative sentence example: 私は寝ません。 past tense ません -> ませんでした 去年両親は旅行しませんでした interrogative sentence affirmative sentence + か？ use verbs to reply (because the xxx ます means ‘can xxx’) example: ペンギンはとびますか？ はい、飛びます いいえ、飛びません express the invitation ませんか？ (50% to accept)：一緒にお昼を食べませんか？ ましょう？ (90% to accept)：映画をみましょう？ A(noun) は B(noun) + を C(verb) It means A C B example: 妹は昼食を食べました use で to express location A は B で C を D It means A D C in B example: 私は肉屋で豚肉を買いました use と and や to express multiple A は B と C を D A は B や C を D both means A D B and C but や means there are more than B and C example: 私は日曜日に掃除と洗濯をします。(I clean and wash in sunday) example: 昨日わたしたちはラーメンやきょうざを食べました (We ate ramen and dumplings…etc yesterday) A は B に C(verb)The B is always the point in the whole sentenceA は B(timing) に C(verb) express the concept of A will C at the moment of B because we are using the concept of moment, the verb is 瞬間動詞 example: 彼は朝六時半に起きます。 Note that B should express the concept of timing on Japanese point of view; for exmaple 30 seconds ago is a timing -> + に yesterday is concept of relative time or a period -> do not + に 12月 can be a timing or not. optional to add に It is quite important to understand the concept of time in a language because it maps to the culture and lots of implementation such as technology, spoken language, and society. A は B(third-party) に C(verb) express the concept of A do C to B example: 私は山田さんにこのことを話しました。A は B(person) に C(verb) the concept that A do C from B example: ちょうさんは田中さんにひらがを習いました。(It means ちょうさん learn ひらが from 田中さん) The に can be replaced by から: ちょうさんは田中さんからひらがを習いました。A は B(goal) に C(verb) the concept of something put into B example 1: 父はラジオに電池を入れました example 2: 教室に入りましょう the concept of something go onto B example 1: 先週の日曜日私は山に登りました the concept of something arrive at B example 1: この飛行機は十五分後に成田国際空港に到着します the comcept of something meet B 社長はその人に会います A は B(time) から C(time) まで D(verb) express the concept of A will D from B to C can only use B から or C まで example: 私は四時から勉強します example: 私は七時まで勉強します example: 私はいつも夜十一時から朝六時まで寝ますA は B(destination) へ(え) C(verb) It means A C to B example: さいさんは来週山へ行きますA は B で C(verb) It means A do C by B when B is a method example 今日私はバスで半屋へ行きました (transportation) 日本人は箸で食事じします (method) It means A do C with B when B means other people example: 許さんはいつも一人で勉強します A(noun) は B(noun) + と C(verb) It means A and B do C together example: 私は昨日高橋さんと勉強しましたA(noun) は B (noun) を C(verb, remove ます) に D(destination) へ E(verb) It means A wants to do C B so E D example: 私は野球を練習しに公園へ行きます。A(noun) は B (verb, remove ます) なから、C(verb)It express A do B and C at the same time. The C is the point example: 昨夜私はドラマをみながら、晩御飯を食べました。Wh- question 誰 (だれ) noun: あの人は誰ですか？ あの人は(田中さん)です。 何 (なん) noun: これはなんですか？ それは(電話)です。 verb: あなたはまいにちだれといしょに帰りですか？ 田中さんです どこ noun: 大和さんはどこですか？ 大和さんは(東京)です。 いくら: いくつ noun: あなたはおいくつですか？ わたしはさんじゅうごさいです。 何歳 (なんさい): 何曜日 (なんようび): 何 + time example: 何時(なんじ)、何分(なんふん)、何月(なんがつ)、何日(なんにち) verb: あなたはきのう何時に寝ましたか？ 六日から九日まで休みます 何 time から何 time まで noun: verb: 山田さんは何日から何日まで休みますか？ 六日から九日まで休みます /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/japanese/2022/03/20/sentence-pattern.html"},{"id":96,"title":"Spec","content":" hljs.highlightAll(); About Me Spec Introductionquick explanationWhy?How?Given the settings in database section, we should have database for test. Now we need to setup jest and clean test database before each test case.environmentin .env addTEST_DATABASE_URL={database_system}://{username}:{password}@{host_and_port}/{database_name}use request(app) (export app from server.js and import request)describe('User', () => { ... describe('POST /signup', () => { describe('when valid email and password', () => { test('should return user id', () => { ... request(app).post('/sign_up', attributes).then(response => { ... }); }) }) ... });})compose testPlease follow jest AAA to write testjest with node: wrap node related files in ./app set jest root directory import related files in jest with relative path add script\"scripts\": { \"test\": \"NODE_ENV=test jest\",},and run it withnpm testreset databaseWe can use before each to drop and create tablesbeforeEach(async () => { sequelize.truncate({ cascade: true, restartIdentity: true });});mockTODO: add real mock exampleadd spec_configjest.mock('pg', () => { // should extract to other file const mPool = { connect: function () { return { query: jest.fn() }; }, query: jest.fn(), end: jest.fn(), on: jest.fn(), }; return { Pool: jest.fn(() => mPool) };});What?give an exampletestReference /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/node/2023/01/20/spec.html"},{"id":85,"title":"Grokking Simplicity Ch7","content":" const config = { theme: 'neutral', startOnLoad:true, htmlLabels:true, }; mermaid.initialize(config); hljs.highlightAll(); About Me Grokking Simplicity Ch7 IntroductionMaintaining immutability when interacting with code designed with mutable data.Why?Stay immutable with legacy code and other library designed with mutable dataHow?For example, we have a legacy code, black_friday_promotion, which modifies shopping_cart for black fridaylegacy code pollute immutable designThe main process of add_item_to_cartfunction add_item_to_cart(name, price) { const item = make_cart_item(name, price); shopping_cart = add_item(shopping_cart, item); let total = calc_total(shopping_cart); set_cart_total_dom(total); update_shipping_icons(shopping_cart); update_tax_dom(total); black_friday_promotion(shopping_cart); // legacy -> having mutable issues}and then the shopping_cart will be pollutedrules Copy as data leaves your code Make a deep copy of the immutable data Pass the copy to the untrusted code Copy as data enters your code Immediately make a deep copy of the mutable data passed to your code Use the copy in your code => these two steps confine the mutable data in legacy codeinteract with it: defensive copyingSolution: doppelgänger (real, copy)function add_item_to_cart(name, price) { const item = make_cart_item(name, price); shopping_cart = add_item(shopping_cart, item); // should be immutable let total = calc_total(shopping_cart); set_cart_total_dom(total); update_shipping_icons(shopping_cart); update_tax_dom(total); const cart_copy = deepCopy(shopping_cart); // deep copy (rule 1) black_friday_promotion(cart_copy); // pass it to the untrusted code (rule 1) and the cart_copy may be mutable shopping_cart = deepCopy(cart_copy) // deep copy (rule 2) and use it in our code}The black_friday_promotion consumes cart_copy, modify cart_copy, and refer to cart_copy without any issue related to shopping_cart. But we can still get modified shopping_cart after black_friday_promotiondeepCopy Every nested object and array is copied cannot share those unchanged dataexample:const user = { name: 'John Cena', age: 45, job: 'WWE Actor'}const deepClone = {...user} // use in frontend frameworkconst shallowClone = userdeepClone['name'] = 'new John Cena'console.log(user) // deep clone has nothing to do with the real oneshallowClone['name'] = 'new John Cena'console.log(user)What? Defensive copying in web application programming interfaces (API):graph LR id1(request) --JSON-deep-copy-from-request--> id2(API) id2(API) --JSON-deep-copy-from-API--> id3(response) Defensive copying in Erlang and ElixirThe functions designed in both languages follow functional programming. They will deepCopy the data sent in and received from.Referencegrokking simplicity /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/mindset/presentation/2023/01/05/grokking-simplicity-ch7.html"},{"id":105,"title":"Grokking Simplicity Ch11","content":" hljs.highlightAll(); About Me Grokking Simplicity Ch11 IntroductionIn last chapter, we know how to solve Implicit argument in function name with refactoring, Express implicit argument and Replace body with callback.In this chapter, we are going to do two jobs in this chapter codifying our copy-on-write discipline improve the logging systemWhy? Higher-order functions -> codify patterns -> defined once, use them many times make functions by returning them from higher-order functions as variable Higher-order functions can remove a lot of duplication, but sometimes they cost readabilityHow?Refactoring copy-on-writeThe copy-on-write array method in chapter 6 as follow:function arraySet(array, idx, value) { var copy = array.slice(); copy[idx] = value; return copy;}With replace body with callback Identify before, body, and after Extract function Extract callback reuse the codified functionIdentify before, body, and afterfunction arraySet(array, idx, value) { var copy = array.slice(); // before copy[idx] = value; // body return copy; // after}extract functionfunction arraySet(array, idx, value) { return withArrayCopy(array);}function withArrayCopy(array) { var copy = array.slice(); copy[idx] = value; // -> no idx and value return copy;}extract callbackfunction arraySet(array, idx, value) { return withArrayCopy(array, function(copy) { copy[idx] = value; });}function withArrayCopy(array, modify) { // the modify is the callback var copy = array.slice(); modify(array); return copy;} we have reusable codified copy-on-write function even though the code becomes longer (from only arraySet to arraySet + withArrayCopy)reuse the codified function use it in other codeconst sortedArray = withArrayCopy(array, function(copy) { someSortMethod(copy);}) decrease the number of copiesfromconst a1 = drop_first(array);const a2 = push(a1, 10);const a3 = push(a2, 11);const a4 = arraySet(a3, 0, 42);toconst a4 = withArrayCopy(array, function(copy) { copy.shift(); copy.push(10); copy.push(11); copy[0] = 42;})improve logging systemFromtoGiven we have a project with lots of functions and there are several functions did not deal with error handling, we want all functions to have error handling; that is, fromsaveUserData(user);fetchProduct(productId);totry { saveUserData(user);} catch (error) { logToSnapErrors(error);}// andtry { fetchProduct(productId);} catch (error) { logToSnapErrors(error);} It takes too much effor to re-write all codebase with these try & catch structure clearer name and wrap it with functionfromtry { saveUserData(user);} catch (error) { logToSnapErrors(error);}try { fetchProduct(productId);} catch (error) { logToSnapErrors(error);}tofunction saveUserDataWithLogging(user) { // wrap try { saveUserDataNoLogging(user); // clearer } catch (error) { logToSnapErrors(error); }}function fetchProductWithLogging(productId) { // wrap try { fetchProductNoLogging(productId); // clearer } catch (error) { logToSnapErrors(error); }}and now we can use techniques of Replace body with callbackIdentify before, body, and afterfunction saveUserDataWithLogging(user) { // before try { // before saveUserDataNoLogging(user); // body } catch (error) { // after logToSnapErrors(error); // after }}Extract functionfunction saveUserDataWithLogging(user) { wrapLogging()}function wrapLogging() { try { saveUserDataNoLogging(user); // -> no user } catch (error) { logToSnapErrors(error); }}Extract callbackfunction saveUserDataWithLogging(user) { wrapLogging(saveUserDataNoLogging(user))}function wrapLogging(modify) { return function(arg) { try { modify(arg); } catch (error) { logToSnapErrors(error); } }}reuse the codified functionconst fetchProductWithLogging = wrapLogging(fetchProductNoLogging);Referencegrokking simplicity /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/mindset/presentation/2023/02/23/grokking-simplicity-ch11.html"},{"id":111,"title":"ch13 concurrency","content":" const config = { theme: 'neutral', startOnLoad:true, htmlLabels:true, }; mermaid.initialize(config); hljs.highlightAll(); About Me ch13 concurrency Introduction & why?Concurrency is a decoupling strategy. It helps us decouple what gets done from when it gets done, so we need it if there are too many tasks should be done in a given time; however it causes problems that same method return different results at the same time and the way to solve the problems is as follow: Concurrency Defense Principle Single Responsibility Principle: only responsible for a signle client Corollary, Limit the Scope of Data: only one service for updating one scope of data Corollary, Use Copies of Data: mulitple services but only one way to insert data Corollary, Threads Should Be as Independent as Possible: combined with the above strategies, it should be only one client changes only one scope of data at the same time Given the above design principle, we may still facing the following problems: Thread-Safe Collections: use the thread-safe collections to avoid updaing data based on the wrong old data Producer-Consumer: use this design pattern to solve multiple calculation of threads in a given resources such as memorygraph LR id1((parent_1)) -- push: calculations --> id2[jobs_queue] id3((student_1)) -- push: calculations --> id2[jobs_queue] id4((...)) -- push: any_other_calculations --> id2[jobs_queue] id2[jobs_queue] --> id5((machine1)) id2[jobs_queue] --> id8((machine1)) id2[jobs_queue] --> id6((machine2)) id2[jobs_queue] --> id7((...)) Reader-Writer: use semaphore to ensure only one writer to a data at the same timeWe will use lots of synchronized method to solve the problems above, causing following problems: client-side: synchronized on the client side but we may forgot to do so server-side: synchronized on the server side but subtle problems occur when there are multiple dependent variables needs synchronization Dining Philosophers: Starvation: Some threads is prohibited from proceeding for an excessively long time or forever Deadlock: Threads waiting for each other to finish Livelock: Threads trying to do work but finding another “in the way.” Dining Philosophers concepts (摸乳巷) 三角形代表瘦子 (兩個三角形相遇都側身的話兩個都能通過) 圓形代表胖子 (胖子就是側身也過不了，大家都要讓他) const filename = 'dining_philosophers.png' const imagePath = '/assets/img/' + filename const conceptDiv = document.getElementById('concept'); const conceptWidth = conceptDiv.offsetWidth; let eraseEnable = false; let img; let photoGraph; function setup() { setupImage () setupButton () setupCanvas () setupGraphics () } function draw() { image(img, 0, 0, conceptWidth, 400); image(graphic, 0, 0) } function mouseDragged() { if (!eraseEnable) { graphic.fill('black'); graphic.noStroke(); graphic.ellipse(mouseX, mouseY, 5, 5); } else { graphic.fill('white'); graphic.noStroke(); graphic.ellipse(mouseX, mouseY, 10, 10); } } function keyTyped() { if (key === 's') { saveCanvas(filename); } } function setupImage () { try { img = loadImage(imagePath); } catch { img = createImage(conceptWidth, 400) } } function setupButton () { toggleButton = createButton('erase'); toggleButton.parent('concept toggle'); toggleButton.addClass(\"border rounded px-4\"); toggleButton.mouseClicked(ButtonClicked) } function setupCanvas () { const concept = createCanvas(conceptWidth, 400); concept.parent('concept canvas'); } function setupGraphics () { graphic = createGraphics(conceptWidth, 400); } function ButtonClicked () { toggleStyle() toggleErase() } function toggleErase() { if (eraseEnable) { noErase(); eraseEnable = false; } else { erase(); eraseEnable = true; } } function toggleStyle() { toggleButton.toggleClass(\"bg-indigo-100\"); toggleButton.toggleClass(\"border\"); }Then finally, we have following issue: Writing Correct Shut-Down Code Is Hard: review the jobs regularly and find out which job often have dining philosophers problem and solve it on the early stage Testing Threaded Code Treat Spurious Failures as Candidate Threading Issues: 一發生小小的系統障礙 -> 一定跟 thread 有關 Get Your Nonthreaded Code Working First: 但我們還是先把跟 thread 無關的 code 做好 Make Your Threaded Code Pluggable: 讓 thread 的 code 很好拔插，這樣就可以做出各種可能來檢測 Make Your Threaded Code Tunable: 你要讓你的 threaded code 做了改動，系統還是跑得很順 Run with More Threads Than Processors: 讓 threads 的數量多於 processors，這樣你就有機會提前遇到 dining philosophers 問題，並解決 Run on Different Platforms: 提早讓你的 threads 在不同平台上跑動，這樣可以提早發現 bug Instrument Your Code to Try and Force Failures: 有些 bug 的發生來自一個特定的排列組合，你可以刻意設定等待時間或是交換 thread 的先後順序，嘗試reproduce 這個特定的排列組合，以解決問題。 How? & What?舉例來講，faria 幼稚園舉辦手速比賽，工程師設計了按鈕，點下去就會加一，如下：def update @score += 1end如果家長跟小朋友比賽，但工程師都刻意 POST 同一個 method，如下：def update(params) ... params[:class].find(params[:id]).score += 1 ...end上面的方法看起來沒什麼問題，結果比賽辦得太好了，所以這個比賽隨著日子變得越來越複雜，多了答題機制，還需要複雜的運算。假設比賽後來變成需要機器做一個 5~10 秒的綜合運算，這樣用 concurrency 比較好，則此時 update 變成def update(params) ... CheckService.perform_sync(params) ...enddef CheckService ... def perform if correct? params[:class].find(params[:id]).counter += 1 end end private def correct? ... # 5 ~ 10 seconds endend過了一陣子，老闆覺得小朋友的分數老是超過家長，要工程師研究一下為什麼，這時候我們遇到第一個 issue，解決原則是 Single Responsibility Principle，因為方法都是寫同一個，要 debug，要做實驗要改動 code，都會影響到另外一方，所以最好就是一個 service for 一個 client，如下：def update_parent ... CheckParentService.perform_sync(params) ...enddef update_student ... CheckStudentService.perform_sync(params) ...end...那在持續追查的情況下，發現家長回答的速度太快，結果 service 在 update score 的時候，都拿到比較舊的 score，在 service 運算完後 insert 進一大堆分數都一樣的值。這就是我們遇到的第二個 issue，解決原則有兩個，Limit the Scope of Data 與 Use Copies of Data。Limit the Scope of Data 是在 Service 裡進行同步，我們要在 update 值之前，先同步一次 counter 的數據，在 ruby 裡我們是使用 Mutex，如下：class CheckParentService def initialize ... @jobs_mutex = Mutex.new @counter = Parent.find(params[:id]).counter ... end def synchronize(&block) @jobs_mutex.synchronize(&block) end def perform if correct? synchronize do # 要存進去的時候同步一次 @counter += 1 end end end private def correct? ... # 5 ~ 10 seconds endendUse Copies of Data 則是一開始我們就不要共享資料，然後搜集好所有 correct 後再一次用個 single thread update，方法如下：class Parent attr_reader :counter ...endclass CheckParentService def initialize ... @counter = Parent.find(params[:id]).counter @corrects = [] ... end def perform if correct? @corrects << 1 end end private def correct? ... endendevery :day, at: 12 @counter.sumend就算我們如此設計了，還是可能遇到問題，第一個問題是我們沒有使用 Thread-Safe Collections。除了 Queue 之外，所有資料結構都可能有 race condition，在 ruby 的解決方法是使用 concurrent-ruby gem 來創建資料結構，或是使用如上介紹的 Mutex 來 synchronize 資料。後來工程師都排除這些問題了，但過了一陣子家長的分數還是又低於學生，但有時候又會突然變回來，工程師們經過嚴密的研究，發現有很多家長的 Job 在每天凌晨 12 點的時候根本沒計算完，所以分數時高時低，這帶來下一個 issue，Producer-Consumer。我們可以設計一個 queue，機器有剩餘的 resource 時才將 calculations insert 進去，這樣就不會有 Job 丟失的狀況了。所以如果老闆很希望每天凌晨 12 點計算好，那他就要投資更多機器的錢，讓 Consumer 變多，這樣就不會有問題了，我們通常用 sidekiq 來達成。在解決以上問題後，老闆希望看到分數的即時播報，所以一定要在 Service 裡進行同步，這時候我們會遇到下一個 issue，Reader-Writer problem。因為同時間可能會有兩個 writer 會寫入同一格資料的 race condition，我們的解決方法是加入 semaphore 告知說先在這格沒有 writer 在寫喔，如下：class CheckParentService def initialize @jobs_mutex = Mutex.new @can_write = nil end ... def perform if correct? && @can_write # 寫之前先 check can_write synchronize do @counter += 1 @can_write = false # 寫之前先把 can_write 關掉 save! @can_write = true end end end ...end上面的狀況都排除後，就會開始發生因為 synchronize 產生的小問題。假設老闆覺得這場比賽要刺激一點，就改成比誰先答對 100 題，事後有個家長很生氣，說自己做了 101 題，老闆請工程師了解一下狀況，後來發現是這個 service 的 synchronize 出了問題。工程師原先的邏輯是，答對 100 題後，就不再加分了，如下：class CheckParentService def initialize @counter = Parent.find(params[:id]).counter @accomplished = false end def perform @accomplished = true if @counter >= 100 # key logic if correct? && !@accomplished synchronize do @accomplished # get @accomplished from other threads @counter += 1 save! end end end ...end其實這個問題是無可厚非的，因為一題的計算本來就是 5~10 秒，所以最後本來就有可能有其實已經答對 100 題，但還在計算所以家長多做 1 題的狀況。要改動他就需要同時對 client side 與 server side 進行改動，讓 server-side 還是只需要同步 @counter，然後讓題目即時在 client-side 停止，如下：def update_parent if @accomplished return 'mission accomplished' else CheckParentService.perform_sync(params) endendclass CheckParentService def initialize @counter = Parent.find(params[:id]).counter end def perform if @counter >= 100 @accomplished = true elsif correct? && @counter < 100 synchronize do @counter += 1 save! end end end ...end大家應該會發現引發上面問題的原因是，有兩個 variables 要被同步，而且這兩個變數還相互有關聯。作者說最好的方式就是設計好的邏輯，限縮越少有關連的變數同步越好。後來老闆覺得家長分數太高，所以就調整了題目難度，需要更多暫存做計算。工程師們發現這一類比較難的 Job 總是不會被計算機計算，因為計算時它需要至少 5MB 的暫存，但總是釋放還不到 5MB 的暫存時，就被其他 Job 佔走了，這就是 Dining Philosophers 中的 Starvation 問題，解決方法是使用 semaphore。當此 job 出現時，用 Mutex 發出訊號給其他 Job，讓他們先不要再 performclass CheckParentService def initialize ... @stop = true synchronize do @stop end end def perform synchronize do @stop = false end end ...endclass CheckStudentService def initialize ... end def perform if !@stop # 如果沒有來自 ParentService 叫停的信號再做下去 ... end end ...end後來老闆又覺得可以來一個家長跟學生共同答題的機制，兩個問題都需要一定的計算時間，結果沒設計好，產生 deadlock，如下：class CheckParentService ... def perform if @student_correct if correct? @parent_correct = true end else # waiting end end ...endclass CheckStudentService ... def perform if @parent_correct if correct? @student_correct = true end else # waiting end end ...end結果有可能 @parent_correct 跟 @student_correct 都是 nil，但因為雙方都要等對方 correct，才會進行後續計算，結果就是都沒有計算。解決辦法一樣是使用 semaphore。當 Job 到 CheckParentService 時，可以先檢查 CheckStudentService 的訊號，發現 student 還在計算，那我就先算下去了，如下：class CheckParentService def initialize ... synchronize do @student_calculating end end def perform if @student_correct || @student_calculating # do the calculation if correct? @parent_correct = true end else # waiting end end private def correct? @parent_calculating = true ... endend...我們可能會想說用另外一個方法解決以上問題，就是你如果在計算，那我就先等你算，啊然後我自己先不算，但實際上會產生 livelock，雙方一直在讓對方，如下：class CheckParentService ... def perform if @student_calculating @parent_calculating = false # waiting else if correct? @parent_correct = true end end end private def correct? @parent_calculating = true ... # lots of calculation @parent_calculating = false end ...endclass CheckStudentService ... def perform if @parent_calculating @student_calculating = false # waiting else if correct? @student_correct = true end end end ... private def correct? @student_calculating = true ... # lots of calculation @student_calculating = false end ...end其他議題Referenceclean code by Robert /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/mindset/presentation/2022/05/07/concurrency.html"},{"id":104,"title":"Overview","content":" hljs.highlightAll(); About Me Overview IntroductionThis article describes frontend package manager.Why?focus on why we need itHow?npm install nvm and nvm install 8.16.2 install: nodeyarn install: sudo npm install --global yarn version: yarn --version node module: yarn install zsh: in .zshrc, add export PATH=\"$PATH:$HOME/.yarn/bin\"What?give an exampletestReference /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/package/2023/02/03/overview.html"},{"id":83,"title":"Grokking Simplicity Ch11","content":" hljs.highlightAll(); About Me Grokking Simplicity Ch11 IntroductionIn last chapter, we know how to solve Implicit argument in function name with refactoring, Express implicit argument and Replace body with callback.In this chapter, we are going to do two jobs in this chapter codifying our copy-on-write discipline improve the logging systemWhy? Higher-order functions -> codify patterns -> defined once, use them many times make functions by returning them from higher-order functions as variable Higher-order functions can remove a lot of duplication, but sometimes they cost readabilityHow?Refactoring copy-on-writeThe copy-on-write array method in chapter 6 as follow:function arraySet(array, idx, value) { var copy = array.slice(); copy[idx] = value; return copy;}With replace body with callback Identify before, body, and after Extract function Extract callback reuse the codified functionIdentify before, body, and afterfunction arraySet(array, idx, value) { var copy = array.slice(); // before copy[idx] = value; // body return copy; // after}extract functionfunction arraySet(array, idx, value) { return withArrayCopy(array);}function withArrayCopy(array) { var copy = array.slice(); copy[idx] = value; // -> no idx and value return copy;}extract callbackfunction arraySet(array, idx, value) { return withArrayCopy(array, function(copy) { copy[idx] = value; });}function withArrayCopy(array, modify) { // the modify is the callback var copy = array.slice(); modify(array); return copy;} we have reusable codified copy-on-write function even though the code becomes longer (from only arraySet to arraySet + withArrayCopy)reuse the codified function use it in other codeconst sortedArray = withArrayCopy(array, function(copy) { someSortMethod(copy);}) decrease the number of copiesfromconst a1 = drop_first(array);const a2 = push(a1, 10);const a3 = push(a2, 11);const a4 = arraySet(a3, 0, 42);toconst a4 = withArrayCopy(array, function(copy) { copy.shift(); copy.push(10); copy.push(11); copy[0] = 42;})improve logging systemFromtoGiven we have a project with lots of functions and there are several functions did not deal with error handling, we want all functions to have error handling; that is, fromsaveUserData(user);fetchProduct(productId);totry { saveUserData(user);} catch (error) { logToSnapErrors(error);}// andtry { fetchProduct(productId);} catch (error) { logToSnapErrors(error);} It takes too much effor to re-write all codebase with these try & catch structure clearer name and wrap it with functionfromtry { saveUserData(user);} catch (error) { logToSnapErrors(error);}try { fetchProduct(productId);} catch (error) { logToSnapErrors(error);}tofunction saveUserDataWithLogging(user) { // wrap try { saveUserDataNoLogging(user); // clearer } catch (error) { logToSnapErrors(error); }}function fetchProductWithLogging(productId) { // wrap try { fetchProductNoLogging(productId); // clearer } catch (error) { logToSnapErrors(error); }}and now we can use techniques of Replace body with callbackIdentify before, body, and afterfunction saveUserDataWithLogging(user) { // before try { // before saveUserDataNoLogging(user); // body } catch (error) { // after logToSnapErrors(error); // after }}Extract functionfunction saveUserDataWithLogging(user) { wrapLogging()}function wrapLogging() { try { saveUserDataNoLogging(user); // -> no user } catch (error) { logToSnapErrors(error); }}Extract callbackfunction saveUserDataWithLogging(user) { wrapLogging(saveUserDataNoLogging(user))}function wrapLogging(modify) { return function(arg) { try { modify(arg); } catch (error) { logToSnapErrors(error); } }}reuse the codified functionconst fetchProductWithLogging = wrapLogging(fetchProductNoLogging);Referencegrokking simplicity /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/mindset/presentation/2023/02/23/grokking-simplicity-ch11.html"},{"id":102,"title":"acid and base","content":" MathJax.Hub.Config({ TeX: { equationNumbers: { autoNumber: \"AMS\" } } }); hljs.highlightAll(); About Me acid and base Introductioneasy explanationLemon juice tastes sour and soap water tastes bitter because lemon is acid and soap is base. Acid has burning effect acid + base = salt + water indicators help us to know whether the solution is acid or basetheoryThis article describes the concept of acid and base with theories: Arrhenius Brønsted–Lowry Lewis(The domain of theories: Arrhenius ⊆ Brønsted–Lowry ⊆ Lewis)The factors affect the strength of acid: bond polarity (electronegativity): the higher electronegativity -> the higher power to attract electron -> the higher chance to release proton (such as \\(H^+\\)) -> the higher acidity bond strength: conjugate base stability:Why?How?ArrheniusGiven our knowledge of chemistry, (TBC)Brønsted–LowryBrønsted–Lowry acid is a substance donating \\(H^+\\) and Brønsted–Lowry base is a substance accepting \\(H^+\\)\\[HA + B ⇌ A^- + HB^+\\](acid + base ⇌ conjugate base + conjugate acid) example: \\(CH_3COOH + H_2O ⇌ CH_3COO^- + H_3O^+\\)Lewisdefines on electronic levelWhat?give an exampleReferenceMcMurry Organic ChemistryAcids and Bases [Acids and Bases and Salts - Introduction Chemistry Don’t Memorise](https://www.youtube.com/watch?v=i2x4foEuRcI) Brønsted–Lowry acid–base theoryArrhenius acids and basesFactors affecting acid strength /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/organic-chemistry/2022/08/07/2-acid-and-base.html"},{"id":86,"title":"Code Review","content":" const config = { theme: 'neutral', startOnLoad:true, htmlLabels:true, }; mermaid.initialize(config); hljs.highlightAll(); About Me Code Review Introductiongraph LR id1(improve codebase) id1(improvecodebase) --> id2(design) id1(improvecodebase) --> id3(functionality) id1(improvecodebase) --> id4(complexity) id1(improvecodebase) --> id5(tests) id1(improvecodebase) --> id6(styles) id2(design) --> id7(among PR) id2(design) --> id8(third party?) id2(design) --> id9(codebase) id2(design) --> id10(timing) design among PR: the interactions in between this PR makes sense third party?: this PR imports third party code or not? If yes, does it follow the best design for integration? codebase: does it integrates will with codebase? timing: if we merge it, what will it affect? Why?focus on why we need itHow?The stepsWhat?Give examplesReferenceHow to do a code review /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/mindset/2022/08/26/code-review.html"},{"id":88,"title":"ch13 concurrency","content":" const config = { theme: 'neutral', startOnLoad:true, htmlLabels:true, }; mermaid.initialize(config); hljs.highlightAll(); About Me ch13 concurrency Introduction & why?Concurrency is a decoupling strategy. It helps us decouple what gets done from when it gets done, so we need it if there are too many tasks should be done in a given time; however it causes problems that same method return different results at the same time and the way to solve the problems is as follow: Concurrency Defense Principle Single Responsibility Principle: only responsible for a signle client Corollary, Limit the Scope of Data: only one service for updating one scope of data Corollary, Use Copies of Data: mulitple services but only one way to insert data Corollary, Threads Should Be as Independent as Possible: combined with the above strategies, it should be only one client changes only one scope of data at the same time Given the above design principle, we may still facing the following problems: Thread-Safe Collections: use the thread-safe collections to avoid updaing data based on the wrong old data Producer-Consumer: use this design pattern to solve multiple calculation of threads in a given resources such as memorygraph LR id1((parent_1)) -- push: calculations --> id2[jobs_queue] id3((student_1)) -- push: calculations --> id2[jobs_queue] id4((...)) -- push: any_other_calculations --> id2[jobs_queue] id2[jobs_queue] --> id5((machine1)) id2[jobs_queue] --> id8((machine1)) id2[jobs_queue] --> id6((machine2)) id2[jobs_queue] --> id7((...)) Reader-Writer: use semaphore to ensure only one writer to a data at the same timeWe will use lots of synchronized method to solve the problems above, causing following problems: client-side: synchronized on the client side but we may forgot to do so server-side: synchronized on the server side but subtle problems occur when there are multiple dependent variables needs synchronization Dining Philosophers: Starvation: Some threads is prohibited from proceeding for an excessively long time or forever Deadlock: Threads waiting for each other to finish Livelock: Threads trying to do work but finding another “in the way.” Dining Philosophers concepts (摸乳巷) 三角形代表瘦子 (兩個三角形相遇都側身的話兩個都能通過) 圓形代表胖子 (胖子就是側身也過不了，大家都要讓他) const filename = 'dining_philosophers.png' const imagePath = '/assets/img/' + filename const conceptDiv = document.getElementById('concept'); const conceptWidth = conceptDiv.offsetWidth; let eraseEnable = false; let img; let photoGraph; function setup() { setupImage () setupButton () setupCanvas () setupGraphics () } function draw() { image(img, 0, 0, conceptWidth, 400); image(graphic, 0, 0) } function mouseDragged() { if (!eraseEnable) { graphic.fill('black'); graphic.noStroke(); graphic.ellipse(mouseX, mouseY, 5, 5); } else { graphic.fill('white'); graphic.noStroke(); graphic.ellipse(mouseX, mouseY, 10, 10); } } function keyTyped() { if (key === 's') { saveCanvas(filename); } } function setupImage () { try { img = loadImage(imagePath); } catch { img = createImage(conceptWidth, 400) } } function setupButton () { toggleButton = createButton('erase'); toggleButton.parent('concept toggle'); toggleButton.addClass(\"border rounded px-4\"); toggleButton.mouseClicked(ButtonClicked) } function setupCanvas () { const concept = createCanvas(conceptWidth, 400); concept.parent('concept canvas'); } function setupGraphics () { graphic = createGraphics(conceptWidth, 400); } function ButtonClicked () { toggleStyle() toggleErase() } function toggleErase() { if (eraseEnable) { noErase(); eraseEnable = false; } else { erase(); eraseEnable = true; } } function toggleStyle() { toggleButton.toggleClass(\"bg-indigo-100\"); toggleButton.toggleClass(\"border\"); }Then finally, we have following issue: Writing Correct Shut-Down Code Is Hard: review the jobs regularly and find out which job often have dining philosophers problem and solve it on the early stage Testing Threaded Code Treat Spurious Failures as Candidate Threading Issues: 一發生小小的系統障礙 -> 一定跟 thread 有關 Get Your Nonthreaded Code Working First: 但我們還是先把跟 thread 無關的 code 做好 Make Your Threaded Code Pluggable: 讓 thread 的 code 很好拔插，這樣就可以做出各種可能來檢測 Make Your Threaded Code Tunable: 你要讓你的 threaded code 做了改動，系統還是跑得很順 Run with More Threads Than Processors: 讓 threads 的數量多於 processors，這樣你就有機會提前遇到 dining philosophers 問題，並解決 Run on Different Platforms: 提早讓你的 threads 在不同平台上跑動，這樣可以提早發現 bug Instrument Your Code to Try and Force Failures: 有些 bug 的發生來自一個特定的排列組合，你可以刻意設定等待時間或是交換 thread 的先後順序，嘗試reproduce 這個特定的排列組合，以解決問題。 How? & What?舉例來講，faria 幼稚園舉辦手速比賽，工程師設計了按鈕，點下去就會加一，如下：def update @score += 1end如果家長跟小朋友比賽，但工程師都刻意 POST 同一個 method，如下：def update(params) ... params[:class].find(params[:id]).score += 1 ...end上面的方法看起來沒什麼問題，結果比賽辦得太好了，所以這個比賽隨著日子變得越來越複雜，多了答題機制，還需要複雜的運算。假設比賽後來變成需要機器做一個 5~10 秒的綜合運算，這樣用 concurrency 比較好，則此時 update 變成def update(params) ... CheckService.perform_sync(params) ...enddef CheckService ... def perform if correct? params[:class].find(params[:id]).counter += 1 end end private def correct? ... # 5 ~ 10 seconds endend過了一陣子，老闆覺得小朋友的分數老是超過家長，要工程師研究一下為什麼，這時候我們遇到第一個 issue，解決原則是 Single Responsibility Principle，因為方法都是寫同一個，要 debug，要做實驗要改動 code，都會影響到另外一方，所以最好就是一個 service for 一個 client，如下：def update_parent ... CheckParentService.perform_sync(params) ...enddef update_student ... CheckStudentService.perform_sync(params) ...end...那在持續追查的情況下，發現家長回答的速度太快，結果 service 在 update score 的時候，都拿到比較舊的 score，在 service 運算完後 insert 進一大堆分數都一樣的值。這就是我們遇到的第二個 issue，解決原則有兩個，Limit the Scope of Data 與 Use Copies of Data。Limit the Scope of Data 是在 Service 裡進行同步，我們要在 update 值之前，先同步一次 counter 的數據，在 ruby 裡我們是使用 Mutex，如下：class CheckParentService def initialize ... @jobs_mutex = Mutex.new @counter = Parent.find(params[:id]).counter ... end def synchronize(&block) @jobs_mutex.synchronize(&block) end def perform if correct? synchronize do # 要存進去的時候同步一次 @counter += 1 end end end private def correct? ... # 5 ~ 10 seconds endendUse Copies of Data 則是一開始我們就不要共享資料，然後搜集好所有 correct 後再一次用個 single thread update，方法如下：class Parent attr_reader :counter ...endclass CheckParentService def initialize ... @counter = Parent.find(params[:id]).counter @corrects = [] ... end def perform if correct? @corrects << 1 end end private def correct? ... endendevery :day, at: 12 @counter.sumend就算我們如此設計了，還是可能遇到問題，第一個問題是我們沒有使用 Thread-Safe Collections。除了 Queue 之外，所有資料結構都可能有 race condition，在 ruby 的解決方法是使用 concurrent-ruby gem 來創建資料結構，或是使用如上介紹的 Mutex 來 synchronize 資料。後來工程師都排除這些問題了，但過了一陣子家長的分數還是又低於學生，但有時候又會突然變回來，工程師們經過嚴密的研究，發現有很多家長的 Job 在每天凌晨 12 點的時候根本沒計算完，所以分數時高時低，這帶來下一個 issue，Producer-Consumer。我們可以設計一個 queue，機器有剩餘的 resource 時才將 calculations insert 進去，這樣就不會有 Job 丟失的狀況了。所以如果老闆很希望每天凌晨 12 點計算好，那他就要投資更多機器的錢，讓 Consumer 變多，這樣就不會有問題了，我們通常用 sidekiq 來達成。在解決以上問題後，老闆希望看到分數的即時播報，所以一定要在 Service 裡進行同步，這時候我們會遇到下一個 issue，Reader-Writer problem。因為同時間可能會有兩個 writer 會寫入同一格資料的 race condition，我們的解決方法是加入 semaphore 告知說先在這格沒有 writer 在寫喔，如下：class CheckParentService def initialize @jobs_mutex = Mutex.new @can_write = nil end ... def perform if correct? && @can_write # 寫之前先 check can_write synchronize do @counter += 1 @can_write = false # 寫之前先把 can_write 關掉 save! @can_write = true end end end ...end上面的狀況都排除後，就會開始發生因為 synchronize 產生的小問題。假設老闆覺得這場比賽要刺激一點，就改成比誰先答對 100 題，事後有個家長很生氣，說自己做了 101 題，老闆請工程師了解一下狀況，後來發現是這個 service 的 synchronize 出了問題。工程師原先的邏輯是，答對 100 題後，就不再加分了，如下：class CheckParentService def initialize @counter = Parent.find(params[:id]).counter @accomplished = false end def perform @accomplished = true if @counter >= 100 # key logic if correct? && !@accomplished synchronize do @accomplished # get @accomplished from other threads @counter += 1 save! end end end ...end其實這個問題是無可厚非的，因為一題的計算本來就是 5~10 秒，所以最後本來就有可能有其實已經答對 100 題，但還在計算所以家長多做 1 題的狀況。要改動他就需要同時對 client side 與 server side 進行改動，讓 server-side 還是只需要同步 @counter，然後讓題目即時在 client-side 停止，如下：def update_parent if @accomplished return 'mission accomplished' else CheckParentService.perform_sync(params) endendclass CheckParentService def initialize @counter = Parent.find(params[:id]).counter end def perform if @counter >= 100 @accomplished = true elsif correct? && @counter < 100 synchronize do @counter += 1 save! end end end ...end大家應該會發現引發上面問題的原因是，有兩個 variables 要被同步，而且這兩個變數還相互有關聯。作者說最好的方式就是設計好的邏輯，限縮越少有關連的變數同步越好。後來老闆覺得家長分數太高，所以就調整了題目難度，需要更多暫存做計算。工程師們發現這一類比較難的 Job 總是不會被計算機計算，因為計算時它需要至少 5MB 的暫存，但總是釋放還不到 5MB 的暫存時，就被其他 Job 佔走了，這就是 Dining Philosophers 中的 Starvation 問題，解決方法是使用 semaphore。當此 job 出現時，用 Mutex 發出訊號給其他 Job，讓他們先不要再 performclass CheckParentService def initialize ... @stop = true synchronize do @stop end end def perform synchronize do @stop = false end end ...endclass CheckStudentService def initialize ... end def perform if !@stop # 如果沒有來自 ParentService 叫停的信號再做下去 ... end end ...end後來老闆又覺得可以來一個家長跟學生共同答題的機制，兩個問題都需要一定的計算時間，結果沒設計好，產生 deadlock，如下：class CheckParentService ... def perform if @student_correct if correct? @parent_correct = true end else # waiting end end ...endclass CheckStudentService ... def perform if @parent_correct if correct? @student_correct = true end else # waiting end end ...end結果有可能 @parent_correct 跟 @student_correct 都是 nil，但因為雙方都要等對方 correct，才會進行後續計算，結果就是都沒有計算。解決辦法一樣是使用 semaphore。當 Job 到 CheckParentService 時，可以先檢查 CheckStudentService 的訊號，發現 student 還在計算，那我就先算下去了，如下：class CheckParentService def initialize ... synchronize do @student_calculating end end def perform if @student_correct || @student_calculating # do the calculation if correct? @parent_correct = true end else # waiting end end private def correct? @parent_calculating = true ... endend...我們可能會想說用另外一個方法解決以上問題，就是你如果在計算，那我就先等你算，啊然後我自己先不算，但實際上會產生 livelock，雙方一直在讓對方，如下：class CheckParentService ... def perform if @student_calculating @parent_calculating = false # waiting else if correct? @parent_correct = true end end end private def correct? @parent_calculating = true ... # lots of calculation @parent_calculating = false end ...endclass CheckStudentService ... def perform if @parent_calculating @student_calculating = false # waiting else if correct? @student_correct = true end end end ... private def correct? @student_calculating = true ... # lots of calculation @student_calculating = false end ...end其他議題Referenceclean code by Robert /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/mindset/presentation/2022/05/07/concurrency.html"},{"id":99,"title":"Database Setup","content":" hljs.highlightAll(); About Me Database Setup IntroductionThis article describes how to setup database and models for node project.Why?We need stable way to create database schema for node app.How?PGPlease refer to PGmigrationMigration in database is necessary to manage and track changes in the structure and content of a database, such as adding or modifying tables, columns, or data. It allows for a more organized and controlled approach to database development, deployment, and maintenance.Install Sequelizenpm install --save sequelizenpm install -g sequelize-cliconfiguration(1) create .sequelizerc withconst path = require('path')module.exports = { config: path.resolve('./database/config', 'config.js'), 'models-path': path.resolve('./database/models'), 'seeders-path': path.resolve('./database/seeders'), 'migrations-path': path.resolve('./database/migrations'),}(2) create sub-directories: config, models, seeders and migrations in ./database(3) in config.jsrequire('dotenv').config()module.exports = { development: { url: process.env.DEV_DATABASE_URL, dialect: 'postgres', }, test: { url: process.env.TEST_DATABASE_URL, dialect: 'postgres', }, production: { url: process.env.DATABASE_URL, dialect: 'postgres', },}(4) In .env,DEV_DATABASE_URL=postgres://postgres:test1234@127.0.0.1:5432/my_dbNODE_ENV=development remember to change test1234, my_db to what you desiredmigration file create model sequelize model:generate --name user --attributes name:string,mail:string,password:string and then you can setup constraints in migration file: 'use strict';/** @type {import('sequelize-cli').Migration} */module.exports = { async up(queryInterface, Sequelize) { await queryInterface.createTable('users', { ... email: { type: Sequelize.STRING, unique: true // add this line }, ... }); }, async down(queryInterface, Sequelize) { await queryInterface.dropTable('users'); }}; Add column, for example, I want to add column, purpose to tasks table In terminal, to create migration file npx sequelize-cli migration:generate --name add-purpose-to-tasks A migration file created and input as follow module.exports = { up: async (queryInterface, Sequelize) => { await queryInterface.addColumn('YourModelNameHere', 'purpose', { type: Sequelize.STRING, allowNull: false, defaultValue: '' }); }, down: async (queryInterface, Sequelize) => { await queryInterface.removeColumn('YourModelNameHere', 'purpose'); }}; run migration npx sequelize-cli db:migrate Update model for column, purpose 'use strict';import Sequelize from 'sequelize';import sequelize from './index.js';const task = sequelize.define('task', { project: { type: Sequelize.STRING, }, purpose: { type: Sequelize.STRING, }, spec: { type: Sequelize.TEXT }, price: { type: Sequelize.FLOAT }}) export default task Must use import to load ES Modulecreating a new package.json file in the migrations folder with{ \"type\": \"commonjs\"}migratemigrate withsequelize db:migrateor add script to migrate both test and development\"scripts\": { \"database\": \"NODE_ENV=development sequelize db:migrate; NODE_ENV=test sequelize db:migrate\"}rollbacknpx sequelize-cli db:migrate:undo:all --to XXXXXXXXXXXXXX-create-posts.jsschemaTBCmatch test database with developmentWhat?ChatGPT Sign up for an OpenAI account Create an API key in OpenAI account dashboard. This key will be used to authenticate requests to the API Install the openai package npm install openai connect const openai = require('openai'); // Set up the OpenAI API credentialsopenai.apiKey = 'YOUR_API_KEY'; // Set up the request parametersconst prompt = 'Hello, ChatGPT!';const model = 'text-davinci-002';const temperature = 0.5;const maxTokens = 100; // Send the request to ChatGPTopenai.complete({ engine: model, prompt: prompt, temperature: temperature, maxTokens: maxTokens,}).then(response => { console.log(response.data.choices[0].text);}).catch(error => { console.log(error);}); ReferenceDB-Migrate Simplified – How to Generate PosgreSQL Database From Node.js透過 sequelize 來達成 DB Schema MigrationUse Sequelize ORM with PostgreSQL in Your Express ProjectHow to easily create a Postgres database in DockerResolving ‘Must use import to load ES Module’ error while using Sequelize ORM and ES6 syntax in Node.js” /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/node/2022/12/30/database-setup.html"},{"id":108,"title":"facade","content":" hljs.highlightAll(); About Me facade IntroductionThis pattern makes my code prettier just like facade increase the taste of my house even thought my house is messy belongs to structural patterns, so it structures a specific kind of objects deal with complex set of objects, which these objects did not follow any particular structure; they should be messy const id = 'facade' let binarySearchTree = p5Draw(id) let binarySearchTreeP5 = new p5(binarySearchTree, id);Why?We only care about the aspects we care; for example, given a delivery system, user cares when the package arrives and the cost.Even thought the process of delivering involves shippings, air transport, …etc and it is truly complicate, we do not care. We should prepare the system to have clean interfaces (facades) for them to acquire the information they want.How? & What?For example, there are multiple services: service for transportation: OceanShippingService, AirTransportationService, LandTransportationService service to evaluate whether this item is deliverable: Package service to return possible routes: RouteActually we only care the possible choices of time and cost, soWhatWeCare.new('Taichung', 'Taipei', 'Chihuahua').result## example result: (when it arrives, cost)[ ['60 mins', 1000], ['30 mins', 2000],]WhatWeCare is a facade as follow: (pseudocode)class WhatWeCare # facade def initialize(origin, destination, item) @origin = origin @destination = destination @item = item end def result Route.new(@origin, @destination).results.map do |route| if route.is_deliverable? [ when_it_arrives(route), cost(route) ] end end end private def when_it_arrives(route) result = [] route.each do |sub_route| case sub_route.type when 'Air' AirTransportationService.new(sub_route).time when 'Land' LandTransportationService.new(sub_route).time when 'Ocean' OceanTransportationService.new(sub_route).time end end result.sum end def cost(route) result = [] route.each do |sub_route| case sub_route.type when 'Air' AirTransportationService.new(sub_route).cost when 'Land' LandTransportationService.new(sub_route).cost when 'Ocean' OceanTransportationService.new(sub_route).cost end end result.sum end def routes(@origin, @destination) Route.new(@origin, @destination) endendgiven the service as follow:class Route # returns all possible routes def initialize(origin, destination) ... end def results # suppose there are two possible routes ... possible_routes.map do |route| if is_deliverable?(route) route end end end private def possible_routes ... [ ['Taichung to Taoyuan (Air)', 'Taoyuan to Taipei (Ocean)'], ['Taichung to Hsinchu (Air)', 'Hsinchu to Banqiao (Ocean)', 'Banqiao to Taipei (Ocean)'], ... ] end def is_deliverable?(route) Package(route).result endendclass Package # returns whether this package is deliverable in this route def initialize(route) ... end def result ... true or false # whether the item is deliverable in this sub-route endendclass OceanShippingService # returns the estimates of delivery time and cost def initialize(route) ... end def time ... end def cost ... endendclass AirTransportationService # returns the estimates of delivery time and cost def initialize ... end def time ... end def cost ... endendclass LandTransportationService # returns the estimates of delivery time and cost def initialize ... end def time ... end def cost ... endendpros and consReferenceFacadeFacade Pattern – Design Patterns (ep 9) /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/design-pattern/presentation/2022/07/28/facade.html"},{"id":118,"title":"Neo Result","content":" hljs.highlightAll(); About Me Neo Result Introduction My result Neuroticism is average (78 of 120), indicating that your level of emotional reactivity is typical of the general population. Stressful and frustrating situations are somewhat upsetting to you, but you are generally able to get over these feelings and cope with these situations. Your score on Anxiety is high (15 of 20). The “fight-or-flight” system of the brain of anxious individuals is too easily and too often engaged. Therefore, people who are high in anxiety often feel like something dangerous is about to happen. They may be afraid of specific situations or be just generally fearful. They feel tense, jittery, and nervous. Persons low in Anxiety are generally calm and fearless. Your score on Anger is average (14 of 20). Persons who score high in Anger feel enraged when things do not go their way. They are sensitive about being treated fairly and feel resentful and bitter when they feel they are being cheated. This scale measures the tendency to feel angry; whether or not the person expresses annoyance and hostility depends on the individuals level on Agreeableness. Low scorers do not get angry often or easily. Your score on Depression is high (15 of 20). This scale measures the tendency to feel sad, dejected, and discouraged. High scorers lack energy and have difficult initiating activities. Low scorers tend to be free from these depressive feelings. Your score on Self-Consciousness is average (14 of 20). Self-conscious individuals are sensitive about what others think of them. Their concern about rejection and ridicule cause them to feel shy and uncomfortable abound others. They are easily embarrassed and often feel ashamed. Their fears that others will criticize or make fun of them are exaggerated and unrealistic, but their awkwardness and discomfort may make these fears a self-fulfilling prophecy. Low scorers, in contrast, do not suffer from the mistaken impression that everyone is watching and judging them. They do not feel nervous in social situations. Your score on Immoderation is average (8 of 20). Immoderate individuals feel strong cravings and urges that they have have difficulty resisting. They tend to be oriented toward short-term pleasures and rewards rather than long-term consequences. Low scorers do not experience strong, irresistible cravings and consequently do not find themselves tempted to overindulge. Your score on Vulnerability is average (12 of 20). High scorers on Vulnerability experience panic, confusion, and helplessness when under pressure or stress. Low scorers feel more poised, confident, and clear-thinking when stressed. Your score on Extraversion is average (66 of 120), indicating you are neither a subdued loner nor a jovial chatterbox. You enjoy time with others but also time alone. Your score on Friendliness is average (7 of 20). Friendly people genuinely like other people and openly demonstrate positive feelings toward others. They make friends quickly and it is easy for them to form close, intimate relationships. Low scorers on Friendliness are not necessarily cold and hostile, but they do not reach out to others and are perceived as distant and reserved.Your score on Gregariousness is low (5 of 20). Gregarious people find the company of others pleasantly stimulating and rewarding. They enjoy the excitement of crowds. Low scorers tend to feel overwhelmed by, and therefore actively avoid, large crowds. They do not necessarily dislike being with people sometimes, but their need for privacy and time to themselves is much greater than for individuals who score high on this scale. Your score on Assertiveness is high (15 of 20). High scorers Assertiveness like to speak out, take charge, and direct the activities of others. They tend to be leaders in groups. Low scorers tend not to talk much and let others control the activities of groups. Your score on Activity Level is high (17 of 20). Active individuals lead fast-paced, busy lives. They move about quickly, energetically, and vigorously, and they are involved in many activities. People who score low on this scale follow a slower and more leisurely, relaxed pace. Your score on Excitement-Seeking is average (12 of 20). High scorers on this scale are easily bored without high levels of stimulation. They love bright lights and hustle and bustle. They are likely to take risks and seek thrills. Low scorers are overwhelmed by noise and commotion and are adverse to thrill-seeking. Your score on Cheerfulness is average (10 of 20). This scale measures positive mood and feelings, not negative emotions (which are a part of the Neuroticism domain). Persons who score high on this scale typically experience a range of positive feelings, including happiness, enthusiasm, optimism, and joy. Low scorers are not as prone to such energetic, high spirits. Your score on Openness to Experience is high (101 of 120), indicating you enjoy novelty, variety, and change. You are curious, imaginative, and creative. Your score on Imagination is high (16 of 20). To imaginative individuals, the real world is often too plain and ordinary. High scorers on this scale use fantasy as a way of creating a richer, more interesting world. Low scorers are on this scale are more oriented to facts than fantasy. Your score on Artistic Interests is high (20 of 20). High scorers on this scale love beauty, both in art and in nature. They become easily involved and absorbed in artistic and natural events. They are not necessarily artistically trained nor talented, although many will be. The defining features of this scale are interest in, and appreciation of natural and artificial beauty. Low scorers lack aesthetic sensitivity and interest in the arts.Your score on Emotionality is average (14 of 20). Persons high on Emotionality have good access to and awareness of their own feelings. Low scorers are less aware of their feelings and tend not to express their emotions openly. Your score on Adventurousness is high (17 of 20). High scorers on adventurousness are eager to try new activities, travel to foreign lands, and experience different things. They find familiarity and routine boring, and will take a new route home just because it is different. Low scorers tend to feel uncomfortable with change and prefer familiar routines.Your score on Intellect is high (20 of 20). Intellect and artistic interests are the two most important, central aspects of openness to experience. High scorers on Intellect love to play with ideas. They are open-minded to new and unusual ideas, and like to debate intellectual issues. They enjoy riddles, puzzles, and brain teasers. Low scorers on Intellect prefer dealing with either people or things rather than ideas. They regard intellectual exercises as a waste of time. Intellect should not be equated with intelligence. Intellect is an intellectual style, not an intellectual ability, although high scorers on Intellect score slightly higher than low-Intellect individuals on standardized intelligence tests. Your score on Liberalism is average (14 of 20). Psychological liberalism refers to a readiness to challenge authority, convention, and traditional values. In its most extreme form, psychological liberalism can even represent outright hostility toward rules, sympathy for law-breakers, and love of ambiguity, chaos, and disorder. Psychological conservatives prefer the security and stability brought by conformity to tradition. Psychological liberalism and conservatism are not identical to political affiliation, but certainly incline individuals toward certain political parties. Your high level of Agreeableness (83 of 120) indicates a strong interest in others needs and well-being. You are pleasant, sympathetic, and cooperative. Your score on Trust is high (15 of 20). A person with high trust assumes that most people are fair, honest, and have good intentions. Persons low in trust see others as selfish, devious, and potentially dangerous. Your score on Morality is high (18 of 20). High scorers on this scale see no need for pretense or manipulation when dealing with others and are therefore candid, frank, and sincere. Low scorers believe that a certain amount of deception in social relationships is necessary. People find it relatively easy to relate to the straightforward high-scorers on this scale. They generally find it more difficult to relate to the unstraightforward low-scorers on this scale. It should be made clear that low scorers are not unprincipled or immoral; they are simply more guarded and less willing to openly reveal the whole truth. Your score on Altruism is high (15 of 20). Altruistic people find helping other people genuinely rewarding. Consequently, they are generally willing to assist those who are in need. Altruistic people find that doing things for others is a form of self-fulfillment rather than self-sacrifice. Low scorers on this scale do not particularly like helping those in need. Requests for help feel like an imposition rather than an opportunity for self-fulfillment. Your score on Cooperation is average (11 of 20). Individuals who score high on this scale dislike confrontations. They are perfectly willing to compromise or to deny their own needs in order to get along with others. Those who score low on this scale are more likely to intimidate others to get their way. Your score on Modesty is average (8 of 20). High scorers on this scale do not like to claim that they are better than other people. In some cases this attitude may derive from low self-confidence or self-esteem. Nonetheless, some people with high self-esteem find immodesty unseemly. Those whoare willing to describe themselves as superior tend to be seen as disagreeably arrogant by other people. Your score on Sympathy is high (16 of 20). People who score high on this scale are tenderhearted and compassionate. They feel the pain of others vicariously and are easily moved to pity. Low scorers are not affected strongly by human suffering. They pride themselves on making objective judgments based on reason. They are more concerned with truth and impartial justice than with mercy. Your score on Conscientiousness is high (87 of 120). This means you set clear goals and pursue them with determination. People regard you as reliable and hard-working. Your score on Self-Efficacy is high (17 of 20). Self-Efficacy describes confidence in ones ability to accomplish things. High scorers believe they have the intelligence (common sense), drive, and self-control necessary for achieving success. Low scorers do not feel effective, and may have a sense that they are not in control of their lives. Your score on Orderliness is average (11 of 20). Persons with high scores on orderliness are well-organized. They like to live according to routines and schedules. They keep lists and make plans. Low scorers tend to be disorganized and scattered. Your score on Dutifulness is average (13 of 20). This scale reflects the strength of a persons sense of duty and obligation. Those who score high on this scale have a strong sense of moral obligation. Low scorers find contracts, rules, and regulations overly confining. They are likely to be seen as unreliable or even irresponsible. Your score on Achievement-Striving is high (18 of 20). Individuals who score high on this scale strive hard to achieve excellence. Their drive to be recognized as successful keeps them on track toward their lofty goals. They often have a strong sense of direction in life, but extremely high scores may be too single-minded and obsessed with their work. Low scorers are content to get by with a minimal amount of work, and might be seen by others as lazy. Your score on Self-Discipline is high (19 of 20). Self-discipline-what many people call will-power-refers to the ability to persist at difficult or unpleasant tasks until they are completed. People who possess high self-discipline are able to overcome reluctance to begin tasks and stay on track despite distractions. Those with low self-discipline procrastinate and show poor follow-through, often failing to complete tasks-even tasks they want very much to complete. Your score on Cautiousness is average (9 of 20). Cautiousness describes the disposition to think through possibilities before acting. High scorers on the Cautiousness scale take their time when making decisions. Low scorers often say or do first thing that comes to mind without deliberating alternatives and the probable consequences of those alternatives. Why?I want to become a better person on psychology side.How? Average levels of Neuroticism and Self-Consciousness (this is my problem) Anxiety and Depression scores are high, which may indicate that you experience intense emotions in response to stressors Your Extraversion score is average, indicating that you enjoy both social interactions and spending time alone Additionally, your scores on Openness to Experience, Imagination, and Artistic Interests are high, which suggests that you enjoy exploring new ideas and experiences, have a vivid imagination, and appreciate art and beauty Your score on Assertiveness is high, indicating that you are comfortable speaking out, taking charge, and directing the activities of others, while your score on Friendliness is average, which suggests that you may not make friends quickly, but you are not necessarily cold or hostile.What? Try to help myself out of anxiety and depression Seek professional help: A mental health professional such as a therapist or counselor can help you identify the root cause of your anxiety and depression and develop a treatment plan that meets your unique needs. They may recommend therapy, medication, or a combination of both. Practice relaxation techniques: Relaxation techniques such as deep breathing, meditation, yoga, or progressive muscle relaxation can help calm your mind and body and reduce anxiety and depression symptoms. Exercise regularly: Exercise releases endorphins, which are natural chemicals that boost your mood and reduce stress and anxiety. Aim to get at least 30 minutes of exercise each day. Practice self-care: Self-care is essential for managing anxiety and depression. Make sure you get enough sleep, eat a healthy diet, and take breaks when you need them. Avoid alcohol and drugs: Substance use can make anxiety and depression symptoms worse. Avoid using drugs or alcohol as a way to cope with your feelings. Connect with others: Isolation can make anxiety and depression symptoms worse. Try to connect with family and friends, join a support group, or participate in activities that interest you. Seek professional helpBefore I seek professional help for anxiety and depression: Educate yourself: Read about anxiety and depression to understand what you might be experiencing. Knowing what symptoms to look out for can help you identify what you’re feeling and communicate it to your healthcare provider. Keep a journal: Write down your thoughts, feelings, and any symptoms you experience in a journal. This can help you track patterns and identify triggers for your anxiety and depression. Seek support: Talk to someone you trust about what you’re going through. Sharing your experiences with others can help you feel less alone and provide emotional support. Practice self-care: Take care of your physical health by eating a balanced diet, getting enough sleep, and exercising regularly. Engage in activities that you enjoy and make you feel good. Identify your goals: Think about what you hope to achieve by seeking professional help. Identifying your goals can help you communicate your needs to your healthcare provider.Practice relaxation techniques Start with your feet and work your way up to your head, tensing each muscle group for a few seconds, then relaxing them for a few seconds. Visualization: Imagine a peaceful place, such as a beach or a forest. Focus on the details of the scene and try to make it as vivid as possible. As you imagine this place, consciously let go of any tension in your muscles. Deep breathing: Close your eyes and take a slow, deep breath in through your nose. Hold the breath for a few seconds, then exhale slowly through your mouth. As you exhale, feel the tension leaving your muscles. Yoga or stretching: These activities can help loosen tight muscles and promote relaxation. Massage: A professional massage or self-massage can help release muscle tension and promote relaxation.Connect with othersI think I can just to learn new things with courses.ReferenceWhy: asking for the reason or purpose behind something.How: asking for the method or process of doing something.What: asking for information about a specific thing or object. /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/psychology/2023/03/26/NEO-result.html"},{"id":110,"title":"ACID","content":" const config = { theme: 'neutral', startOnLoad:true, htmlLabels:true, }; mermaid.initialize(config); hljs.highlightAll(); About Me ACID IntroductionACID is the abbreviation of four words: atomicity (不可分割性), consistency (一致性), isolation (獨立性), durability (持久性). With ACID, the database performs transactions reliably. (A transaction means an indivisible unit of work in database) Atomicity ensures one transaction is treated as a single unit. Rollback all commits if transaction fails. Consistency ensures transaction can only bring the database from one valid state to another. Transactions must pass all predefined rules in schema. Isolation ensures concurrent transactions leaves the database with same result. There are four level: Read uncommitted(未提交讀), read committed(提交讀), repeatable read(可重複讀), Serializable(串行化) Durability ensures the changes from transaction will remain committed even in the case of a system failureWhy?If database did not follow this properties, no atomicity: transaction fails but no rollback -> some SQL command processed and some did not no consistency: transaction did not follow all pre-defined rules such as callbacks, default values, …etc -> database corrupted, making it to be unstable in the future no isolation: concurrent transactions reading and writing to a table at the same time -> no rules to determine when to share the changes to the concurrent transactions -> inconsistent results with same concurrent transactions no durability: system crash -> transactions processed but did not change the resultHow? (Concept)AtomicityUser A wants to transfer $1,000 dollar to user B. Then the database must execute these two SQL commnadsUPDATE BalanceAccount SET Balance = Balance - 1000 WHERE id = 1UPDATE BalanceAccount SET Balance = Balance + 1000 WHERE id = 2If system did not follow the design of atomicity, then it may execute command 1 but not command 2 and $1,000 dollars disappear.To solve this issue, atomicity can be achieved with try catch blocks as follow:BEGIN TRY BEGIN TRANSACTION UPDATE BalanceAccount SET Balance = Balance - @amount WHERE id = @from_id UPDATE BalanceAccount SET Balance = Balance + @amount WHERE id = @to_id COMMIT TRANSACTION -- detect by DBMSEND TRYBEGIN CATCH ROLLBACK TRANSACTION -- rollback with the mechanism of DBMSEND CATCHor unwanted result: BalanceAccount     id user balance 1 A $5,000 2 B $4,000 The mechanism of commit and rollback is in the what sectionConsistencyGiven that the default data type of balance is INTEGER, suppose user A is a hacker and use SQL injection to insert string to his account, trying to mess up his balance. With consistency, the value should not be changed as follow:BEGIN TRY BEGIN TRANSACTION UPDATE BalanceAccount SET Balance = @amount WHERE id = @from_id COMMIT TRANSACTION -- DBMS checks whether it follows shcemaEND TRYBEGIN CATCH ROLLBACK TRANSACTION -- rollback with the mechanism of DBMSEND CATCHor unwanted result: BalanceAccount     id user balance 1 A hahahaha 2 B $4,000 The mechanism of commit and rollback is in the what sectionDurabilityDatabase achieve durability by non-volatile storage: can retain stored information even after power is removed coordinate before commit: if there are concurrent commits, it will coordinate first then commit transaction log: recreate the system state with these logIsolation level\\problem dirty read non-repeatable read phamton read uncommitted true 　true true read committed false true true repeatable read false false true serializable false false false As you can see, serializable > repeatable read > read committed > read uncommittedProblems: dirty read: read data from a row that has been modified by another running transaction and not yet committed non-repeatable read: returns two different result in single transaction because of other updates phamton: different number of rows created by other transaction during single transactiondirty readUser A transfer $1,000 dollar to user B but input string value, \"$1,000\" rather than 1000. Then given above mechanism, this transaction will be rollback. Dirty read may occur if database read the value before database finish the COMMIT.If we set the transaction level to read uncommited as follow:SET TRANSACTION LEVEL READ UNCOMMITEDSELECT balance FROM BalanceAccount WHERE id = 1 -- balance = 5000-- the updates that going to be rollbackSELECT balance FROM BalanceAccount WHERE id = 1 -- balance = 4000 -> wrong-- rollback occursthen the unwanted result in one transaction:5000 -- first SELECT-- commit rollback4000 -- second SELECTnon-repeatable readAgain, user A transfer $1,000 dollar to user B and there is a mechanism to sum up the debit and credit values cash flows and compare the value with balance. Non-repeatable read occurs when some value updates during multiple SELECT in one transactionIf we set the level to READ COMMITTED read as follow:SET TRANSACTION ISOLATION LEVEL READ COMMITTEDBEGIN TRANSACTIONSELECT balance FROM BalanceAccount WHERE id = 1 -- balance = 5000... -- some complex SQL commands costing lots of time to compare value with debit sideSELECT balance FROM BalanceAccount WHERE id = 1 -- balance = 5000 (still!!!!!!!!!!)... -- some complex SQL commands to compare value with credit sideCOMMIT TRANSACTIONthen the unwanted result in one transaction5000 -- first SELECT-- commit occurs4000 -- second SELECTphamtonSuppose there is a transaction needs the total number of BalanceAccount at the beginning and the end and there is a new user created. The TRANSACTION would be as follow:If we set the level to REPEATABLE READ read as follow:SET TRANSACTION ISOLATION LEVEL REPEATABLE READBEGIN TRANSACTIONSELECT COUNT(*) FROM BalanceAccount -- return 100-- some complex calcualtions take timeSELECT COUNT(*) FROM BalanceAccount -- return 100COMMIT TRANSACTIONor unwanted result:100 -- first select-- some complex calcualtions take time101 -- second selectWhat?Take MySQL as example, the dataflow as follow: (two-phase commit)graph TD id1((transaction)) id2(DBMS) id3[log]graph TD data((transaction)) --flow into--> InnoDB(InnoDB) InnoDB(InnoDB) --insert into cache memory--> redo_log_prepare[redo log .prepare] redo_log_prepare[redo log .prepare] --InnoDB inform MySQL Server--> mysql_server(MySQL Server) mysql_server(MySQL Server) --insert into cache memory--> binlog[binlog] binlog[binlog] --MySQL Server inform InnoDB--> InnoDB2(InnoDB) InnoDB2(InnoDB) --change log--> redo_log_commit[redo log .commit] redo_log_commit[redo log .commit] --batch writing--> database Note: binlog is for MySQL and redo log is form InnoDB.Atomicity (MySQL)If failed in any steps, MySQL will rollback the database by recovering records with redo log and binlog, ensuring Atomicity.Consistency (MySQL)It will check whether the log follows schema to make sure consistency. If not, rollback with log.Durability (MySQL)If system crash, recover data with binlog. (redo log only records fix amount of transactions)Isolation (MySQL)dirty read in mysqlTransaction B can read uncommit changes from transaction A. Transaction A:START TRANSACTION;UPDATE users SET email = 'hahaha@lalala.com' WHERE id = 8;DO SLEEP(15);ROLLBACK; Transaction B:SET SESSION TRANSACTION ISOLATION LEVEL READ UNCOMMITTED; -- the default level in mysql is REPEATABLE READSELECT * FROM usersnon-repeatable read in mysqlTransaction B can read the changes from transaction A during the transaction B. Transaction A:UPDATE users SET email = 'hahaha@lalala.com' WHERE id = 8; Transaction B:SET SESSION TRANSACTION ISOLATION LEVEL REPEATABLE READ; -- the default level in mysql is REPEATABLE READSTART TRANSACTION;SELECT * FROM users WHERE id = 8;DO SLEEP(10);SELECT * FROM users WHERE id = 8;COMMIT;phamton in mysql Transaction A:INSERT INTO admin_roles (`name`, `created_at`, `updated_at`) VALUES ('testing', '2022-01-01', '2022-01-01') Transaction B:SET SESSION TRANSACTION ISOLATION LEVEL SERIALIZABLE; -- the default level in mysql is REPEATABLE READSTART TRANSACTION;SELECT COUNT(*) FROM admin_roles; -- return 100DO SLEEP(10);SELECT COUNT(*) FROM admin_roles; -- return 100COMMIT;ReferenceACIDDatabase Transactions (ACID)sql server dirty read exampleNon repeatable read example in sql serverDurability (database systems)MySQL 基本運作介紹，從資料庫交易與 ACID 特性開始 /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/database/presentation/2022/05/14/ACID.html"},{"id":112,"title":"clean code ch7","content":" hljs.highlightAll(); About Me clean code ch7 IntroductionThe methodology forces coders to handle exception with Try-Catch-Finally StatementWhy?We want code that handles errors with grace and style.How? Use Exception Rather Than Return Codes: we easily forget the else section Write your Try-Catch-Finally Statement First: use TDD to force exceptions Use Unchecked Exceptions: not an issue in ruby Provide Context with Exceptions: write as clear as possible Define Exception Classes in Terms of a Caller’s Needs: the concept of inteface Define the Normal Flow: remove the exception if it should be part of business logic Don’t Return Null Don’t Pass NullWhat?Use Exception Rather Than Return CodesGiven device has been initalized somewhere and we use DeviceHandle to handle this device,class DeviceController ... def send_shut_down handle = DeviceHandle.new(ENVIRONMENT) if handle == DeviceHandle.VALID record = retrieve_device_record(handle) if record.getStatus != DEVICE_SUSPENDED pause_device(handle) clear_device_work_queue(handle) close_device(handle) else logger.log(\"Device suspended. Unable to shut down\"); end else logger.log(\"Invalid handle for: \" + ENVIRONMENT); end end ...toclass DeviceController { ... def send_shut_down begin try_to_shut_down rescue DeviceShutDownError => e logger.log(e) end end private def try_to_shut_down handle = DeviceHandle.new(ENVIRONMENT) if handle == DeviceHandle.VALID record = retrieve_device_record(handle) if record.getStatus != DEVICE_SUSPENDED pause_device(handle) clear_device_work_queue(handle) close_device(handle) end end endWrite your Try-Catch-Finally Statement FirstRSpec.describe 'file' do ... context 'after retriving an invalid file' do it 'should return exception' do expect{File.retrieve('invalid_file')}.to raise_error(NoFileError) end end ...endThen given the spec, we will write method as follow:class File ... def retrieve(file_name) begin 'some process' rescue NoFileError => e puts 'cannot find the file' + e end end ...endThis approach makes sure exception to be included in the methods.Use Unchecked ExceptionsThere is no checked exceptions in ruby but in java. Java will check obvious errors while compiling; to avoid it in java, use Try-Catch-Finally statements. Since the author forces us to use this statements at all time, we do not need checked exceptions.public class CheckedVsUnchecked { public satic void main(String[] args){ readFile('myFile.txt'); // no myFile.txt } private static void readFile (String fileName) { try { // must use it or it will not compile FileReader reader = new FileReader(fileName); } catch (FileNotFoundException fnfe) { System.out.println('No file found'); } }}Provide Context with Exceptionsuseclass File ... def retrieve(file_name) begin 'some process' rescue NoFileError => e puts 'cannot find the file' + e end end ...endinstead ofclass File ... def retrieve(file_name) begin 'some process' rescue Exception => e e end end ...endDefine Exception Classes in Terms of a Caller’s NeedsFor example, ACMEPort may throw three kinds of exceptions DeviceResponseException, ATM1212UnlockedException, and GMXError. We should use the concept of APIFromport = ACMEPort.new(12);def perform begin port.open() rescue DeviceResponseException => e reportPortError(e) logger.log(\"Device response exception\", e) rescue ATM1212UnlockedException => e reportPortError(e) logger.log(\"Unlock exception\", e) rescue GMXError => e reportPortError(e) logger.log(\"Device response exception\") ensure ... endtoport = LocalPort.new(12)def perform begin port.open rescue PortDeviceFailure => e reportError(e); logger.log(e.getMessage(), e); ensure ... endendclass LocalPort def initialize(portNumber) innerPort = ACMEPort.new(portNumber) end def open begin innerPort.open rescue DeviceResponseException => e raise PortDeviceFailure(e) rescue ATM1212UnlockedException => e raise PortDeviceFailure(e) rescue GMXError => e raise PortDeviceFailure(e) end endendDefine the Normal FlowAvoid putting business logic into rescue sectionFromdef perform begin meal_expenses = ExpenseReportDAO.meals(employee.ID) m_total += meal_expenses rescue m_total += meal_per_diem endendtodef perform meal_expenses = ExpenseReportDAO.meals(employee.ID) m_total += meal_expensesendclass ExpenseReportDAO def meals if meal_expense return meal_expense else return per_diem_amount end endendDon’t Return NullReturn empty object or raise an error insteadFromemployees = get_employeesif employees != nil employees.each do |employee| total_pay += employee.pay endenddef get_employees ...endtoemployees = get_employeesemployees.each do |employee| total_pay += employee.payenddef get_employees ... return [] if no_employees # or raise NoEmployeeError ...endDon’t Pass NullPass null usually do not have meaningful results. We should raise exception in the method; however it still cost some run time. The better way is just return it if caller pass a null value.Referenceclean code by Robert /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/mindset/presentation/2022/03/27/clean-code-ch7.html"},{"id":114,"title":"clean code ch2","content":" const config = { theme: 'neutral', startOnLoad:true, htmlLabels:true, }; mermaid.initialize(config); hljs.highlightAll(); About Me clean code ch2 IntroductionclassDiagram maintainability <|-- readability maintainability <|-- cowork readability : 1. Intention Revealing readability : 2. Avoid Disinformation readability : 3. Make Meaningful Distinctions readability : 4. Avoid Encodings readability : 5. Class Name & Method Name readability : 6. Avoid Mental Mapping readability : 7. Use Solution Domain Names readability : 8. Use Problem Domain Names readability : 9. Add Meaningful Context readability : 10. Do not Add Gratuitous Context cowork : 1. Use Pronounceable Names cowork : 2. Use Searchable Names cowork : 3. Do not Be Cute cowork : 4. Pick One Word per Concept cowork : 5. Do not PunWhy?Because we do so much of naming, we’d better do it well to improve the maintainability. It will pay off in the short term and continue to pay in the long run.What?Intention-RevealingvariableFromd = 10 # elapsed time in daystoelapsed_time_in_days = 10functionFromdef get_them list1 = [] theList.each do |x| if (x[0] == 4) list1 << x end end list1endtodef get_flagged_cells flagged_cells = [] game_board.each do |cell| if (cell.flagged?) # write a method to check the status flagged_cells << cell end end flagged_cellsendAvoid DisinformationThe o, l, 0, 1 making it hard to find out this is an unnecessary logic.def equal_one if o != 1 l = 01 else l = o * 1 end lendMake Meaningful DistinctionsClass nameFromBook1Book2Book3ProductProductInfoProductDatatoPictureBookEncyclopediaTextBookProductAvoid Encodings (Hungarian Notation, Member Prefixes, Interfaces and Implementations)variableFromstr_phone = \"0901xxxxxx\"tophone = \"0901xxxxxx\" # call class method to know the typefunctionFromdef set_name(name) m_dsc = name # avoid m_endtodef set_description(description) self.description = descriptionendClass Name & Method NameUse noun in class name and use verb in method name.Fromclass SetEmployeeData def initialize(params) end def salary endendtoclass Employee def set_salary endendAvoid Mental MappingAvoid reader mapping variables mentally; for example, child is better than x in following methodFromchildren.each do |x| if x.age < 18 teenagers << x return teenagersendtochildren.each do |child| if child.age < 18 teenagers << child return teenagersendUse Solution Domain Name & Use Problem Domain NamesUse Solution Domain NameUse postgresql_adapter instead of postgresql_connection because programmers have the concept of adapter in design pattern.Use Problem Domain NamesBut use problem descriptions when there is no good professional wordings.Add Meaningful ContextFor example, adding context to explain the logic of following methodFromdef printGuessStatistics(candidate, count) if count == 0 number = \"no\" verb = \"are\" pluralModifier = \"s\" elsif count == 1 number = \"1\" verb = \"is\" pluralModifier = \"\" else number = count.to_s verb = \"are\" pluralModifier = \"s\"; end guessMessage = \"There #{verb}, #{number}, #{candidate}#{pluralModifier}\"endtoclass GuessStatisticsMessage def initialize(candidate, count) create_plural_dependent_message_parts(count) guessMessage = \"There #{@verb}, #{@number}, #{@candidate}#{@pluralModifier}\" end private def create_plural_dependent_message_parts(count) if count == 0 there_are_no_letters elsif count == 1 there_is_one_letter else there_are_many_letters(count) end end def there_are_many_letters(count) @number = count.to_s @verb = \"are\" @pluralModifier = \"s\" end def there_is_one_letter @number = \"1\" @verb = \"is\" @pluralModifier = \"\" end def there_are_no_letters @number = \"no\" @verb = \"are\" @pluralModifier = \"s\" endendDo not Add Gratuitous ContextFor example, use Student instead of OpenApplyStudentUse Pronounceable NamesTo communicate with other programmers,FromgenymdhmsmodymdhmstogenerationTimestampmodificationTimestampUse Searchable NamesFromfor (let j=0; j<34; j++) { s += (t[j]*4)/5;}toconst numberOfTasks = 4;const realDaysPerIdealDay = 4;const workDaysPerWeek = 5;for (let j=0; j < numberOfTasks; j++) { realTaskDays = taskEstimate[j] * realDaysPerIdealDay; realTaskWeeks = (realdays / workDaysPerWeek); sum += realTaskWeeks;}Then you can search the terms, sum, task, per, …etcDo not Be CuteAvoid using jokes such as burnOutAll to mean destroyPick One Word per Concept and Don’t PunBuild a team convention, do not use fetch, retrieve, get for the same purpose. But also do not use get to all environments. For example, we can use get in backend and fetch in frontend.Reference /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/mindset/presentation/2022/02/20/clean-code-ch2.html"},{"id":115,"title":"(project) Blog","content":" hljs.highlightAll(); About Me (project) Blog IntroductionTBCWhy?I need to structure my thoughts.How? music, I can make video of the song 家，before audio and after audio and write an article and connect the youtube video on my blog add static vs dynamic programming rename all the overview article to the directory name, so that the graph can show the name instead of overview connect code pan API, which means I can create code result on a defined area organize the css style to main.css Try to start from self/overview better href style migrate to react (jekyll has no update since 2019) solve all the warnings on webpack read fashion trends in aesthetics re-design in minimalist way have a better table CSS all articles should be as independent as possible split complexity and problem solving the leet code practice truly need paper work ask GPT the most common leetcode questions for all data structures add plotly and P5 add react sketch https://codesandbox.io/s/charity-chat-canvas-sw4jy?file=/src/index.js() complete cracking coding interview first the overview article will be the core of each section and connect the groups of dots as network add dots plot for articles (mind map) add searching bar Increase the padding of each sentence (CSS) let sidebar be expendable (or I should try to know other’s design) split articles according to modules of projects add dots plot for articles (mind map) move to react add a stylish title image (generate by AI) make landing api looks like openai, with capybara image as helper image and the art (branch: update-landing-page) drawing as background move image to about section solve <meta name=”viewport” connect linkedin API add landing page for it add animation on landing page backend with rails to login and signupWhat?production urlReference /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/project/1993/09/01/(project)-blog.html"},{"id":61,"title":"Isolating Timelines","content":" MathJax.Hub.Config({ TeX: { equationNumbers: { autoNumber: \"AMS\" } } }); hljs.highlightAll(); About Me Isolating Timelines IntroductionThis article describes Concept of timeline diagrams Represent sequences of actions over time Timeline diagrams help us understand how software runs How to draw timeline diagrams from code How to use them to diagnose and predict bugsWhy?By concept of timelines, we can identify bug and improve code design to create more efficient programs.How?Customers Report BugProblem: Shopping cart showing the wrong total Reproduce: Click add 6 twice fast Desired result: 14 (6 * 2 + 2, 2 shoes + shipping) Variant results: 14, 16Draw Timeline Diagrams from CodeIn this section, code => diagram => simplify diagram => 13 actions to 3 actionsCodefunction add_item_to_cart(name, price, quantity) { cart = add_item(cart, name, price, quantity); calc_cart_total(); } function calc_cart_total() { total = 0; cost_ajax(cart, function(cost) { // AJAX request total += cost; // when request complete, add on cost shipping_ajax(cart, function(shipping) { // AJAX request total += shipping; // when request complete, add on shipping update_total_dom(total); }); });} timeline diagram, one request, browserbasic diagram Actions +=: var temp = total; // readtemp = temp + 1;total = temp; // write console.log(total): var temp = total; // readconsole.log(temp); Timelines (Three in the graph): Same timeline: Actions occur in order Separate timeline (Async): Actions happen at the same time or out of order dot line: AJAX and Event loop Refer to sections “JavaScript’s asynchronous queue”, “AJAX and the event queue”, and also this video consolidate actions: (simplification step 1) JavaScript only has one thread => Consolidate all actions on a single timeline; that is, a box Refer to sections “Two tricky details about the order of actions” and “Drawing the add-to-cart timeline: Step 1”, “JavaScript’s single-thread” Interleave Javascript synchronous actions don’t interleave Javascript asynchronous actions can interleave Refer to sections “Different languages, different threading models in grokking simplicity”, “Timeline diagrams capture the two kinds of sequential code” consolidate timelines: (simplification step 2) JavaScript’s event loop only has one thread => One AJAX triggered by another will run in queue => Consolidate timelines that end by creating one new timelineRead timeline diagrams to find bugstimeline diagram, two request, browser Problem: The shipping add twiceGeneral rules Ordering Evaluation: \\(o = \\frac{(ta)!}{(a!)^t}\\) Fewer timelines, \\(t\\) Shorter timelines, \\(a\\) Share Resources Fewer sharing resources: reduce the ordering we need to consider Coordinate when resources are shared Manipulate time as a first-class concept: in following chapters Refer to sections “The two fundamentals of timeline diagrams”, “Asynchronous calls require new timelines”, “Drawing the add-to-cart timeline: Step 2”, “Principles of working with timelines”Problem: Share Resourcesfunction add_item_to_cart(name, price, quantity) { cart = add_item(cart, name, price, quantity); // global variable calc_cart_total();}function calc_cart_total() { total = 0; // global variable cost_ajax(cart, function(cost) { total += cost; shipping_ajax(cart, function(shipping) { total += shipping; update_total_dom(total); }) })}Improve code design by reducing resources shared between timelines.Based on last section, we can try to fix the bug byReduce share resources Through local variable function calc_cart_total() { var total = 0; // use local variable instead cost_ajax(cart, function(cost) { total += cost; // Then the total must be zero here. Another timeline could not write to it shipping_ajax(cart, function(shipping) { total += shipping; update_total_dom(total); }) })} Through argument function add_item_to_cart(name, price, quantity) { cart = add_item(cart, name, price, quantity); calc_cart_total(cart); // add the cart as argument}function calc_cart_total(cart) { var total = 0; cost_ajax(cart, function(cost) { // cart read not global variable anymore total += cost; shipping_ajax(cart, function(shipping) { // cart read not global variable anymore total += shipping; update_total_dom(total); }) })} result Variable cart is still global but the second timeline is constrained to run after the first step (hence the dotted line), so these first steps that use the cart will always run in order. They can’t interfere with each other. We’re still sharing the DOM as a resource and going to learn how to share resources in the next chapter. Coordinate when resources are sharedIn following chapters, we will do it. Now we just use a final callback instead of a return valuefunction add_item_to_cart(name, price, quant) { cart = add_item(cart, name, price, quant); calc_cart_total(cart, update_total_dom);}function calc_cart_total(cart, callback) { var total = 0; cost_ajax(cart, function(cost) { total += cost; shipping_ajax(cart, function(shipping) { total += shipping; callback(total); // replace with a callback argument }) })}Referencegrokking simplicity /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/functional-programming/2023/04/08/isolating-timelines.html"},{"id":109,"title":"encoding","content":" MathJax.Hub.Config({ TeX: { equationNumbers: { autoNumber: \"AMS\" } } }); hljs.highlightAll(); About Me encoding IntroductionThis article describes the concept of encodings 7 bit ASCII (encoding): basic 128 characters 8 bit encodings: extensions of 7 bit ASCII Unicode (character set): put every characters in the world in a sets UTF-8 UTF-16 UTF-32Why?Given character sets, we need a way to tell computers which character to be used, so we need a character encoding standard for electronic communication such as ASCII.How?7 bit ASCII ASCII = American Standard Code for Information Interchange Why 7 bits? Computers were using 8 bits when ASCII invented, so these encodings must can be stored and had a whole bit to spare 7 bits -> 128 possible values (\\(2^7\\)) -> use numbers, 0 ~ 127, to represent characters control characters (0 ~ 31): not printable and start particular action such that 7 makes computer to beep. printable characters (32 ~ 127): printable characters such as a, 1, !, ` `, …etc Please refer to appendix for full list of 7 bit ASCII8 bit encodingsThere are more languages other than English and we use following encodings to deal with them: 8 bit single byte (256) Latin: EBCDIC Western: ISO/IEC 8859, MS-Windows, MAC OS Roman Russian related: KOI8, MIK South Asian: ISCII, TSCII, VSCII 8 bit double byte (65536) Japanese: JIS Simplified Chinese: Guobiao Traditional Chinese: Big5 Korean: KS X 1001 problem of 8 bit encodings aboveAfter switching languages, wrong strings may be showed on screen because every encodings has their own characters; for example, the same bytes: 11000000 represents different characters in ISO/IEC 8859-1 (À) and ISO/IEC 8859-2 (Ŕ). Here comes Unicode to deal with this problem.Unicode (character set)For example, As you can see, these characters map to a string with 4 numberings by hexadecimal system. Using hexadecimal system for character set does not mean it is 16 bit encoding. We can use 32 bit, 16 bit, 8 bit encoding to encode a character set; for example, UTF-8 (Unicode Transformation Format – 8-bit) uses 8 bit and up to 6 bytes to encode characters and can encode 1,112,064 valid character code points.UTF-8 (Unicode Transformation Format 8 bits)The following 4 steps show how to find UTF-8 encoding according to unicode of particular character.(step 1) UnicodeThe unicode of 啊 is u554a(step 2) Transfer to BinaryThe binary of 554a (Hexadecimal) is 101010101001010(step 3) Insert into Encoding TableGiven the UTF-8 table in appendix, we need to use the row three; that is,101010101001010 -> 0101 & 010101 & 001010 -> 11100101 10010101 10001010(step 4) transfer back to Hexadecimal System11100101 10010101 10001010 (binary) = E5 95 8A (hexadecimal) and save it.UTF-16 (Unicode Transformation Format 16 bits)Again, UTF-16 follows following 4 steps(step 1) UnicodeIf unicode of character < 10000 (in hexadecimal system), then this unicode will be stored in memory with the unicode itself; for example, unicode of 啊 (u554a) will be stored in memory with 55 and then 4a in big-endian and 4a and then 55 in little-endian.If unicode of character > 10000 (in hexadecimal system), then go on the following steps:(step 2) Unicode minus 1000010A6F (Hexadecimal) minus 10000 -> 0A6F(step 3) Transfer to Binary0A6F -> 000000101001101111(step 4) Insert into Encoding TableGiven the UTF-16 table in appendix00 00000010 10 01101111 -> insert into 110110yy yyyyyyyy 110111xx xxxxxxxx -> 11011000 00000010 11011110 01101111(step 5) transfer back to Hexadecimal System11011000 00000010 11011110 01101111 (binary) -> D802DE6F (hexadecimal) and save it.UTF-32 (Unicode Transformation Format 32 bits)Because encoding of 32 bit can save 2^32 (4294967296) characters, we can directly save the unicode in memory.What?UTF-8 dominates the web page world image source: wiki/UTF-8 Use Unicode -> UTF-8, UTF-16, UTF-32 basic ASCII use 8 bits -> UTF-8 wins Endian issues -> UTF-8 winsEndian issuesGiven Endianness, the same Unicode may have different results in UTF-16 and UTF-32 because computers need to deal with the order of multiple bytes in these encodings; for example,Unicode, U+554a comes and we need to tell computer to read it in order 55 and then 4a (big-endian) or 4a and then 55 (little-endian).UTF-8 does not have this kind of issue.self-made character encodingSteps: define a character set -> replicate encoding -> define mapping to Unicode define character set image source: https://www.youtube.com/watch?v=9PA6twS9Oq4 replicate encoding image source: https://www.youtube.com/watch?v=9PA6twS9Oq4 define mapping to Unicode image source: https://www.youtube.com/watch?v=9PA6twS9Oq4some other notesutf-8 in MySQL actually is not UTF-8 because it only support up to 3 bytes. utf8mb4 in MySQL is UTF-8 because it support up to 4 bytes.Appendixthe concept of bits most basic unit of digital communications possible value: 1 or 0 example of 8 bit: 01011011 in decimal system (10 進位): 01011011 = 91 in hexadecimal system (16 進位): 01011011 = 5Bencoding rule in 7-bit ASCIIfull list of 7-bit ASCIIlist of 8-bit encodingsThe encoding rule are case by case in each 8-bit encoding and please refer to common character encodings in wiki.UTF-8 Number of bytes First code point Last code point Byte 1 Byte 2 Byte 3 Byte 4 Byte 5 Byte 6 1 U+0000 (0) U+007F (127) 0xxxxxxx (2^7)           2 U+0080 (128) U+07FF (2047) 110xxxxx (2^5) 10xxxxxx (2^6)         3 U+0800 (2048) U+FFFF (65535) 1110xxxx (2^4) 10xxxxxx (2^6) 10xxxxxx (2^6)       4 U+10000 (65536) U+1FFFFF (2097151) 11110xxx (2^3) 10xxxxxx (2^6) 10xxxxxx (2^6) 10xxxxxx (2^6)     5 U+200000 (2097152) U+3FFFFFF (67108863) 111110xx (2^2) 10xxxxxx (2^6) 10xxxxxx (2^6) 10xxxxxx (2^6) 10xxxxxx (2^6)   6 U+4000000 (67108864) U+7FFFFFFF (2147483647) 1111110x (2^1) 10xxxxxx (2^6) 10xxxxxx (2^6) 10xxxxxx (2^6) 10xxxxxx (2^6) 10xxxxxx (2^6) 2^7 = 128 2^11 = 2048 2^16 = 65536 2^21 = 2097152 2^26 = 67108864 2^31 = 2147483648ReferenceThe Absolute Minimum Every Software Developer Absolutely, Positively Must Know About Unicode and Character Sets (No Excuses!)ASCII TableASCIIASCII 控制字符(美國標準資訊交換標準碼)3 Steps to Fix Encoding Problems in Ruby[JA] Dive into Encoding / Mari Imaizumi @ima1zumiCharacter encodingDouble-byte character set fundamentalsUnicode character encodingUNICODEA Rubyist’s Introduction to Character Encoding, Unicode and UTF-8What are Double-Byte, Single-Byte, and Multi-Byte Encodings?BitUTF-8進位換算Unicode、UTF-8、UTF-16，終於懂了 /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/mindset/presentation/2022/07/08/encoding.html"},{"id":117,"title":"Childhood Trauma On Adult Mental Health","content":" hljs.highlightAll(); About Me Childhood Trauma On Adult Mental Health Introduction Childhood trauma: Experiences of abuse, neglect, or other adverse experiences that occur during childhood Long-term effects on an individual’s mental health: Research has shown that childhood trauma can lead to a range of negative outcomes in adulthood, including mental health problems, such as anxiety, depression, and post-traumatic stress disorder (PTSD), as well as substance abuse, self-harm, and suicidal behavior. These effects can be influenced by a variety of factors, including the severity of the trauma, the individual’s age at the time of the trauma, the length of time the trauma occurred, and the availability of supportive relationships and resources.Why?We can better identify and address the needs of those who have experienced trauma, and develop effective interventions to support their recovery.How?Results from childhood trauma Post-traumatic stress disorder (PTSD): Childhood trauma can lead to the development of PTSD in adulthood, which is characterized by flashbacks, nightmares, and intense feelings of fear and anxiety. Depression: Individuals who have experienced childhood trauma may be more susceptible to developing depression in adulthood. This may be due to a combination of genetic, environmental, and psychological factors. Anxiety disorders: Anxiety disorders, such as generalized anxiety disorder and panic disorder, are also common among adults who have experienced childhood trauma. This may be due to a heightened sense of fear and anxiety, as well as a lack of coping skills. Substance abuse: Childhood trauma can increase the risk of substance abuse in adulthood, as individuals may turn to drugs or alcohol as a way to cope with their emotions and feelings of distress. Borderline personality disorder (BPD): Childhood trauma has been linked to the development of BPD, which is characterized by unstable moods, relationships, and self-image. Self-harm and suicidal behavior: Individuals who have experienced childhood trauma may be more likely to engage in self-harm or suicidal behavior in adulthood, as a way to cope with their emotions and feelings of distress.Ok, I think I have childhood traumaWhat?TherapyTherapy can provide a safe and supportive environment for individuals to explore their feelings and experiences related to the trauma. cognitive-behavioral therapy (CBT), which focuses on changing negative thought patterns eye movement desensitization and reprocessing (EMDR), which can help individuals process and cope with traumatic memoriesSupport networkIt can be helpful to connect with supportive friends, family members, or community groups who can offer emotional support and understanding. Joining a support group for survivors of trauma can also be beneficial.Practice self-careEngaging in activities that promote physical and emotional well-being, such as exercise, meditation, and relaxation techniques, can help individuals cope with the effects of trauma and manage stress.Educate yourselfLearning about the effects of trauma and how it can impact your life can help you gain a better understanding of your experiences and develop effective coping strategies.Practice mindfulnessPracticing mindfulness techniques, such as deep breathing or body scanning, can help individuals stay present in the moment and reduce anxiety and stress.Reference /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/psychology/2023/03/26/childhood-trauma-on-adult-mental-health.html"},{"id":132,"title":"Search Bar","content":" hljs.highlightAll(); About Me Search Bar IntroductionThis article describes how to create search bar in react.Why?I want to create one in my blog.How?initimport React, { useState } from \"react\";function SearchBar({ items }) { const [query, setQuery] = useState(\"\"); function handleInputChange(event) { setQuery(event.target.value); } function searchItems() { return items.filter(item => { const itemText = `${item.title} ${item.description}`.toLowerCase(); const searchText = query.toLowerCase(); return itemText.includes(searchText); // the core }); } const searchResults = searchItems(); return ( <div> <input type=\"text\" placeholder=\"Search...\" value={query} onChange={handleInputChange} /> <ul> {searchResults.map(item => ( <li key={item.id}> <h3>{item.title}</h3> <p>{item.description}</p> </li> ))} </ul> </div> );}export default SearchBar;and use the search bar as follow:import React from \"react\";import SearchBar from \"./SearchBar\";const items = [ { id: 1, title: \"Item 1\", description: \"This is the first item\" }, { id: 2, title: \"Item 2\", description: \"This is the second item\" }, { id: 3, title: \"Item 3\", description: \"This is the third item\" }];function App() { return ( <div> <SearchBar items={items} /> </div> );}export default App;As typing in the search bar, the list of items will be filtered based on search query.Is it appropriate to get all the items and filter them on frontend? Given the computation power are the same on both frontend and backend, the only difference will be whether this query is business logic that we do not want users know.What?ReferenceWhy: asking for the reason or purpose behind something.How: asking for the method or process of doing something.What: asking for information about a specific thing or object. /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/react/2023/04/15/search-bar.html"},{"id":121,"title":"Database","content":" hljs.highlightAll(); About Me Database IntroductionThere are several topics in rails related to database: Database migrations: Manage changes to the database schema. Migrations are written in Ruby and allow you to make changes to the database schema while keeping track of the changes over time. Associations: Allow you to define relationships between different database tables. For example, a user may have many blog posts, and each blog post belongs to a user. Querying: Rails provides a query interface called ActiveRecord::Relation, which allows you to build and execute database queries. This interface is based on a fluent API, which makes it easy to chain query methods and build complex queries. Indexing: Indexes are used to speed up database queries by creating a data structure that allows for fast lookups. In Rails, you can create indexes on specific columns in your database tables to optimize query performance. Validations: Validations allow you to define constraints on the data stored in your database. For example, you can validate that a user’s email address is unique or that a password meets certain complexity requirements.Why?Because web application framework relies heavily on databases to store and manage application data. Databases play a critical role in storing, managing, and retrieving data that is used by web applications. They provide a structured way to store and organize data, allowing web applications to scale and handle large amounts of data efficiently. Learning how to work with databases in Ruby on Rails is essential for building effective web applications that can handle large amounts of data and scale to meet the needs of users. A strong understanding of database concepts and best practices will enable developers to design and build robust, reliable, and scalable Rails applications.How?MigrationCreate create_table - creates a new database tableTo add model, Article with columns: title, content, is_onlinerails g model Article title content:text is_online:boolean To remove invoke while generating, --no-helper --no-assets --no-controller-specs --no-view-specs or# application.rbconfig.generators.assets = falseconfig.generators.helper = falseThen in db/migrate, timestamp_create_articles.rb:class CreateArticles < ActiveRecord::Migration[6.1] def change create_table :articles do |t| t.string :title t.text :content t.boolean :is_online t.timestamps end end end timestamp for recording :created_at, :updated_atUpdate rename_table - renames an existing database table add_column - adds a new column to an existing database table remove_column - removes a column from an existing database table rename_column - renames a column in an existing database table change_column - changes the data type or options of a column in an existing database table add_index - adds a new index to a database table remove_index - removes an existing index from a database table add_reference - adds a foreign key reference to an existing database table remove_reference - removes a foreign key reference from an existing database table change_table - allows you to make multiple changes to an existing database table in a single migration reversible - creates a reversible migration that can be rolled back up - defines the changes to be made to the database schema when the migration is run down - defines how to revert the changes made by the migrationA typical migration file:class AddAgeToUsers < ActiveRecord::Migration[6.0] def up add_column :users, :age, :integer end def down remove_column :users, :age endend Ruby file that contains two methods: up and down Up method is used to define the changes you want to make to the database schema Down method is used to define how to undo those changes Migration is like version control of database Any changes related to database schema will be recorded in migrations with Ruby DSL * The summary of the changes of migration is in schema.rbTo run migration:rails db:migrateTo undo:rails db:rollback STEP=3However, the Rollback method is not recommended. We should use another migration to modify database to what we want; for example, if we want to add a column to an existed table, we can add another generate migrationDelete drop_table - drops an existing database tableTo delete migration files,rails d migration MigrationNameNotice! please do it only before db:migrateOther execute - executes a custom SQL statementIf we want to know which migration ever be executed$ rails db:migrate:statusAssociationsWith the add_reference, we can add association to two tables. One-to-many association between a User model and a Post model using migration files:class AddUserRefToPosts < ActiveRecord::Migration[6.0] def change add_reference :posts, :user, null: false, foreign_key: true endend add_reference adds a new column called user_id to the posts table :user tells Rails this column should be a foreign key reference to the User model null: false ensures that every post must belong to a user foreign_key: true enforces referential integrityBy using migration files to establish associations between models, you can ensure that your database schema is consistent and follows best practices for data modeling. You can also take advantage of Rails’ powerful query interface to query data across multiple tables using associations.Remember to declare has_many and belongs_to on User and Postquerying Time is money, how to query fast plays key role In rails, we use active record to query and it uses ORM active record scopes: help you DRY up your code and make it more readable by abstracting away common conditions associations: methods like has_many, belongs_to, and has_and_belongs_to_many to define associations, and then use these associations in your queries Arel is a SQL AST (Abstract Syntax Tree) manager that is used internally by Active Record. Arel provides a powerful DSL (Domain-Specific Language) that you can use to construct complex SQL queries. SQL: Rails also provides methods to execute SQL queries directly Performance: You can use tools like the includes method to eager load associations and reduce the number of database queries, and the joins method to perform more efficient SQL joins. Debugging queries: Rails provides several tools to help you debug queries, including the to_sql method, which lets you see the SQL generated by your Active Record queries, and the explain method, which shows you the execution plan for a query.performance Avoid N+1 queries: One of the most common performance issues in Rails is the N+1 query problem. This occurs when you load a collection of records, and then load a related association for each record individually. To avoid this problem, use the includes method to eagerly load associations; for example, instead of doing:@posts = Post.all@posts.each do |post| puts post.comments.countendYou can do:@posts = Post.includes(:comments).all@posts.each do |post| puts post.comments.countendThis will load all the comments for all the posts in a single query, rather than issuing a separate query for each post.We can set condition with chaining as follow:@posts = Post.includes(comments: [:user]).where(comments: { approved: true }, users: { admin: true })And include = preload + eager_load: to be continued Use indexes: Indexes can significantly improve the performance of your queries by reducing the amount of time it takes to find and retrieve records. Use the add_index method in your migrations to add indexes to your database tables. For example, to add an index to the email column in a users table, you can do:class AddIndexToUsersEmail < ActiveRecord::Migration[6.0] def change add_index :users, :email endendOnce added an index to a table, use the newly created index in your queries to improve their performance.users = User.where(email: 'john@example.com')This query will use the index on the email column to quickly find the matching record(s) in the users table.The SQL script of querying remains the same asSELECT * FROM users WHERE email = 'john@example.com';The speed of a SQL query can be faster after adding an index because an index provides a more efficient way for MySQL to locate the rows that match the conditions in the query. MySQL will use the index on the email column to quickly locate the rows that match the condition email = ‘john@example.com’. MySQL will read only the index pages that contain the relevant data, and retrieve the matching rows from the table using the row ID stored in the index. This is much faster than scanning every row in the users table to find the matching rows.Index PageAn index in MySQL consists of one or more index pages, which are stored separately from the data pages that contain the actual table rows. Each index page contains a subset of the index data, and includes information about the location of the corresponding rows in the data pages.The example:Index page 1:--------------email | row ID---------------------john@example.com | 1jane@example.com | 2jim@example.com | 3...Index page 2:--------------email | row ID---------------------kim@example.com | 4kevin@example.com | 5katie@example.com | 6...Each index page contains a list of email addresses and their corresponding row IDs.In the SELECT,SELECT * FROM users WHERE email = 'john@example.com';MySQL will read the index pages for the email column, and locate the row ID for the user with email address “john@example.com”. MySQL will then retrieve the corresponding row from the data pages using the row ID. The use of the index pages can make this query much faster than if MySQL had to scan the entire table to find the user with email address “john@example.com”. Use database-specific features: Different databases have different features and optimizations that you can take advantage of. For example, PostgreSQL has a feature called partial indexes that can improve the performance of queries that only need to retrieve a subset of records. Use caching: Caching can be a powerful tool to improve the performance of your queries. Rails provides several caching mechanisms, including fragment caching, action caching, and page caching. Use caching judiciously, as it can also introduce its own set of challenges. Use pluck and select: When you only need a specific set of attributes from a collection of records, use the pluck or select methods to retrieve only those attributes, rather than retrieving the entire record.For example, instead of doing:@users = User.all@user_emails = @users.map(&:email)do@user_emails = User.pluck(:email)This will retrieve only the email attribute for all the users, rather than retrieving the entire user record.These are just a few tips to help you optimize the performance of your queries in Rails. There are many other factors to consider, such as database tuning, query optimization, and server configuration. It’s important to carefully monitor and profile your application to identify performance bottlenecks and make informed decisions about how to optimize your queries.sub querySchema A representation of your database’s structure defined in a file called schema.rb in the db directory As more models and migrations, the schema file is updated to reflect the changes example:ActiveRecord::Schema.define(version: 2022_01_01_000000) do create_table \"users\", force: :cascade do |t| t.string \"email\" t.string \"password_digest\" t.timestamps end create_table \"posts\", force: :cascade do |t| t.string \"title\" t.text \"content\" t.references \"user\", foreign_key: true t.timestamps endendWhen you run migrations in your Rails application, they are used to modify the database schema. Each migration corresponds to a specific change to the schema, such as adding a new table or column, renaming a table, or modifying a column’s data type. When you run rails db:migrate, Rails applies all of the migrations that haven’t been run yet to bring your database schema up to date with your application’s current state.What?I ame going to have real world example in queryingReference /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/rails/2023/03/28/database.html"},{"id":131,"title":"Routes","content":" hljs.highlightAll(); About Me Routes Introductionquick explanationWhy?focus on why we need itHow?base urlcreate Root/.env as follow:#.env fileREACT_APP_SECRET_NAME=secretvaluehere123backend_url = xxxnavbar with router Create a component, Navbar in components/navbar.jsx Install library npm install react-router-dom Use BrowserRouter, Routes, Route, and Link components to render different components based on the current URL path. import { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\"; function Navbar() { return ( <Router> <nav> <ul> <li><Link to=\"/home\">Home</Link></li> <li><Link to=\"/twitter_api\">Twitter Api</Link></li> </ul> </nav> <div> <Routes> <Route path=\"/home\" element={<Home />}/> <Route path=\"/twitter_api\" element={<TwitterApi />}/> </Routes> </div> </Router> )} export default Navbar If you want to use anchor tag import { HashLink as Link } from 'react-router-hash-link';<Link to=\"/pathLink#yourAnchorTag\">Your link text</Link> redirectWe can just use vanilla javascriptwindow.location.href = 'path'or with hook, useNavigateimport React from 'react';import { useNavigate } from \"react-router-dom\";function LoginLayout() { let navigate = useNavigate(); const routeChange = () =>{ let path = `newPath`; navigate(path); } return ( <div className=\"app flex-row align-items-center\"> <Container> ... <Button color=\"primary\" className=\"px-4\" onClick={routeChange} > Login </Button> ... </Container> </div> );}}What?give real world exampletestReferenceWhy: asking for the reason or purpose behind something.How: asking for the method or process of doing something.What: asking for information about a specific thing or object. /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/react/2023/04/21/routes.html"},{"id":124,"title":"Routes","content":" hljs.highlightAll(); About Me Routes IntroductionWhyHowbasicREST means Representational State Transfer. The benefit of RESTful API is unity. All programmers have the consensus to write it in the same form. The direct implementation in rails is to use resources method as follow:rails routesthe results: (8 routes related to users)We can use only or except to set the only routes we needRails.application.routes.draw do resources :products, only: [:index, :show] # or the following codes # resources :products, except: [:new, :create, :edit, :update, :destroy]endwe can use collection and member to add sub layer for more manipulation; for example,collectionRails.application.routes.draw do resources :orders do collection do get :cancelled end end endThen the routes:There is one more route: cancelled_ordersmembermember vs collectionmember: xxx/id/xxxcollection: xxx/xxxspecify routes namewe can specify routes name for administration; for example asdfadfaewRails.application.routes.draw do namespace :admin, path: \"asdfadfaew\" do resources :products endendThen the route path would be as follow:There is will be /asdfadfaew/… routesAfter the route, let’s start to explore controller.the best way to arrange routesskiproutes & Domain Specific Language (DSL)skipReference為你自己學 Ruby on Rails 高見龍 /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/rails/2022/02/05/Routes.html"},{"id":119,"title":"Parenting Style Child Development","content":" hljs.highlightAll(); About Me Parenting Style Child Development IntroductionHow different types of parenting styles impact a child’s emotional, social, and cognitive development. Here are some steps you could take to gain a deeper understanding of this topic.Why?focus on why we need itHow?Parenting styles Authoritative High levels of warmth and support, combined with moderate levels of control and discipline Gold standard of parenting Associated with positive outcomes for children in multiple areas of development Tend to be responsive to their child’s emotional needs, communicate openly and honestly with their child, and set clear expectations and boundaries for behavior They provide guidance and support, but also allow their child to make decisions and learn from their mistakes They use positive reinforcement to reward good behavior and may also use consequences or punishments for misbehavior, but they do so in a calm and consistent manner authoritarian (my parents) High levels of control and discipline, combined with low levels of warmth and support. This parenting style is often described as strict, rigid, and demanding. Be less responsive to their child’s emotional needs and less likely to communicate openly and honestly with their child. They often expect unquestioned obedience from their child and may use physical punishment or verbal abuse to enforce their rules. permissive Characterized by low levels of control and discipline, combined with high levels of warmth and support. This parenting style is often described as lenient, indulgent, or laissez-faire. Permissive parents tend to have few rules and regulations for their children’s behavior and may be reluctant to enforce consequences or discipline for misbehavior. They often provide a lot of emotional support and warmth to their children but may struggle to set limits or boundaries. Permissive parents may avoid conflict with their child and may be less likely to demand obedience or responsibility from their child. uninvolved Neglectful parenting, is a parenting style that is characterized by low levels of both control and support. This parenting style is often described as neglectful, indifferent, or detached Be emotionally distant from their children and may provide little to no support, guidance, or involvement in their child’s life. They may neglect their child’s basic needs for food, clothing, and shelter, and may show little interest in their child’s activities or well-being. Uninvolved parents may be dealing with personal issues such as mental illness, substance abuse, or poverty, that make it difficult for them to provide adequate care and attention to their children. Developmental stages Authoritative parenting: Children of authoritative parents tend to have higher self-esteem, better emotional regulation, and higher academic achievement. They also tend to be more socially competent and have better relationships with their peers. These effects are seen across various stages of child development. Authoritarian parenting: Children of authoritarian parents tend to have lower self-esteem, poorer emotional regulation, and lower academic achievement. They may also exhibit more aggressive behavior and have lower levels of social competence. These effects may be particularly pronounced in early childhood. Permissive parenting: Children of permissive parents may have higher self-esteem and be more creative and independent, but they may also struggle with impulse control, have difficulty following rules, and exhibit more problem behaviors. These effects may be more prominent in adolescence. Uninvolved parenting: Children of uninvolved parents tend to have lower self-esteem, poorer emotional regulation, and lower academic achievement. They may also exhibit more behavior problems and have lower levels of social competence. These effects may be seen across various stages of child development, but may be particularly pronounced in early childhood.Implications Supporting parents: By understanding the effects of parenting styles, professionals can help parents become more effective in their parenting. For example, parents who are authoritarian might benefit from learning more about authoritative parenting strategies that are more effective in promoting positive child outcomes. Developing interventions: Knowledge of the effects of different parenting styles can be used to develop interventions aimed at improving parenting practices and promoting positive child outcomes. For example, interventions that focus on teaching parents how to use positive parenting strategies such as positive reinforcement, setting clear limits and expectations, and encouraging autonomy and independence can improve child outcomes. Promoting public awareness: Public awareness campaigns can be developed to increase awareness about the importance of parenting style in child development. This can help parents to recognize the importance of adopting more effective parenting practices and seeking support when needed. Informing policy: Knowledge of the effects of parenting styles on child development can inform policy decisions related to child welfare, family support, and education. For example, policies that promote positive parenting practices and provide support to parents can lead to better outcomes for children and families.Paper conclusions Effects of authoritative parental control on child behavior Author: Baumrind, D. (1966) Journal: Child Development, 37(4), 887-907 Summary: This influential paper by Diana Baumrind introduced the concept of parenting styles and proposed a typology based on two dimensions: parental responsiveness (warmth, support, and acceptance) and parental demandingness (control, structure, and discipline). Baumrind argued that authoritative parenting, which combines high levels of responsiveness and demandingness, is the most effective parenting style for promoting positive child outcomes, such as high self-esteem, self-reliance, and academic achievement. The paper is based on a series of studies that involved observing parent-child interactions and assessing child behavior. Socialization in the context of the family: Parent-child interaction. In P. H. Mussen & E. M. Hetherington (Eds.) Author: Maccoby, E. E., & Martin, J. A. (1983) Textbook: Handbook of child psychology: Vol. 4. Socialization, personality, and social development (4th ed., pp. 1-101). Wiley Summary: This comprehensive review paper by Eleanor Maccoby and John Martin provides a broad overview of research on parent-child interaction and its role in child socialization. The paper covers a range of topics, including the effects of different parenting styles on child outcomes, the role of parent gender and culture in parenting, and the processes involved in socialization. The authors argue that parenting styles are an important factor in shaping child behavior and development, but that the effects of parenting are complex and depend on a range of factors, such as child temperament, family context, and cultural values. What? Parent education programs: Parent education programs can be developed and implemented to help parents understand the different parenting styles and the effects they can have on child development. These programs can provide parents with strategies and techniques for promoting positive outcomes in their children, regardless of their parenting style. Family support services: Family support services can be developed and implemented to provide families with the resources they need to promote positive child outcomes. These services can include counseling, parenting classes, home visits, and other types of support that can help families improve their parenting practices. School-based interventions: Interventions can be developed and implemented in schools to promote positive parenting practices and support child development. For example, schools can offer parent-teacher conferences, workshops on positive parenting, and other types of support to help parents promote positive outcomes in their children. Policy changes: Policy changes can be implemented at the local, state, or national level to promote positive parenting practices and support child development. For example, policies can be developed that support parental leave, affordable child care, and other types of support that can help parents promote positive outcomes in their children.ReferenceBaumrind, D. (1966). Effects of authoritative parental control on child behavior. Child Development, 37(4), 887-907.Maccoby, E. E., & Martin, J. A. (1983). Socialization in the context of the family: Parent-child interaction. In P. H. Mussen & E. M. Hetherington (Eds.), Handbook of child psychology: Vol. 4. Socialization, personality, and social development (4th ed., pp. 1-101). Wiley. /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/psychology/2023/03/25/parenting-style-child-development.html"},{"id":123,"title":"Controller","content":" hljs.highlightAll(); About Me Controller IntroductionController controls the data flow of an app.WhyWith controller, we can move all the logics to model and only show necessary information on view.HowCreate one Corresponding RoutesGiven in config/routes.rb,Rails.application.routes.draw do get \"/hello_world\", to: \"pages#hello\" resources :posts resources :users endTake a look at get \"/hello_world\", to: \"pages#hello\". This route means if user input the url \"/hello_world\", (which is a GET), it will activate method, hello in page controller. generate default controllerrun the following code in terminal$ rails g controller pagesthe creation is as followThen there would be pages_controller.rbAs you can see, the convention of naming in rails: pages_controller.rb matches PagesControllers. rollback $ rails destroy controller pages generate customized controllergenerate controller with$ rails g controller pages --no-helper --no-assets --no-controller-specs --no-view-specsor in application.rb, add# turn off assets, helper, view and use rspec while generating controllersconfig.generators.assets = falseconfig.generators.helper = falseconfig.generators.template_engine = falseconfig.generators.test_framework :rspec Corresponding Method in ControllerIn app/controllers/pages_controller.rb,class PagesController < ApplicationController def hello render plain: \"<h1>Hello World!</h1>\" end endThen input the site: http://127.0.0.1:3000/hello_world we can get a website with html: <h1> Hello World! </h1>module methods redirect_to example class UsersController < ApplicationController def create @user = User.new(user_params) if @user.save redirect_to root_path, notice: 'User was successfully created.' else render :new end end private def user_params params.require(:user).permit(:name, :email, :password) endend redirect_back example class ProductsController < ApplicationController def create @product = Product.new(product_params) if @product.save redirect_to products_path, notice: 'Product was successfully created.' else redirect_back fallback_location: products_path, alert: 'Product creation failed.' end end private def product_params params.require(:product).permit(:name, :description, :price) endend Reference為你自己學 Ruby on Rails 高見龍 /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/rails/2022/02/06/Controller.html"},{"id":127,"title":"Api Mode","content":" hljs.highlightAll(); About Me Api Mode IntroductionThis article describes how to build api with rails. Please refer to xxx for the concept of api. The steps: start project API for internal data API for external data CORS (TBC)Why?With API mode, we can seperate backend and frontend.How?start projectCreate project withrails new Project_Name --apiAPI for internal dataWith two model, User and Post, use API post to authenticate user and then GET the list of posts from server and POST to create post. User, Post authentication encrypt PostmanUser, PostGenerate models withrails g model User name email password_digestrails g model Post title body:textrails db:migrateIn app_name/config/routes.rb:Rails.application.routes.draw do resources :users resources :postsendAdd controllers/posts_controller.rb:class PostsController < ActionController::API def index render json: Post.all endendauthenticationYou now can get the list of posts, which is wrong because we should let only authenticated users to CRUD the posts. (Refer to 2022-08-17-(prerequisite)-authentication.md for concepts) The desired flow: Visitor can post email and password to signup and generate token User can post email and password to login User can get list of data with tokenWe can actually store token in DB and once user logged in, we return this token for user authentication.Add routes,Rails.application.routes.draw do post \"/login\", to: \"sessions#login\" post \"/signup\", to: \"sessions#signup\"endAdd controllers/sessions_controller.rb:class SessionsController < ApplicationController def signup user = User.new(email: params[:email], password_digest: password[:password]) if user.save token = encode_user_data({ user_data: user.id }) render json: { token: token } else render json: { message: \"invalid credentials\" } end end def login user = User.find_by(email: params[:email]) if user && user.password_digest == params[:password] token = encode_user_data({ user_data: user.id }) render json: { token: token } else render json: { message: \"invalid credentials\" } end endendIn ApplicationControllerclass ApplicationController < ActionController::API SECRET = ENV['JWT_SECRET'] def encode_user_data(payload) JWT.encode payload, SECRET, 'HS256' end def authenticate decode_data = decode_user_data(request.headers[\"token\"]) user_data = decode_data[0][\"user_id\"] unless !decode_data user = User.find(user_data&.id) if user return true else render json: { message: \"invalid credentials\" } end end private def decode_user_data(token) JWT.decode token, SECRET, true, { algorithm: \"HS256\" } endendTo use JWT, add gemgem 'jwt'In gitignored file, config/environment.env and addJWT_SECRET = 'yourfavoritesecret'To use ENV['JWT_SECRET'], add gemgem 'dotenv-rails', require: 'dotenv/rails-now'Add controllers/posts_controller.rb:class PostsController < ApplicationController before_action :authenticate ...endand add token in header of GET api.encryptIn the authentication section, the user can login with password. We can use bcrypt to enforce safer mechanism. (Refer to 2022-08-30-hashing-algorithms.md)(TBC)in gemfile, addgem 'bcrypt', '~> 3.1.7'and then run bundle install then add has_secure_password inclass User < ApplicationRecord has_secure_passwordendThe meaning has_secure_passwordpostman setup environment setup APIsmy localhost: variable value host http://localhost:3000 my requests:GET /postsAPI for external dataTry to connect twitter api with gem, twitter settings omniauth CORS api test get and posterror handlingdef create @user = User.new(user_params) if @user.save render json: @user else render json: { errors: @user.errors.full_messages }, status: :unprocessable_entity endendsettingsPlease get the credentials by following the step by step in Getting started from twitter We can regenerate them in developer portal.We also need to defind callback URLs in auth settingsomniauthAdd gemsgem 'omniauth-twitter' # to connect twitter apigem 'omniauth-rails_csrf_protection' # fix authenticity errorCreate initializers/omniauth.rb withRails.application.config.middleware.use OmniAuth::Builder do provider :twitter, ENV['TWITTER_KEY'], ENV['TWITTER_SECRET']endIn config/application.rb,# For Omniauthconfig.session_store :cookie_store, key: '_world_session_#{Rails.env}'config.middleware.use ActionDispatch::Cookies # Required for all session managementconfig.middleware.use config.session_store, config.session_optionsBy inspecting gem 'omniauth-rails_csrf_protection', InvalidAuthenticityToken raised by rails_csrf_protection -> verified_request? = false -> authenticity_token or session[:_csrf_token] is not equal to X-CSRF-Token in HTTP headerSo when render landing page, we give csrf token as follow:In frontend, (take react as example)...useEffect(() => { fetch('http://localhost:3000').then((response) => { console.log(response) })});...In backend,# controllers/application_controller.rbclass ApplicationController < ActionController::API include ActionController::RequestForgeryProtection include ActionController::Cookies protect_from_forgery with: :exception before_action :set_csrf_cookie def cookie \"ok\" end def set_csrf_cookie cookies['CSRF-Token'] = { value: form_authenticity_token, domain: :all } endend# application.rbconfig.middleware.use ActionDispatch::Cookiesconfig.middleware.use ActionDispatch::Session::CookieStore# initializers/cors.rbRails.application.config.action_controller.forgery_protection_origin_check = falseRails.application.config.hosts << /[a-z0-9]+\\.c9users\\.io/Rails.application.config.middleware.insert_before 0, Rack::Cors do allow do origins '*' resource '*', headers: :any, methods: [:get, :post, :put, :patch, :delete, :options, :head] endend# routes.rbroot to: \"application#cookie\"The result,CORSWhat is CORS?TBCsolutionIn rails 6, we can solve CORS as follow: uncomment gem 'rack-cors' in Gemfile.rb and then bundle install go to config/initializers and uncomment code in cors.rb set origins 'example.com' to origins '*'Now, test it with postman, TBCapiadd gem gem 'twitter'WhatThere will be two examples: API for internal data API for external dataExample of API for internal data(TBC), should put deployed bcakend API for demo.Put how to post and get with postman settingsExample of API for external data(TBC), should put deployed bcakend API for demo.interlude (render, Jbuilder)(TBC)ReferenceRails: How does the respond_to block work?https://railsbook.tw/Token-based AuthenticationUsing Rails for API-only ApplicationsDeploying a Rails API/React App with Sessions and CSRF TokensRuby on Rails API Simple authentication with JWTHow To Use Environment Variables in RubyHow to Manage Environment Variables in RailsRails for Beginners Part 33: Twitter APIRails for Beginners Part 23: Rails CredentialsGetting startedOmniauth using a Rails API Only App?Ruby on Rails CSRF Protection with React.js & WebpackerRails API design without disabling CSRF protectionBest way to debug third-party gems in rubySetting up Session Cookies in a Rails API with Javascript front end是誰在哈囉? 如何搞定 SPA 與 API Server 的登入驗證 /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/rails/2021/03/22/api-mode.html"},{"id":130,"title":"View","content":" hljs.highlightAll(); About Me View Introductionto be continuedHowView HelperTake a look at following<tr> <td> <% if gender == 1 %> male <% elsif gender == 0 %> female <% else %> anything <% end %> </td> </tr>There is an if else logic in it. However, because view should just render template, the logic should not in view, so in rails, there is app/helpers to solve this problem.In helper, we can define a functiondef user_gender(gender) if gender == 1 return \"male\" elsif gender == 0 return \"female\" else return \"anything\" endendThen the logic in html can be written as<tr> <td> <%= user_gender(gender) %> </td></tr>CSRF (Cross-Site Request Forgery)What is CSRF?wiki: Cross-site request forgery, also known as one-click attack or session riding and abbreviated as CSRF or XSRF, is a type of malicious exploit of a website where unauthorized commands are submitted from a user that the web application trustsFor example, after a user login a webpage, the information would be saved in cookie then we can induce users to click a website we built to send malicious command to the webpage through the cookie. (這個例子還不確定)How to prevent it in rails?In application_controller.rb,protect_from_forgeryHow rails find layout for specific method?In rails, if the controller name is xxxController, then it will try to find xxx.html.erb in app/views/layouts first and then go to application.html.erb.Specific html in ControllerIf I want it to render specific html, xxx, in Controller, I can do the following codeclass CandidatesController < ApplicationController layout \"xxx\" ... endSpecific html in ActionIf I want it to render specific html, xxx, in Action, I can do the following codeclass CandidatesController < ApplicationController def index @candidates = Candidate.all render layout: \"xxx\" end ...endWhat if I want multiple yield in the same file?To have multiple yield in one html, you need to have tag for rails identifying which yield to fill in. For example, when I call main page, by default, rails will go to layout to find application.html.erb. Then it detects yield, so it go to the views/xxx/yyy.html.erb to find what to be filled into yield if we call a method in webpage xxx/yyy. To help rails to identify which yield to choose, in yyy.html.erb... <title><%= yield :test %></title> ... <%= yield %>and in application.html.erb, there are two method: provide and content_forprovide<% provide :test, \"Hello\" %>...It will fill Hello into yield :test, and fill the rest of code into yieldcontent_for<% content_for :test do %> Hello <% end %>...It will fill Hello to yield :test and fill the rest of code into yieldPartial RenderIn rails,<% render \"form\" %>means it will find _form.html.erb file in the same directory and put the content into the place of render. Partial render fits the reusage of a html.For example, if the file,_form.html.erb:<%= simple_form_for(candidate) do |f| %> <%= f.input :name, label: \"name\" %> <%= f.input :age, label: \"age\" %> <%= f.input :party, label: \"party\" %> <%= f.input :politics, label: \"presentation\" %> <%= f.submit %> <% end %>Then, in edit.html.erb<h1>Edit Candidate</h1> <%= render \"form\", candidate: @candidate %> <br /> <%= link_to 'back to candidates list', candidates_path %>it will put the codes of _form.html.erb on the place of render in edit.html.erb and input the value of @candidate to candidate .Why candidate: @candidate ?Because _form.html.erb as reusable file, it should not take any responsible to find the variable @candidate rather being fed value to candidate with @candidate.Reference:為你自己學 Ruby on Rails 高見龍CSRF-wikirails-security /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/rails/2021/03/02/view.html"},{"id":129,"title":"Model","content":" hljs.highlightAll(); About Me Model Introduction A model is a Ruby class that is used to represent data. Additionally, models can interact with the application’s database through a feature of Rails called Active Record An object refers to an instance of a class, which represents a single record in a database table.In this article, I am not going to research how rails code methods in model, so in how section will be basic coding examples for me to understand the concepts. Please refer to Active Record to see how rails code the default model methods.WhyWith model, we can use consistent commands to communicate with all type of databases such as MySQL, Postgresql, …etc.HowCreate OneDefine a Ruby class that inherits from the ActiveRecord::Base class. This class will represent a table in your database, and the properties of the class will map to columns in the table. Here is an example:class User < ActiveRecord::BaseendIn this example, we have defined a User class that inherits from ActiveRecord::Base. This class will represent a table called users in our database (convention), and it will have properties that map to columns in the users table.Then we can interact with database with this model: Creating a new recorduser = User.new(name: 'John', email: 'john@example.com')user.saveIn this example, we create a new User record by creating a new instance of the User class and setting its properties. We then call the save method on the instance to save it to the database. Updating a recorduser = User.find_by(name: 'John')user.email = 'new_email@example.com'user.saveIn this example, we find an existing User record by querying the database for a record with a name of ‘John’. We then update the email property of the record and save the changes to the database. Querying recordsusers = User.where(age: 18..35)In this example, we use the where method on the User class to query the database for all User records with an age between 18 and 35. The result of the query is a collection of User instances that match the criteria.relation belongs_to: Used to define a one-to-many relationship between two tables has_many: Used to define a one-to-many relationship between two tables has_one: Used to define a one-to-one relationship between two tables example: We have a User model, a Profile model, and a Post model. Each user has one profile, and each user can have many posts. Each post belongs to a user.To define these associations,class User < ApplicationRecord has_one :profile has_many :postsendclass Profile < ApplicationRecord belongs_to :userendclass Post < ApplicationRecord belongs_to :user has_one :profile, through: :user # because user has one profile and also has many postsendThis tells Rails that each User has one Profile, and that each User can have many Posts. It also tells Rails that each Profile belongs to a User, and that each Post belongs to a User. By default, Rails assumes that the posts table has a foreign key called user_id that references the id column of the users table.Access related data:@user = User.find(params[:id])@profile = @user.profile@user = User.find(params[:id])@posts = @user.posts@post = Post.find(params[:id])@user = @post.user@post = Post.find(params[:id])@profile = @post.profilevalidation Validations help ensure that the data is accurate, consistent, and secure. Built-in validation helpers presence: Validates that the specified attributes are not empty. uniqueness: Validates that the specified attributes are unique. length: Validates the length of the specified attributes. format: Validates that the specified attributes match a specified regular expression pattern. numericality: Validates that the specified attributes are numeric. code example:class User < ApplicationRecord validates :name, presence: true, length: { minimum: 2 } validates :email, presence: true, uniqueness: true, format: { with: /\\A[^@\\s]+@[^@\\s]+\\z/ } validates :age, numericality: { only_integer: true, greater_than: 0, less_than: 150 }end If any of these validations fail, Rails will prevent the model from being saved to the database and add an error message to the corresponding attribute. It’s important to note that validations only apply when creating or updating records through Active Record. If you’re updating records through SQL, validations won’t be checked. If you’re performing bulk updates, such as with update_all, validations won’t be checked either.callbackThe full life cycle of an object in rails: Initialization: The object is created in memory with default attribute values. before_validation: Called before validation occurs. Validation: The object’s attributes are validated to ensure they meet specified constraints or requirements. after_validation: Called after validation occurs. before_save: Called before the object is saved. Database write: The object’s attributes are written to the database. around_save: Called around the object save. after_save: Called after the object is saved. before_create: Called before a new record is created. around_create: Called around a new record creation. after_create: Called after a new record is created. before_update: Called before an existing record is updated. around_update: Called around an existing record update. after_update: Called after an existing record is updated. before_destroy: Called before a record is destroyed. around_destroy: Called around a record destruction. after_destroy: Called after a record is destroyed.Not all steps of the lifecycle are always executed. For example, if an object fails validation, the before_save, around_save, after_save, before_create, around_create, and after_create callbacks won’t be executed. coding exampleclass User < ApplicationRecord before_save :normalize_name after_create :send_welcome_email private def normalize_name self.name = name.downcase.titleize end def send_welcome_email UserMailer.welcome_email(self).deliver_now endendscopeScopes are defined as class methods on a model and return a relation object, which can be further chained with other query methods to narrow down the results.class Product < ApplicationRecord scope :available, -> { where(in_stock: true) } scope :priced_above, ->(price) { where('price > ?', price) }end# Retrieve all available productsProduct.available# Retrieve all products priced above $50Product.priced_above(50)# Combine scopes with other query methodsProduct.available.priced_above(50)Whatreal world exampleE-commerce application: three models Product: The Product model represents a specific item that can be sold on the website Order: The Order model represents a single order that a customer has placed on the website. LineItem: The LineItem model represents a specific item that a customer has added to their cart while shopping. A Product can have many LineItems, and a LineItem belongs to a Product and an Order. An Order can have many LineItems. settings: Product If a Product is destroyed, all its associated LineItems should be destroyed too Validation that requires name and price to be present. Order If an Order is destroyed, all its associated LineItems should be destroyed too. * Validations that require name and email to be present Callback that set the initial status of the Order to “pending” Callback to update the subtotal of the Order whenever a LineItem is saved. class Product < ApplicationRecord has_many :line_items, dependent: :destroy validates :name, :price, presence: trueendclass Order < ApplicationRecord has_many :line_items, dependent: :destroy validates :name, :email, presence: true before_create :set_order_status before_save :update_subtotal def subtotal line_items.map(&:total_price).sum end private def set_order_status self.status = 'pending' end def update_subtotal self[:subtotal] = subtotal endendclass LineItem < ApplicationRecord belongs_to :product belongs_to :order, optional: true validates :product_id, presence: true validates :quantity, numericality: { only_integer: true, greater_than: 0 } def total_price product.price * quantity endendIn the LineItem model, we define a belongs_to association with Product and Order. We also add two validations that require the product_id to be present and the quantity to be greater than zero, as well as a method that calculates the total price of the line item.With these relationships, validations, and callbacks in place, we can easily create, update, and delete products, orders, and line items in our e-commerce application.Reference為你自己學 Ruby on Rails 高見龍change vs up & downGetting Started with Rails /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/rails/2021/03/02/model.html"},{"id":133,"title":"Node Graph","content":" hljs.highlightAll(); About Me Node Graph IntroductionThis article describes how to draw node based force graph in react.Why?I want to create node plot in my blog.How?init install npm install react-force-graph-2d Basic example import { ForceGraph2D } from 'react-force-graph-2d'; const nodes = [ { id: 1, name: 'Node 1' }, { id: 2, name: 'Node 2' }, { id: 3, name: 'Node 3' }]; const links = [ { source: 1, target: 2 }, { source: 2, target: 3 }, { source: 3, target: 1 }]; <ForceGraph2D graphData= nodeLabel=\"name\"/> What? Real world example: graph The graph import React, { useState, useEffect } from \"react\";import ForceGraph2D from \"react-force-graph-2d\"; const NodeGraph = () => { const [nodes, setNodes] = useState([]); const [links, setLinks] = useState([]); const borderStyle = { // TODO: try to know why Tailwind does not work border: \"1px solid black\", borderRadius: \"10px\", padding: \"10px\" }; const handleNodeClick = (node) => { // Redirect to a new path console.log(node.name) // history.push(`/node/${node.id}`); } useEffect(() => { fetch('assets/data/nodeGraph.json') .then(response => response.json()) .then(data => { const { nodes, links } = data; setNodes(nodes) setLinks(links) }) .catch(error => console.error(error)); }, []); return( <div style={borderStyle}> <ForceGraph2D graphData= width={window.innerWidth} height={650} linkDirectionalArrowRelPos={1} linkDirectionalArrowLength={5} linkDirectionalArrowResolution={0} d3VelocityDecay={0.6} // Decrease velocity decay to reduce node overlap d3Force=\"charge\" // Use only charge force d3AlphaDecay={0.03} // Decrease alpha decay to increase simulation time d3Charge={-80} // Decrease charge to reduce node repulsion d3LinkDistance={80} // Increase link distance to reduce link overlap enableZoomPanInteraction={true} // Enable zooming onNodeClick={handleNodeClick} // redirect to the page when click node /> </div> )} export default NodeGraph; The node crawling const request = require('request');const cheerio = require('cheerio');const fs = require('fs'); const visited = new Set();const queue = ['http://localhost:4000/blog/about'];const domain = 'http://localhost:4000'const structure = {}; // I am going to use DFS concept to solve this graph like problem. Start from a single webpage: https://ycchenvictor.github.io/blog/ function storeAsFile(result) { // Convert JSON data to a string const jsonString = JSON.stringify(result); // Write the JSON data to a file fs.writeFile('nodeGraph.json', jsonString, function (err) { if (err) throw err; console.log('Saved!'); });} function desiredFormat(structure) { const nodes = Object.keys(structure).map((value, index) => { return {id: index + 1, name: value} }) const links = Object.entries(structure).map(([key, value]) => { return value.map((item) => { const source = getIdFromNodeName(key) const target = getIdFromNodeName(item) if(source && target) { return {source: source, target: target} } }) }).flat().filter(obj => obj !== undefined) function getIdFromNodeName(name) { result = nodes.find(node => node.name === name) if(result) { return result['id'] } else { null } } return { nodes: nodes, links: links }} function crawl() { // Promise in this function const childNodes = []; const url = queue.shift(); if (!url || visited.has(url)) { return Promise.resolve(structure); // resolve with returning the final structure } visited.add(url); return new Promise((resolve, reject) => { request(url, (err, response, body) => { if (err) { reject(err); } else { const $ = cheerio.load(body); $('a').each((i, link) => { const href = $(link).attr('href'); if (href && href.startsWith('/blog') && href.endsWith('html')) { const absoluteUrl = domain + href; childNodes.push(href); queue.push(absoluteUrl); } }); parentNode = url.replace(domain, \"\") structure[parentNode] = childNodes; resolve(crawl()); // resolve with calling this function again } }); });}// currently, just store the result as a JSON file in frontend.crawl().then((structure) => { console.log(structure) storeAsFile(desiredFormat(structure))}) Referenceforce-directed-clusters-with-links-between-clusters-forked /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/react/2023/02/18/node-graph.html"},{"id":120,"title":"Psychology","content":" hljs.highlightAll(); About Me Psychology IntroductionThis article describes my studies related to psychology and my solution towards myself. Please do the overall mental health check firstWhy?I want to understand myself and prepare for future studies. medium anxiety symptoms While facing problems, I often overestimate the severity, causing overly anxiety and worries, causing nervous and hard to relax I often feel anxious, headache, tired, and easy to be anger I also feel hard to sleep I am worried about performance on daily basis and also think there is no friend providing help Please try Cognitive-behavioral therapy, practice self care, health diet and sleep, exercise, and dive into nature How?Developmental psychologydevelopmental psychologySocial psychology Study of how people interact with and influence each other in social settings Key concepts: social influence, social cognition, group dynamics, attitudes, stereotypes, and prejudiceEffects of social media on self-esteem and body imageTBCGroup dynamics and conformityTBCPrejudice and discriminationTBCLeadership and motivationTBCAbnormal Psychology Application (Why) Improve mental health and well-being Address the social and cultural factors that contribute to the development and maintenance of mental health disorders Reduce the stigma associated with mental illness Promote greater understanding and acceptance of those who are affected by these conditions Process (How) Study of mental health disorders and other forms of abnormal behavior Examination of abnormal thoughts, emotions, and behaviors that deviate from what is considered normal or healthy, and the impact of these conditions on individuals, society, and culture Solution (What) Assessment: Assess the individual’s symptoms and identify the underlying causes of their condition. This may involve a comprehensive clinical interview, medical evaluations, and psychological tests. Diagnosis: Make a formal diagnosis of the mental health disorder. This involves matching the individual’s symptoms with the diagnostic criteria outlined in the DSM-5 or ICD-11. Treatment planning: Develop a treatment plan that is tailored to the individual’s specific needs and goals. This may involve a combination of medication, psychotherapy, and other forms of behavioral or cognitive interventions. Treatment implementation: Implement the interventions outlined in the plan. This may involve regular therapy sessions, medication management, and other forms of treatment. Monitoring and evaluation: Ensure that the interventions are effective and that the individual is making progress towards their goals. Maintenance and follow-up: Once the individual’s symptoms have improved and their mental health has stabilized, they will typically continue to receive ongoing care and support to maintain their progress and prevent relapse. DSM-5 or ICD-11 Identify Symptoms Asking the individual questions about their thoughts, feelings, and behaviors to gain a better understanding of their symptoms and how they are impacting their daily life (I should go to see the doctor) Psychological testing: Professionals may also use psychological tests to identify symptoms and assess the individual’s mental health. These tests may include personality assessments, intelligence tests, and symptom-specific questionnaires. (I can find some resources) Personality tests: These tests are designed to assess an individual’s personality traits, characteristics, and tendencies. Examples of personality tests include the Minnesota Multiphasic Personality Inventory (MMPI) and the NEO Personality Inventory. No MMPI free online NEO Personality Inventory result (testometrika) Intelligence tests: These tests are designed to assess an individual’s cognitive abilities and intellectual potential. Examples of intelligence tests include the Wechsler Adult Intelligence Scale (WAIS) and the Stanford-Binet Intelligence Scale. Neuropsychological tests: These tests are designed to assess an individual’s cognitive function and neurological status. Examples of neuropsychological tests include the Halstead-Reitan Neuropsychological Battery and the Luria-Nebraska Neuropsychological Battery. Projective tests: These tests are designed to explore an individual’s unconscious thoughts, emotions, and conflicts. Examples of projective tests include the Rorschach Inkblot Test and the Thematic Apperception Test (TAT). Observation: Professionals may observe the individual’s behavior and interactions with others to identify symptoms. This may involve observing the individual in a clinical setting or in their natural environment, such as at home or at work. Medical evaluation: In some cases, professionals may conduct a medical evaluation to rule out any underlying medical conditions that may be contributing to the individual’s symptoms. Collaboration with other healthcare providers: Professionals may collaborate with other healthcare providers, such as primary care physicians, to identify symptoms and assess the individual’s mental health. Match the symptoms to the diagnostic criteria: Once the presenting symptoms have been identified, the next step is to match them to the diagnostic criteria outlined in the DSM-5 or ICD-11. This involves comparing the individual’s symptoms to the criteria for each mental health disorder to determine the most appropriate diagnosis. Consider comorbidities: In some cases, an individual may present with symptoms that meet the criteria for multiple mental health disorders. It is important to consider comorbidities and choose the diagnosis that best fits the individual’s symptoms and overall presentation. Verify the diagnosis: After identifying the most appropriate diagnosis, it is important to verify it through additional assessment and evaluation. This may involve further psychological testing, medical evaluations, or consultations with other healthcare providers. Develop a treatment plan: Once a diagnosis has been made, the treatment team will develop a treatment plan that is tailored to the individual’s specific needs and goals. This may involve a combination of medication, psychotherapy, and other forms of behavioral or cognitive interventions.Medications Antidepressants: Antidepressants are used to treat major depressive disorder, anxiety disorders, and other mood disorders. They work by regulating the levels of neurotransmitters such as serotonin and norepinephrine in the brain. It seems making the disorder worse Antipsychotics: Antipsychotics are used to treat psychotic disorders such as schizophrenia and bipolar disorder. They work by blocking the activity of dopamine, a neurotransmitter that is often overactive in individuals with these disorders. Anxiolytics: Anxiolytics are used to treat anxiety disorders and panic disorders. They work by reducing the activity of the central nervous system, which can help alleviate feelings of anxiety and fear. Mood stabilizers: Mood stabilizers are used to treat bipolar disorder and other mood disorders. They work by regulating the levels of neurotransmitters such as serotonin, dopamine, and norepinephrine in the brain.PsychotherapyA type of talk therapy that involves working with a mental health professional to help improve your mental health and well-being Cognitive-behavioral therapy (CBT) helps individuals identify and change negative thought patterns and behaviors that contribute to their mental health issues. It’s commonly used to treat anxiety and depression. Psychodynamic therapy focuses on exploring unconscious thoughts and emotions that may be contributing to mental health issues. It’s commonly used to treat personality disorders and other mental health issues. Interpersonal therapy (IPT) focuses on improving interpersonal relationships and communication. It’s commonly used to treat depression and other mood disorders. Dialectical behavior therapy (DBT) combines cognitive-behavioral therapy with mindfulness and acceptance techniques. It’s commonly used to treat borderline personality disorder and other mood disorders. Family therapy involves working with a mental health professional to improve communication and relationships within a family. It’s commonly used to treat family conflict, substance abuse, and other mental health issues. Group therapy involves working with a mental health professional and other individuals who are experiencing similar mental health issues. It provides a supportive environment for individuals to share their experiences and learn coping skills.Cognitive-behavioral therapyOk, I need this and the steps is as follow: Identify negative thoughts and beliefs: Start by becoming aware of any negative thoughts or beliefs that may be contributing to your mental health issues. Write them down and try to identify any patterns. Challenge negative thoughts: Once you’ve identified negative thoughts and beliefs, challenge them by asking yourself if they are based on fact or if there is evidence to support them. Consider alternative perspectives and try to reframe your thoughts in a more positive light. Set achievable goals: Identify specific, achievable goals that you can work towards to improve your mental health. Break these goals down into smaller, manageable steps. Practice self-care: Take care of yourself by getting enough sleep, eating a healthy diet, and engaging in regular physical activity. These basic self-care practices can have a big impact on your mental health. Use positive self-talk: Practice positive self-talk by repeating affirmations or positive statements to yourself. This can help counteract negative thoughts and beliefs. Monitor your progress: Keep track of your progress towards your goals and celebrate your successes along the way. If you’re struggling, don’t hesitate to seek professional help.Interpersonal therapyto be continuedRegular Therapy Sessions Generally, therapy sessions are scheduled once a week, but it’s not uncommon for sessions to be scheduled every other week or even monthly. During the first few sessions, you and your therapist will work together to create a treatment plan that outlines your goals and the frequency of sessions. If you need to miss a session, be sure to let your therapist know as soon as possible so that you can reschedule. Remember that therapy is a collaborative process between you and your therapist. If you’re not seeing progress or don’t feel comfortable with your therapist, it’s important to speak up and discuss your concerns. Your therapist can work with you to adjust the treatment plan and make any necessary changes to improve your progress.Subfields Subfields: mood disorders (such as depression and bipolar disorder), anxiety disorders (such as generalized anxiety disorder, panic disorder, and phobias), personality disorders (such as borderline personality disorder and narcissistic personality disorder), and psychotic disorders (such as schizophrenia). Abnormal psychology also explores the factors that contribute to the development and maintenance of mental health disorders, including biological, environmental, and psychological factors. This field also examines the various treatments that are available for these conditions, including pharmacotherapy, psychotherapy, and other forms of behavioral and cognitive interventions.Causes and treatments of anxiety disordersBiological and environmental factors in schizophreniaPersonality disorders and their impact on relationshipsComorbidity between substance abuse and mental health disordersCognitive psychologyAttention and perceptionMemory processes and techniques for improving memoryProblem-solving strategies and decision-making processesEffects of aging on cognitive functionNeuropsychologyNeural basis of perception and cognitionNeuroplasticity and brain reorganization after injury or diseaseBrain imaging techniques and their applicationsRelationship between brain function and behaviorForensic psychologyEyewitness testimony and memory accuracyCriminal profiling and offender characteristicsPsychological factors in jury decision-makingAssessment and treatment of offendersResources of paperRead research studies: Read studies published in academic journals to get a deeper understanding of the theories and concepts. You can find research studies on websites such as Google Scholar, PsycINFO, and PubMed.Resources of discussionsReal World Problemtoxic relationship Study of behavior and mental processes that deviate from what is considered normal or healthy Subfields Personality psychology focuses on understanding the characteristics that shape an individual’s thoughts, feelings, and behaviors, including those that may contribute to toxic behavior Social psychology examines the influence of social context and relationships on behavior, which is important in understanding how toxic behavior can spread and affect others Clinical psychology also plays a role, as it involves the diagnosis and treatment of mental health disorders that may contribute to toxic behavior. interest terminology Context Effect Concept: The context in which a stimulus is presented can significantly affect how we perceive and evaluate it. It highlights the importance of considering the context in which information is presented and the potential biases that can arise from it. Example: Imagine you are shown a gray square on a white background. Then, you are shown the same gray square on a black background. Even though the physical characteristics of the square have not changed, your perception of its brightness and color may be influenced by the background. Heuristics Concept: Make decisions or solve problems quickly and efficiently, without necessarily relying on logical or analytical thinking. While heuristics can be useful in many situations, they can also lead to errors or biases if they are applied too rigidly or without careful consideration of the specific context. Example Availability heuristic: The tendency to judge the likelihood of an event based on how easily examples of similar events come to mind. For example, people might overestimate the risk of shark attacks because they are more memorable than other, more common risks like car accidents. Representativeness heuristic: This is the tendency to make judgments about the likelihood of an event based on how closely it resembles other events we know about. For example, people might assume that someone who wears glasses and reads a lot must be a university professor, even if that’s not the case. Anchoring and adjustment heuristic: This is the tendency to use an initial value (the “anchor”) as a starting point for estimating a quantity, and then adjusting that estimate based on additional information. For example, people might be more likely to pay a high price for a product if the seller starts with a very high initial price, even if that price is arbitrary. Recognition heuristic: This is the tendency to judge the value or importance of something based on how familiar it is. For example, people might assume that a well-known brand is better than a lesser-known one, even if they have no other information. What?give an exampletestReference /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/psychology/2023/03/17/psychology.html"},{"id":122,"title":"Rails","content":" hljs.highlightAll(); About Me Rails IntroductionThis article is going to build a website quickly Open-source web application framework in the Ruby Follows the Model-View-Controller (MVC) architectural pattern Model, representing the data and logic of the application View, providing the user interface Controller, handling user input and interacts with the model and view Make programming web applications easier by providing a set of conventions and abstractions that eliminate much of the repetitive work involved in building web applications from scratch ORM (Object-Relational Mapping) system for interacting with databases Routing system for handling incoming requests Testing framework for writing automated tests Convention over configuration, which means that it comes with sensible defaults and assumptions that can be overridden if necessary, but in general, makes it easier for developers to get started quickly and focus on building their application logic rather than configuring the framework Rails has a large and active community of developers and contributors, which means that there are many resources available for learning and troubleshooting, as well as a wide range of third-party plugins and libraries that can be used to extend its functionality.Why? Convention over Configuration: Help you get started quickly and focus on building your application logic instead of configuring the framework. Rapid Development: Rails is designed to make development fast and easy, with features like scaffolding, which generates boilerplate code for you. Rails community: has created a vast ecosystem of gems (libraries) that can be easily integrated into your application. Full-stack framework: Rails is a full-stack framework that includes an ORM (ActiveRecord) for database access, routing, middleware, and a view layer (ActionView) for rendering HTML. This means that you can build a complete web application using just Rails. Mature framework: Rails has been around since 2004 and has a large community of developers contributing to its development. This means that it has a large number of plugins, tools, and resources available, as well as a large pool of experienced developers who can help you troubleshoot issues. Ruby language: Rails is built on the Ruby programming language, which is known for its simplicity and readabilityHow?init install: gem install rails check version: rails -v build project: bundle install start project: rails new app_name start server: rails sopen browsers and input http://localhost:3000scaffoldScaffold in rails is a quick way to create MVC structure; for example, if you want to create a MVC structure with database, user (name:string, email:string, tel:string), in the directory of the project,rails g scaffold User name:string email:string tel:stringAs you can see, there are files for active_record, resource_route, scaffold_controller, test_unit, assets, scss.routesWith scaffold, it will help us add code as follow:Rails.application.routes.draw do resources :users # For details on the DSL available within this file, see https://guides.rubyonrails.org/routing.htmlend RESTful API: REST means Representational State Transfer. The benefit of RESTful API is unity. All coders have the consensus to write it in the same form; for example, given resources :users and input rails routes, the routes: Prefix Verb URI Pattern Controller#Action users GET /users(.:format) users#index   POST /users(.:format) users#create new_user GET /users/new(.:format) users#new edit_user GET /users/:id/edit(.:format) users#edit user GET /users/:id(.:format) users#show   PATCH /users/:id(.:format) users#update   PUT /users/:id(.:format) users#update   DELETE /users/:id(.:format) users#destroy As you can see, there are four verbs following RESTful, GET, POST, PATCH, DELETE, directed to the CRUD methods of controller and the controller call the corresponding CRUD methods to database. Actually, GET maps READ, POST maps CREATE, PATCH maps UPDATE, DELETE maps DESTROY.For more information, please refer to routesmodelModels are in app/models. file name: user.rb maps class User and maps table users.For more information, please refer to modelviewViews are in app/views. For example, the view file related to controller, UserController will be in app/views/users as follow:For more information, please refer to viewcontrollerControllers are in app/controllers. The file names and the controller names are linked; for example, file name: users_controller.rb maps class, UserController as follow:For more information, please refer to controllerAPIAPI mode is a feature in Rails 6 that provides a stripped-down version of Rails optimized for building API-only applications. It removes or disables certain features that are specific to web applications, making the stack leaner and faster. For more information, please refer to api modeORMORM (Object-Relational Mapping) is a technique or library that allows developers to map database tables to classes, and vice versa, so that they can interact with the database using object-oriented programming. The ORM abstracts away the SQL code and provides a higher-level API for creating, reading, updating, and deleting records from the database. For more information, please refer to ORMORM vs ModelA model and an ORM (Object-Relational Mapping) are two different concepts in software development, but they are related to each other.A model is a representation of data that defines the structure, behavior, and relationships of that data in a software system. In other words, a model is an abstraction of the real-world entities that a software system deals with. Models can be implemented using different programming languages, frameworks, or libraries.On the other hand, an ORM is a technique or a library that allows developers to map database tables to classes, and vice versa, so that they can interact with the database using object-oriented programming. The ORM abstracts away the SQL code and provides a higher-level API for creating, reading, updating, and deleting records from the database. The ORM also handles the conversion between object data types and database data types.databasedatabaserspec and capybaraWe can also use rspec and capybara to compose test for this app (to be continued)For more information, please refer to rspec and capybaratest driven developmentWe can write the spec first and keep running the specs to development this app completely.(compose spec here)For more information, please refer to test driven developmentWhat?give a real world exampleReference /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/rails/2023/01/01/rails.html"},{"id":128,"title":"Validation","content":" hljs.highlightAll(); About Me Validation IntroductionThis article describes the concept of validation in model of rails.Types of validation: frontend: validate with javascript when user input data backend: after data sending to server, before inserting to database, validate it database: validation in databaseWhyTo prevent any malfunction in database, we do validation while data inserting.HowActually the code is pretty straight forward. It will slice the attributes and loop through them to validate with validators.# File activemodel/lib/active_model/validations/validates.rb, line 105def validates(*attributes) defaults = attributes.extract_options!.dup validations = defaults.slice!(*_validates_default_keys) raise ArgumentError, \"You need to supply at least one attribute\" if attributes.empty? raise ArgumentError, \"You need to supply at least one validation\" if validations.empty? defaults[:attributes] = attributes validations.each do |key, options| next unless options key = \"#{key.to_s.camelize}Validator\" begin validator = key.include?(\"::\".freeze) ? key.constantize : const_get(key) rescue NameError raise ArgumentError, \"Unknown validator: '#{key}'\" end validates_with(validator, defaults.merge(_parse_validates_options(options))) endendskip validationHow rails design skip validations? TBCNot all method will be validated in modelfor example, the methods: create, create!, save, save!, update, update!customized validatorTBCWhatexampleFor example, title is required in articles:class Article < ApplicationRecord validates :title, presence: true endAfter migration, in rails console,a1 = Article.new a1.saveThenThen we can check the error message witha1.errors.full_messagesIt means we must assign title while creating article.example: customized validatorTBCFor example, if we want the article title to start with ruby,In model, Article, add a method after validates such asclass Article < ApplicationRecord validates :title, presence: true, begin_with_ruby: true endThen define the method, begin_with_ruby, in the save file of class, Articleclass BeginWithRubyValidator < ActiveModel::EachValidator def validate_each(record, attribute, value) unless value.start_with? 'Ruby' record.errors.add attribute, (options[:message] || \"Should Start with Ruby\") end end endReference為你自己學 Ruby on Rails 高見龍Active Record Validations - Ruby on Rails GuidesActive Record Callbacks - Ruby on Rails Guidesvalidates /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/rails/2021/03/04/validation.html"},{"id":126,"title":"Active Record","content":" hljs.highlightAll(); About Me Active Record Introduction Software design pattern Used in object-oriented programming to manage database access A part of the Model-View-Controller (MVC) architectural pattern Provides an easy and intuitive way to represent and manipulate data stored in a database Define classes that map to database tables, and provides a set of methods that can be used to query, insert, update, and delete records from the database Table map to classes Rows map to objects Columns map to object attributes Abstracts away much of the low-level database interaction code that developers would otherwise have to write. This makes it easier to work with databases, and also reduces the likelihood of errors and bugs Used in popular web frameworks such as Ruby on Rails, Django, and Laravel. It is a powerful tool that allows developers to focus on building their applications, rather than on database managementWhyActive Record is a specific implementation of ORM that maps database tables to objects. It allows developers to work with database records as if they were objects, with each record represented by a single instance of a class. Active Record handles the persistence of the objects to the database and provides methods for querying and updating the data.HowResearch Active Record in Rails. Rails use adapter design pattern for user to use same syntax for different SQL.design patternPlease understand adapter first.Model In Active Record, a model represents a table in a database. It encapsulates the logic for retrieving, creating, updating, and deleting records in the table. Attributes are the properties of a model that map to the columns of the corresponding database table. They represent the data stored in the table. Associations: Associations represent the relationships between models in the database. They define how records in one table are related to records in another table, such as a one-to-one, one-to-many, or many-to-many relationship. In Ruby on Rails, a model is a component of the MVC (Model-View-Controller) architecture that is used to represent the data and business logic of an application. In this context, a model can be any object that is used to interact with data, not just an Active Record model. For example, a model could represent an API endpoint, a user session, or a business process. In Active Record, a model is specifically an object that represents a table in a database, while in Ruby on Rails, a model is a more general term that refers to any object that represents data and business logic in an application.On the application point of view, we only care about how to use model. In rails, all model inherit from ActiveRecord::Base; for example,class User < ActiveRecord::BaseendSo please refer to model for more informationmethodsfind is a method provided by the ActiveRecord module in Ruby on Rails that retrieves a single record from the database based on its primary key. For example, if you have a model called User and you want to retrieve the user with an ID of 1, you can call User.find(1) and Rails will retrieve the corresponding record from the users table in the database. If the record is not found, find will raise an ActiveRecord::RecordNotFound exception.find_by is similar to find, but it retrieves a single record based on a specific attribute value, rather than the primary key. For example, if you want to retrieve the user with an email address of “johndoe@example.com”, you can call User.find_by(email: ‘johndoe@example.com’) and Rails will retrieve the corresponding record from the users table. If the record is not found, find_by will return nil.The main difference is that find(1) will raise an ActiveRecord::RecordNotFound exception if the record is not found, while find_by(id: 1) will simply return nil. This means that if you are certain that the record with a primary key of 1 exists in the database, you can use find(1) to retrieve it and raise an exception if it is not found. On the other hand, if you are not sure if the record exists, or if you don’t want your application to crash if the record is not found, you can use find_by(id: 1) to retrieve it and handle the nil return value accordingly.where: The where method is used to retrieve a collection of records that match a set of conditions. For example, User.where(active: true) would retrieve all users that have the active attribute set to true.order: The order method is used to specify the order in which records are retrieved. For example, User.order(:name) would retrieve all users ordered by their name attribute in ascending order.limit and offset: The limit and offset methods are used to retrieve a subset of records from the database. For example, User.limit(10).offset(5) would retrieve 10 users starting from the 6th user.select: The select method is used to retrieve only specific columns from the database. For example, User.select(:name, :email) would retrieve only the name and email columns for all users.joins: The joins method is used to retrieve records from multiple tables based on a relationship. For example, User.joins(:posts) would retrieve all users who have at least one post.includes: The includes method is used to retrieve records from multiple tables while preloading associated records to avoid N+1 queries. For example, User.includes(:posts) would retrieve all users and their associated posts in a single query.These are just a few examples of the methods provided by the ActiveRecord module in Rails for querying the database.ValidationValidations: Validations are rules that ensure the data stored in a model is valid and consistent with the requirements of the application. They can be used to enforce constraints such as required fields, data format, and uniqueness.For data to be consistent in a model, we should validate it before inserting into a database. The methods for validation in Active Record Validation - Ruby on RailsCallbacksCallbacks: Callbacks are methods that are automatically called at certain points in the lifecycle of a model, such as before or after a record is saved or deleted. They can be used to perform additional operations or validations on the data.Callback is the function that are going to be call after a function executed.The life cycle of an object in a framework always plays key role. The process:(reference: railsbook.pdf)The above cycle only shows the hooks of save. For more information, please refer to active record callbacksSome interesting queries: (I cannot understand it right now)Iteration: If we want to send an email to all usersCustomer.all.each do |customer| NewsMailer.weekly(customer).deliver_nowendHowever, the .all takes too much memory; as a result, we can use find_eachCustomer.find_each(batch_size: 5000) do |customer| NewsMailer.weekly(customer).deliver_nowendto portion the table and read it in a batch size many times.The source code of find_each:def find_each(start: nil, finish: nil, batch_size: 1000, error_on_ignore: nil, order: :asc) if block_given? find_in_batches(start: start, finish: finish, batch_size: batch_size, error_on_ignore: error_on_ignore, order: order) do |records| records.each { |record| yield record } end else enum_for(:find_each, start: start, finish: finish, batch_size: batch_size, error_on_ignore: error_on_ignore, order: order) do relation = self apply_limits(relation, start, finish, order).size end endendThe source code of find_in_batches:def find_in_batches(start: nil, finish: nil, batch_size: 1000, error_on_ignore: nil, order: :asc) relation = self unless block_given? return to_enum(:find_in_batches, start: start, finish: finish, batch_size: batch_size, error_on_ignore: error_on_ignore, order: order) do total = apply_limits(relation, start, finish, order).size (total - 1).div(batch_size) + 1 end end in_batches(of: batch_size, start: start, finish: finish, load: true, error_on_ignore: error_on_ignore, order: order) do |batch| yield batch.to_a endendThe source code of in_batches:def in_batches(of: 1000, start: nil, finish: nil, load: false, error_on_ignore: nil, order: :asc) relation = self unless block_given? return BatchEnumerator.new(of: of, start: start, finish: finish, relation: self) end unless [:asc, :desc].include?(order) raise ArgumentError, \":order must be :asc or :desc, got #{order.inspect}\" end if arel.orders.present? act_on_ignored_order(error_on_ignore) end batch_limit = of if limit_value remaining = limit_value batch_limit = remaining if remaining < batch_limit end relation = relation.reorder(batch_order(order)).limit(batch_limit) relation = apply_limits(relation, start, finish, order) relation.skip_query_cache! # Retaining the results in the query cache would undermine the poinof batching batch_relation = relation loop do if load records = batch_relation.records ids = records.map(&:id) yielded_relation = where(primary_key => ids) yielded_relation.load_records(records) else ids = batch_relation.pluck(primary_key) yielded_relation = where(primary_key => ids) end break if ids.empty? primary_key_offset = ids.last raise ArgumentError.new(\"Primary key not included in the custom select clause\") unlesprimary_key_offset yield yielded_relation break if ids.length < batch_limit if limit_value remaining -= ids.length if remaining == 0 # Saves a useless iteration when the limit is a multiple of the # batch size. break elsif remaining < batch_limit relation = relation.limit(remaining) end end batch_relation = relation.where( predicate_builder[primary_key, primary_key_offset, order == :desc ? :lt : :gt] ) endendAssociationFor more detail, please refer to Active Record - Association. Some interesting association: polymorphic, STI, polymorphic + STIpolymorphicWe should use polymorphic, if a model belongs to more than one model and the meaning of the belongs_to are almost the same. However, if the belongs_to has significantly different meanings, then we should use multiple has_many and belongs_to rather than polymorphic. For example, both product and user can be commented, so we can create Comment model with$ rails g model Comment commentable_type:string commentable_id:integer body:textand the model setting would be as follow:class Comment < ApplicationRecord belongs_to :commentable, polymorphic: trueendclass Product < ApplicationRecord has_many :comments, as: :commentableendclass User < ApplicationRecord has_many :comments, as: :commentableendAs the setting above, the commentable_id will save the id of product and user and because of the commentable_type, no worries if the id of product and user are the same.Note that the structure can be written as follow:class Comment < ApplicationRecord belongs_to :product belongs_to :userendclass Product < ApplicationRecord has_many :commentsendclass User < ApplicationRecord has_many :commentsendSTI (single table inheritance)When to use single table inheritance? (skip)Polymorphic + STIFor example, if we want to setup a platform and users can be both employer and employee for a task and each task can only have one employer and employee.Then, the model setups would beclass Task < ActiveRecord::Base belongs_to :liable, polymorphic: true def liable_type=(class_name) super(class_name.constantize.base_class.to_s) endendclass User < Active::Base has_many :task, as: :liable, dependent: :destroyendclass Employer < User has_and_belongs_to_many :employessendclass Employee < User has_and_belongs_to_many :employersendNotice! Employer and Employee use the concept of STI(Single-table inheritance).Try to understand how to query in rails with ActiveRecord Query InterfacewhatSource Code of adapter in rails active recordPlease rails new a project and create a random table (I create table with rails g scaffold User name:string email:string and then rails db:migrate) and then we can create a new User with test = User.create. To track the source code, bundle open activerecord and it will open the gem in .rvm/gems/ruby-2.7.4/gems/activerecord-6.1.4.4/lib. I will only track the create method because I only want to know the design. We can track it with binding.pry. Try to find the raw SQL code. After you have done, input bundle pristine activerecord to recover the gems.Input ActiveRecord::Base.connection.adapter_name in console, to know what database system usingUser.create link to general methods of ActiveRecord of create: Fire up the rails console, and input User.create, then the SQL would beTRANSACTION (0.1ms) begin transactionUser Create (0.4ms) INSERT INTO \"users\" (\"created_at\", \"updated_at\") VALUES (?, ?) [[\"created_at\", \"2022-01-11 02:01:31.475084\"], [\"updated_at\", \"2022-01-11 02:01:31.475084\"]]TRANSACTION (1.0ms) commit transactionI am using SQLite and the key issue is why rails knows to use the INSERT grammar for SQLite instead of MySQL or PG.Add binding.pry in class as follow:class User < ApplicationRecord binding.pryendand input User.create in rails console again. Then the data flow of create would be as follow: create method in superclass when calling user.create in .../research_activerecord/app/models/user.rb the superclass of User is ApplicationRecord the superclass of ApplicationRecord is ActiveRecord::Base Have a look at base.rbmodule ActiveRecord #:nodoc: ... class Base ... extend ConnectionHandling ... include Core include Persistence ... end ...endGiven that we know, create methods equals to new + save, then in Core, there are methods such as initialize and in Persistence, there are methods such as save.The create method in persistence.rbdef create(attributes = nil, &block) if attributes.is_a?(Array) attributes.collect { |attr| create(attr, &block) } else object = new(attributes, &block) object.save object endendAs you can see, it will call new and then save method. We can new (to eb continued) save in persistence.rb -> create_or_update -> result = new_record? ? _create_record(&block) : _update_record(&block) -> _create_record(&block) -> yield(self)It is tedious to probe the methods. The general ideas are these methods will link to build_insert_sql of connection as follow: insert_all in .../lib/active_record/persistence.rb -> InsertAll.new(self, attributes, on_duplicate: :skip, returning: returning, unique_by: unique_by).execute initialize(model, inserts, on_duplicate:, returning: nil, unique_by: nil) in .../lib/active_record/insert_all.rb and the model is User in my case execute in .../lib/active_record/insert_all.rb execute -> connection.exec_insert_all to_sql, message connection in attr_reader :connection, which means def connection @connection end @connection = model.connection and model is the self in InsertAll.new, which is User in my case. exec_insert_all in database_statements.rb to_sql = connection.build_insert_sql(ActiveRecord::InsertAll::Builder.new(self)) (where connection transfer code into SQL) build_insert_sql can be in abstract_adapter.rb, abstract_mysql_adapter.rb, postgresql_adapter.rb, or sqlite3_adapter.rb rails determines which build_insert_sql to be used by connectionThe most important part is to_sql. Then now the problem is how rails determines with adapter to be used: establish_connection in .../lib/active_record/connection_handling.rb it determines which adapter to be used through establish_connectionActiveRecord::Base.establish_connection( adapter: \"mysql2\", host: \"localhost\", username: \"myuser\", password: \"mypass\", database: \"somedatabase\") and it will call connection_handler, which is self.connection_handler in core.rb call default_connection_handler given there is no thread -> self.default_connection_handler = ConnectionAdapters::ConnectionHandler.new initialize in class ConnectionHandler of connection_pool.rb so it actually call establish_connection in connection_pool.rb -> resolve_pool_config -> path_to_adapter = \"active_record/connection_adapters/#{db_config.adapter}_adapter\" -> require path_to_adapter (where the determination of adapter) Take mysql as example, it require .../lib/active_record/connection_adapters/mysql2_adapter.rb -> require \"active_record/connection_adapters/abstract_mysql_adapter\" build_insert_sql in .../lib/active_record/connection_adapters/abstract_mysql_adapterReferenceActive Record - 维基百科，自由的百科全书Active Record - Ruby on Railspolymorphic + STIODBC and writing your own ActiveRecord adapter(http://www.monkeyandcrow.com/blog/reading_rails_the_adapter_pattern/) /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/rails/2021/06/10/active-record.html"},{"id":134,"title":"Component","content":" hljs.highlightAll(); About Me Component IntroductionThis article describes the concept of component.Why?With component, we can decompose whole frontend into reusable parts.How?A really basic component: in src, create components/counter.jsx withimport React, { useState, useRef } from 'react';const Counter = () => { const [count, setCount] = useState(0) // should add two example of useRef return ( <React.Fragment> <span className = 'xxx'> {count} </span> <button onClick={() => setCount((prev) => prev + 1)} > Increment </button> </React.Fragment> );} export default Counter;and import themimport Counter from './components/counter.jsx'...<Counter />...It includes Naming of component must start from uppercase HTML & CSS: the styles CSS: through className relationship between states and events check hook The reason to use component: render() method returns react elements, virtual DOM, which are JS objects in memory map to real DOM element. When a state changes, react change the virtual DOM first and then change the state of real DOM, making it just like JQuery with AJAX.insert componentsReact accept pass array of components into a component and render them; Take sidebar as example,function SidebarLayout() { const [menuItems, setMenuItems] = useState('testing') useEffect(() => { const queriedTitles = [...document.querySelectorAll('h1, h2, h3, h4, h5, h6')]; const titles = queriedTitles.filter((item) => item.tagName !== 'H1').map( item => ({id: item.id, tag: item.tagName.match(/\\d+/)[0], position: queriedTitles.indexOf(item)}) ) const menuItemsDesired = titles.map((title) => (<MenuItem>{title.id}</MenuItem>)) setMenuItems(menuItemsDesired) }, []); return ( <div style= > <ProSidebarProvider> <BrowserRouter> <Sidebar> <Menu> {menuItems} </Menu> </Sidebar> </BrowserRouter> </ProSidebarProvider> </div> );}Conditional RenderingIn React, conditional rendering allows developers to show different parts of a component based on certain conditions.import React from 'react';function MyComponent(props) { const isLoggedIn = props.isLoggedIn; return ( <div> {isLoggedIn ? ( <h1>Welcome back!</h1> ) : ( <h1>Please log in.</h1> )} </div> );}export default MyComponent;In this example, we use the ternary operator (? :) to conditionally render different content inside the return statement based on the value of isLoggedIn. If isLoggedIn is true, the component will render a welcome message, and if it’s false, the component will render a login prompt. The JSX syntax allows us to include JavaScript expressions inside curly braces {}, so we can evaluate the condition and render the appropriate content inline.childTo decompose elements with full functionality, check propclass to functionalForm example, fromclass Clock extends React.Component { constructor(props) { super(props); this.state = {date: new Date()}; } componentDidMount() { this.timerID = setInterval( () => this.setState({ date: new Date() }), 1000 ); } componentWillUnmount() { clearInterval(this.timerID); } render() { return ( <div> <h1>Hello, world!</h1> <h2>It is {this.state.date.toLocaleTimeString()}.</h2> </div> ); }}tofunction Clock() { const [date, setDate] = useState(new Date()); useEffect(() => { const interval = setInterval( () => setDate(new Date()), 1000 ); return () => clearInterval(interval); }); return ( <div> <h1>Hello, world!</h1> <h2>It is {date.toLocaleTimeString()}.</h2> </div> );}export default Clock;The hook, useState to setup the date and setDate function to change the date. If I want setInterval to be disabled after this component closed, just like componentWillUnmount, adding return () => clearInterval(interval);What?give an exampletestReference /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/react/2023/01/27/component.html"},{"id":125,"title":"Object Relational Mapping","content":" hljs.highlightAll(); About Me Object Relational Mapping Introduction ORM is based on OOP concepts. Some important concepts to learn include classes, objects, inheritance, polymorphism, and encapsulation ORM works by mapping database tables to objects. Object-Relational Mapping: ORM is a technique that maps database tables to classes, and vice versa, so that developers can work with the database using object-oriented programming.WhyHowModels: In ORM, models are classes that represent database tables. They define the structure and behavior of the data in the table, and the relationships between tables.Fields: Fields are attributes of a model that represent the columns in the corresponding database table. Each field has a data type and a set of constraints that determine how data is stored and validated.Relationships: Relationships define how models are related to each other in the database. There are several types of relationships, such as one-to-one, one-to-many, and many-to-many.Querysets: Querysets are objects that represent a collection of model objects that match a certain query. Querysets allow developers to retrieve, filter, and sort data from the database using object-oriented syntax.Transactions: Transactions are a way to group multiple database operations into a single atomic operation. Transactions ensure that either all operations succeed, or none of them do.Migrations: Migrations are a way to manage changes to the database schema over time. Migrations allow developers to add, remove, or modify database tables and fields while preserving the data in the database.These are just some of the key concepts in ORM. There are many more advanced concepts and techniques in ORM, but understanding these fundamentals is a good starting point.CRUDTo create a candidateuser = Candidate.new(name: \"aaa\", age: 19) user.savemeans in SQL,TBCTo read all users,User.allmeans in SQL,SELECT * FROM users;To find all table namesActiveRecord::Base.connection.tablesmeans in SQL,TBCTo update the candidate’s name with id = 1,candidate = Candidate.find_by(id: 1) candidate.name = \"hahaha\" candidate.save# SQLorcandidate.update(name: \"hahahaha\", age: 20)# SQLTo delete candidate with id = 1,Candidate.destroy(1)means in SQLTBCNotice! delete will call the SQL delete directly, so no callbacks during deleting process. By ignoring callback and relation, delete is faster than destroy.optimizationeager loadinglazy loadingcachingtransactionswhatGive a real world example /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/rails/2022/01/13/object-relational-mapping.html"},{"id":135,"title":"Api","content":" hljs.highlightAll(); About Me Api IntroductionThis article explains how to use react as frontend to build CRUD operations with Restful API.Why?With the concept of RESTful, we can separate client and server side and follow standardized principles for exchanging data between client and server.With the principles, we have scalability via enlarging machines and flexibility to all other languages (we only need to make sure the methods of exchanging data are the same)How?Given we have a backend, then we can create frontend components to GET and POST. I use JWT mechanism.createSuppose we what to create tasks in a to-do listimport React, { useContext, useState } from 'react';function CreateTask(props) { const [variable, setVariable] = useState(''); ... const token = localStorage.getItem('token'); const PostTask = (params) => { fetch('http://localhost:5000/tasks', { method: 'POST', headers: { 'Authorization': `Bearer ${token}` }, body: JSON.stringify(params), }).then((res) => { return res.json() }).then((data) => { console.log(data); }).catch(error => { console.log(error) }) } return( ... )}export default CreateTask; PostTask will POST /tasks with JWT token in headersREADGET list of tasksimport React, { useEffect } from \"react\";import TaskList from './task_list.jsx'function TaskLists() { useEffect(() => { fetch(\"http://localhost:5000/tasks\", { method: \"GET\", }) }, []); return( <div> <h2>Todo List</h2> <div> <ul> <TaskList /> <TaskList /> <TaskList /> <TaskList /> </ul> </div> </div> )}export default TaskLists;tokenWe can check whether token expired given backendimport React, { useState, useEffect } from 'react';import { Redirect } from 'react-router-dom';import jwt_decode from 'jwt-decode';const withSessionTimeout = WrappedComponent => { const SessionTimeout = props => { const [redirect, setRedirect] = useState(false); useEffect(() => { const token = localStorage.getItem('token'); // or read from a cookie if (token) { try { const decoded = jwt_decode(token); const currentTime = Date.now() / 1000; if (decoded.exp < currentTime) { setRedirect(true); } } catch (error) { setRedirect(true); } } else { setRedirect(true); } }, []); if (redirect) { return <Redirect to=\"/login\" />; } return <WrappedComponent {...props} />; }; return SessionTimeout;};export default withSessionTimeout;and use itimport React from 'react';import withSessionTimeout from './withSessionTimeout';const MyComponent = props => { return <div>Hello, world!</div>;};export default withSessionTimeout(MyComponent);environment variablesadd a .env file and put variables; for example, endpoint:Take backend API as example, we can create two environment files: .env.development & .env.production as follow:REACT_APP_API_ENDPOINT=http://localhost:9999andREACT_APP_API_ENDPOINT=https://servername:9999and we can use it with process.env.REACT_APP_API_ENDPOINT. When npm start, react uses variables in .env.development and when npm run build, react uses variables in .env.productionWhatproject, taskproject, worldReferenceBuilding an app to stream Tweets in real-timeWhy can’t we integrate Twitter login with React alone?[week 22] React：用 SPA 架構實作一個部落格（二）- 身分驗證 /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/react/2022/09/14/api.html"},{"id":136,"title":"Sign Up And Login","content":" hljs.highlightAll(); About Me Sign Up And Login IntroductionThis article describes how to build sign up and login with react to interact with backend.Why?Mechanism to post info for signing up post info for logging inHow?button to pop modalmodalsign upimport React, { useContext, useState } from 'react';import Modal from \"react-modal\";function SignUpModal(props) { const [username, setUsername] = useState(\"\"); const [password, setPassword] = useState(\"\"); const { signUpModalOpen, setSignUpModalOpen } = useContext(props.MyContext); const PostSignUpInfo = (params) => { fetch(\"http://localhost:5000/signup\", { method: \"POST\", headers: { \"Content-Type\": \"application/json\", }, body: JSON.stringify({ params }), }).then((res) => { return res.json() }).then((data) => { localStorage.setItem('token', data.token); }).catch(error => { console.log(error) }) } return( <Modal ariaHideApp={false} // TODO: remove it and fix the errors isOpen={Boolean(signUpModalOpen)} className='rounded-lg dark:bg-gray-700 max-w-2xl md:h-auto' > <h1 className=\"text-xl font-semibold text-gray-900 dark:text-white\" >Sign Up</h1> <form> <label> email: <input type=\"text\" value={username} placeholder=\"Username\" onChange={(e) => setUsername(e.target.value)} /> </label> <br/> <label> password: <input type=\"password\" value={password} placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} /> </label> </form> <div className='flex items-center p-6 space-x-2 border-t border-gray-200 rounded-b dark:border-gray-600'> <button onClick={() => PostSignUpInfo({ username:username, password:password })} className='block text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800' >Sign Up</button> <button onClick={() => setSignUpModalOpen(false)} className='text-gray-500 bg-white hover:bg-gray-100 focus:ring-4 focus:outline-none focus:ring-blue-300 rounded-lg border border-gray-200 text-sm font-medium px-5 py-2.5 hover:text-gray-900 focus:z-10 dark:bg-gray-700 dark:text-gray-300 dark:border-gray-500 dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-gray-600' >Close</button> </div> </Modal> )}export default SignUpModal;What?TBCReference /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/react/2021/10/15/sign-up-and-login.html"},{"id":137,"title":"Hook","content":" hljs.highlightAll(); About Me Hook Introduction functions to hook into React features do not work in a regular function or nested function in a componentWhyReact uses hooks as a way to manage state and lifecycle events in functional components. Hooks allow functional components to manage state and lifecycle events by providing a way to “hook into” the React state and lifecycle system. Hooks also allow developers to reuse stateful logic across multiple components, which can reduce code duplication and improve maintainability. Hooks like useState, useEffect, and useContext are some of the most commonly used hooks in React.HowLet’s use clock as example,function Clock() { const [date, setDate] = useState(new Date()); useEffect(() => { const interval = setInterval( () => setDate(new Date()), 1000 ); return () => clearInterval(interval); }); return ( <div> <h1>Hello, world!</h1> <h2>It is {date.toLocaleTimeString()}.</h2> </div> );}export default Clock;useStateuseState returns the current state and a function for updating the state. In the Clock, const [count, setDate] = useState(0) means set the initial value of count equals to 0 and use setCount to update the value of the state we can warp the set method from useState in a functionfunction example() { setDate(xxx)}useEffectDefine customized effects and trigger it when rerender component. In the example above, after Clock component created, it will trigger function in useEffect(), which will trigger setDate() to set the value of date in each 1000 millisecond.It may cause stack overflow as useEffect triggered every moment the component rendered; to avoid it, just add an empty array to tell react not to track any value changed.function SidebarLayout() { const [anchors, setAnchors] = useState(null); useEffect(() => { setAnchors(document.querySelectorAll('h1, h2, h3, h4, h5, h6')); }, []); return ( ... );}useContextWhen we want to call method from parent componentfunction ParentComponent() { const MyContext = React.createContext(); const handleClick = () => { console.log(\"The button was clicked!\"); }; return ( <MyContext.Provider value=> <ChildComponent MyContext={MyContext} /> </MyContext.Provider> );}function ChildComponent() { const { handleClick } = useContext(props.MyContext); return <button onClick={handleClick}>Click me</button>;} Note that the methods’ naming in MyContext should be the same as in parent componentuseRefuseRef is a React hook that returns a mutable ref object used to access DOM elements or persist values. It is more efficient to use a ref to access a DOM element than to use document.querySelector().import React, { useRef } from 'react';export default function App() { const ref = useRef(null); useEffect(() => { // 👇️ use a ref (best) const element2 = ref.current; console.log(element2); // 👇️ use document.querySelector() // should only be used when you can't set a ref prop on the element // (you don't have access to the element) const element = document.querySelector('#container'); console.log(element); }, []); return ( <div> <div ref={ref} id=\"container\"> <h2>bobbyhadz.com</h2> </div> </div> );}useCallbackI can use the webcam exampleuseRouteAs the concept of SPA (single page application), switching pages represents merely change the componets. Create a file for route setting:import React from \"react\";import Users from \"./components/Users\";import Contact from \"./components/Contact\";import About from \"./components/About\";const routes = { \"/\": () => <Users />, \"/about\": () => <About />, \"/contact\": () => <Contact />};export default routes;Then use these routes with useRoute:import {useRoutes} from 'hookrouter';import Routes from './router'function App() { const routeResult = useRoutes(Routes) return ( <div className=\"App\"> <a href=\"/user\">Users Page</a> <a href=\"/about\">About Page</a> <a href=\"/contact\">Contacts Page</a> {routeResult} </div> );}useMemoa React Hook that lets you cache the result of a calculation between re-renders.OtherOnclickDefine what to do when we click a button<button onClick={() => {fn1(); fn2()}} className=\"\">Click me</button> useEffect define customized effects and trigger it when rerender component useRef: two usages store value of reference and it will not rerender component when value changed serve as reference of current component (like queryselector) useContext: TBC class & lifecycle vs hooks: TBCReference10 React Hooks Explained // Plus Build your own from ScratchuseRoutelife cycle methods in React Hooks?Using the Effect Hookhow to share state across react components with contextWhat is the equivalent of document.querySelector in React /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/react/2021/06/17/hook.html"},{"id":138,"title":"state","content":" hljs.highlightAll(); About Me state IntroductionBased on the concepts of component and props in previous articles, you may find that there are issues related to state as follow: unchangeable state variables in component single source of truth lift statesWhyto be continueHowunchangeable state variables in componentTo solve it, the core concept is to copy the structure of the state in a const variable and re-render it with that state; for example,turn the onClick method in button of delete in <Counter> into<button ... onClick={() => this.props.onDelete(this.props.id)}> Delete</button>once clicked, it will pass this.props.id to the onDelete method in <Counter> of <Counters> and trigger handleDelete method, which is going to filter all the id in the state, which is not equal to the id passed by this.props.id and return the filtered state, counters and re-renderhandleDelete = counterId => { const counters = this.state.counters.filter(c => c.id !== counterId); this.setState({ counters });}render() { return ( <div> {this.state.counters.map(counter => <Counter ... id={counter.id} > </Counter> )} </div> );}Then once you click the delete button, the row of counter will disappear.Note that you can modify the value={counter.value} and id={counter.id} to counter={counter} and use these states in children component with this.props.counter.id and this.props.counter.idsingle source of truthIn 2021-06-15-react-component-and-prop.md, we know when a state changes, react change the virtual DOM first and then change the state of real DOM. Now we want to create a reset button to reset all the calculation in all the counters.In counters,class Counters extends Component { ... handleReset = () => { const counters = this.state.counters.map( c => { c.value = 0; return c; } ); this.setState({ counters }); console.log(counters) } ... render() { return ( <div> <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\" onClick={() => this.handleReset()} > Reset </button> ... </div> ); } ...}Once we click the reset button and trigger handleReset method, the state in counters changed and trigger the render method, then it will pass the new value as props to counter; however, because state can only be modified inner the component, the state in counter did not changed, which means the counter will not be re-rendered. What we need to do is to remove all the local state in counter and make the children counter to be controlled by the props passed by counters as follow:fromclass Counter extends Component { state = { value: this.props.value, } handleIncrement = (product) => { this.setState({ value: this.state.value + 1 }) } render() { return ( <div> ... <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\" onClick={() => this.handleIncrement({id:1})} > Increment </button> ... </div> ); }}toclass Counter extends Component { render() { return ( <div> ... <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\" onClick={() => this.props.onIncrement(this.props.counter)} > Increment </button> ... </div> ); } ...}and add handleIncrement in Countersclass Counters extends Component { ... handleIncrement = counter => { const counters = [...this.state.counters]; const index = counters.indexOf(counter); counters[index] = { ...counter }; counters[index].value++; this.setState({ counters }); } render() { return ( <div> ... {this.state.counters.map(counter => <Counter ... onIncrement={this.handleIncrement} ... > ... </Counter> )} </div> ); } ...}lift statesFor example, we want to have a NavBar to show to total counts of the counters just like the tree in 2021-06-13-react-overview.md showed. Then we need to lift the state of counters to App and then pass state to NavBarcreate App component as followimport React, { Component } from 'react';import NavBar from './components/navbar';import Counters from './components/counters';class App extends Component { render() { return ( <Navbar /> <main className='container'> <Counter /> </main> ) }}and add <Navbar /> as followimport React, { Component } from 'react';class NavBar extends Component { state = {} render() { return ( <nav className=''> <a className='' href='#'>Navbar</a> </nav> ); }}export default NavBar;remember to add the tailwind structureThe key tools are useContext and useReducer.A. useContext: letting the nested components to use variable defined in the components outside. For example, the nested structure: ThemedButton() in Toolbar() in App(). With ThemeContext created by React.createContext() outside these components, we can access ThemeContextconst themes = { light: { foreground: \"#000000\", background: \"#eeeeee\" }, dark: { foreground: \"#ffffff\", background: \"#222222\" }};const ThemeContext = React.createContext();function App() { return ( <ThemeContext.Provider value={themes.dark}> <Toolbar /> </ThemeContext.Provider> );}function Toolbar() { return ( <div> <ThemedButton /> </div> );}function ThemedButton() { const theme = useContext(ThemeContext); return ( <button style=> I am styled by theme context! </button> );}B. useReducer:WhatReferencehow to share state across react components with contextuseContextReact JS - React Tutorial for Beginners /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/react/2021/06/16/state.html"},{"id":139,"title":"Prop","content":" hljs.highlightAll(); About Me Prop IntroductionThis articleWhyWe can pass variable from parent node to children nodeHowfunction ParentComponent() { const [message, setMessage] = useState(\"Hello from the parent component!\"); return <ChildComponent message={message} />;}function ChildComponent(props) { return <div>{props.message}</div>;}call parent method in childrencheck useContext in hookprop vs state (TBC)state can only be used in the component itself and prop is passed to the component from outside. We cannot modify the prop directly in the component class; instead we need to pass the prop to state and then modify the state within the component.Because state can only be used in the component itself, we can only add the modify method in the component using the state; for example, in counters, add handleDelete as followclass Counters extends Component { ... handleDelete = () => { console.log('Delete the counter') } render() { return ( <div> {this.state.counters.map(counter => <Counter ... onDelete={this.handleDelete} ... > ... </Counter> )} </div> ); ...}and add a button for deletion in class Counter as followclass Counter extends Component { ... render() { return ( <div> <button className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\" onClick={() => this.props.onDelete()} > Delete </button> </div> ); } ...}When we click delete button in <Counter>, it will trigger handleDelete in CountersreferenceDifferences between Functional Components and Class Components in ReactReact JS - React Tutorial for Beginners /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/react/2021/06/15/prop.html"},{"id":140,"title":"Layout","content":" hljs.highlightAll(); About Me Layout IntroductionWe discuss the HTML and CSS in react here.WhyTo have better understandings on how to build styles.HowIn components folder,Headerimport React from 'react'import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";import { faVideo, faCircleNotch, faCog,} from \"@fortawesome/free-solid-svg-icons\";import Logo from './images/logo.jpg'function Header() { return ( <header className=\"bg-white divide-y ml-18 border-b fixed inset-x-0\"> <div className=\"flex justify-between items-center h-14 mx-4\"> <div className=\"-ml-3\"> <img src={Logo} className=\"w-20 h-12\" /> </div> <div className=\"flex items-center justify-center flex-grow\"> <input type=\"text\" placeholder=\"Search\" className=\"border border-gray-400 h-8 px-1 py-2 focus:outline-none focus:border-blue-600 w-3/5\" /> <button className=\"bg-gray-200 flex items-center justify-center h-8 w-16 border border-gray-400 border-l-0 hover:bg-gray-300\"> <i className=\"material-icons\">search</i> </button> </div> <div className=\"flex items-center justify-center space-x-4\"> <button className=\"flex items-center justify-center\"> <FontAwesomeIcon icon={faVideo} spin /> </button> <button className=\"flex items-center justify-center\"> <FontAwesomeIcon icon={faCircleNotch} spin /> </button> <button className=\"flex items-center justify-center\"> <FontAwesomeIcon icon={faCog} spin /> </button> <button> <div className=\"h-8 w-8 rounded-full bg-blue-300 overflow-hidden object-cover\"> <img className=\"object-cover\" src=\"https://images.unsplash.com/photo-1570724061670-86a53c509dee?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=900&q=60\" alt=\"\" /> </div> </button> </div> </div> </header> )}export default HeaderAsideimport React from 'react'import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'import { faHome, faFire, faClipboard, faBook} from \"@fortawesome/free-solid-svg-icons\";function Aside() { return ( <aside className=\"fixed top-0 w-18 h-screen bg-white flex items-center flex-col mt-14 text-gray-700\"> <div className=\"mt-6 w-full\"> <button className=\"flex items-center justify-center flex-col hover:bg-gray-200 w-full py-4 text-red-600\"> <FontAwesomeIcon icon={faHome} /> <span className=\"text-xs\">Home</span> </button> <button className=\"flex items-center justify-center flex-col hover:bg-gray-200 w-full py-4\"> <FontAwesomeIcon icon={faFire} /> <span className=\"text-xs\">Trending</span> </button> <button className=\"flex items-center justify-center flex-col hover:bg-gray-200 w-full py-4\"> <FontAwesomeIcon icon={faClipboard} /> <span className=\"text-xs\">Subscriptions</span> </button> <button className=\"flex items-center justify-center flex-col hover:bg-gray-200 w-full py-4\"> <FontAwesomeIcon icon={faBook} /> <span className=\"text-xs\">Library</span> </button> </div> </aside> )}export default AsideCardimport React from 'react'function Card() { return ( <div className=\"col-span-4 sm:col-span-4 md:col-span-2 lg:col-span-1 xl:col-span-1 flex flex-col items-center\" > <div className=\"bg-white rounded-lg mt-5\"> <img src=\"https://source.unsplash.com/MNtag_eXMKw/1600x900\" className=\"h-40 rounded-md\" alt=\"\" /> </div> <div className=\"bg-white shadow-lg rounded-lg -mt-4 w-64\"> <div className=\"py-5 px-5\"> <span className=\"font-bold text-gray-800 text-lg\">Geek Pizza</span> <div className=\"flex items-center justify-between\"> <div className=\"text-sm text-gray-600 font-light\"> Size : Regular </div> <div className=\"text-2xl text-red-600 font-bold\"> $ 8.00 </div> </div> </div> </div> </div> )}export default Cardsidebarpro sidebarinstallnpm i react-pro-sidebarbasic structure with react-router-domfunction SidebarLayout() { ... return ( <div> <ProSidebarProvider> <BrowserRouter> <Sidebar> <Menu> <MenuItem routerLink={<Link to=\"#why\" />}> Documentation</MenuItem> </Menu> </Sidebar> </BrowserRouter> </ProSidebarProvider> </div> );} change style<div style= > <ProSidebarProvider > <BrowserRouter> <Sidebar backgroundColor=\"gray\" // here > <Menu> {menuItems} </Menu> </Sidebar> <Routes> <Route path=\"#why\"/> </Routes> </BrowserRouter> </ProSidebarProvider></div> nested sidebarTBCburger menuinstall the react-burger-menunpm install react-burger-menuand the code example:import { slide as Menu } from 'react-burger-menu';<Menu> <a className=\"menu-item\" href=\"/\"> Home </a> <a className=\"menu-item\" href=\"/about\"> About </a> <a className=\"menu-item\" href=\"/contact\"> Contact </a></Menu>modal install react-modalnpm i react-modal create component withimport React, { useState } from \"react\";import Modal from \"react-modal\";function App() { const [modalOpen, setModalOpen] = useState(false); return ( <div className=\"App\"> <button onClick={setModalOpen}>Open Modal</button> <Modal isOpen={Boolean(modalOpen)} onRequestClose={() => setModalOpen(false)} style={customStyles} > <div>Modal</div> <button onClick={() => setModalOpen(false)}>Close Modal</button> </Modal> </div> );}export default App; we need Boolean for isOpenlist liconst numbers = [1, 2, 3, 4, 5];const listItems = numbers.map((number) => <li>{number}</li>); ul<div> <h2>Todo List</h2> <Text value={input} onInput={(e) =>setInput(e.target.value)} /> <Button onClick={() => handleClick()}>Add</Button> <div> <ul> {todoList.map((todo) => { return ( <LIST complete = {todo.complete} id={todo.id} onClick={() => handleComplete(todo.id)} style= > {todo.task} </LIST> ); })} </ul> </div></div>formimport React, { useState } from 'react';function MyForm() { const [name, setName] = useState(''); const [email, setEmail] = useState(''); function handleSubmit(event) { event.preventDefault(); // submit the form data (e.g. via an AJAX request) } return ( <form onSubmit={handleSubmit}> <label> Name: <input type=\"text\" value={name} onChange={e => setName(e.target.value)} /> </label> <br /> <label> Email: <input type=\"email\" value={email} onChange={e => setEmail(e.target.value)} /> </label> <br /> <button type=\"submit\">Submit</button> </form> );}input input<input type=\"text\" value={name} onChange={e => setName(e.target.value)}/> type will change the appearance of UI and the format posted to backend (refer to here) select (to be continued) textarea (to be continued)<textarea />imageimport logo from './logo.png';function Image() { // Import result is the URL of your image return <img src={logo} alt=\"Logo\" />;}export default Image;Applayoutimport Header from './components/Header.js';import Card from './components/Card.js';import Aside from './components/Aside.js';function App() { return ( <div className=\"bg-gray-100 font-Roboto antialised\"> <Header /> <Aside /> <main className=\"ml-24 pt-16\"> <div className=\"grid grid-cols-4 row-gap-10 col-gap-2\"> <Card /> <Card /> <Card /> <Card /> <Card /> <Card /> <Card /> <Card /> <Card /> <Card /> <Card /> <Card /> <Card /> <Card /> <Card /> </div> </main> </div> );}export default App;render we should render <App> and all the ohter components are children of it as follow:import { createRoot } from 'react-dom/client'import './index.css';import App from './components/app.jsx'createRoot(document.getElementById('app')).render( < App />)conditionWe can use concept of ternary to achieve it{false ? (<button onClick={setTaskModalOpen} className=\"bg-white p-2\">Create Task</button>) : ('')}WhatAs you can see, the basic concept of react is to decompose the website into lots of componentsShould host a frontend to show themreferenceReact JS - React Tutorial for Beginners: The Input (Form Input) elementBuilding a To-Do List App Using React — Hooks and Styled Component /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/react/2021/06/14/layout.html"},{"id":141,"title":"React","content":" const config = { theme: 'neutral', startOnLoad:true, htmlLabels:true, }; mermaid.initialize(config); hljs.highlightAll(); About Me React IntroductionReact is an open-source JavaScript library used for building user interfaces or UI components.Why? developed by Facebook allowing developers to build complex UIs by breaking them down into smaller, reusable pieces. uses a virtual DOM (Document Object Model) to update the user interface in an efficient way. When a change occurs in a component, React only updates the affected parts of the DOM instead of re-rendering the entire page. This makes React fast and efficient. can be used for server-side rendering has a large and active community, with many resources available to help developers learn and use the library.How?start a project Create react app with following command npx create-react-app@latest your-project-name --use-npmcd your-project-namenpm start Remove all the files in /src and add index.js in it with following code: import { createRoot } from 'react-dom/client' const element = <h1>Hello World</h1>;createRoot(document.getElementById('root')).render( element) which will create a JS object and render it into the DOM with id = root in the public/index.html Naming File: There is no strict convention for naming files in React, but camel case is more commonly used for component files while snake case is more commonly used for non-component modules or helper functions. third party libraryjust install it with npm install xxx and follow the official guides tailwind for style react-fontawesome for icon fortawesome/free-solid-svg-icons for icon mui for react componentstailwindIn index.js,import './index.css';concept of componentIn React, a component is a self-contained, reusable piece of code that defines a specific part of a user interface. Components can be combined to create complex UIs, and they can be managed and updated independently, making them a powerful tool for building scalable and modular applications. For more information, please refer to componentconcept of hookhookconcept of routesIn React, routes are used to define different paths and URLs within a web application. react-router-dom is a popular library used to implement routing in React applications. For more information, please refer to routesAPIReact uses HTTP requests to communicate with APIs and obtain data that can be rendered dynamically in the user interface. This allows for interactive and responsive web applications. For more information, please refer to apilayoutlayoutrisk CSRF XSS: (TODO) try to explain how react prevent itcookieWe can access it withlet cookieValue = document.cookie.replace(/(?:(?:^|.*;\\s*)username\\s*\\=\\s*([^;]*).*$)|^.*$/, \"$1\");localStorage set itlocalStorage.setItem('token', data.token); read itlocalStorage.getItem('items')ajaxcombined with useEffect and useStatefunction NodeGraph() { const endpoint = document.querySelector('#endpoint'); const baseurl = document.querySelector('#base'); const url = `${endpoint.textContent}${baseurl.textContent}`; const [data, setData] = useState([]); useEffect(() => { fetch(`${url}/articles`) .then(response => response.text()) .then(html => { const parser = new DOMParser(); const doc = parser.parseFromString(html, 'text/html'); const articlesNode = doc.querySelector('#articles'); const articles = Array.from(articlesNode.querySelectorAll('div')).filter(div => div.querySelector('div')); return articles }) .then(articles => { const data = { nodes: [ articles.map(article => ({ id: article.getAttribute('id'), name: article.getAttribute('id'), href: article.querySelector('a').getAttribute('href') }) )], links: [ articles.map(article => ({ source: article.getAttribute('id'), target: article.getAttribute('id'), }) )] } setData(data) }) }) console.log('testing!!!') console.log(data)}File store// Sample JSON dataconst myData = { \"name\": \"John\", \"age\": 30, \"city\": \"New York\"};// Convert JSON data to a stringconst jsonString = JSON.stringify(myData);// Create a new file from the JSON stringconst file = new File([jsonString], \"myData.json\", {type: \"application/json\"});// Save the file locallysaveAs(file); read: use fetch()import React, { useState, useEffect } from 'react';function App() { const [myData, setMyData] = useState(null); useEffect(() => { fetch('myData.json') .then(response => response.json()) .then(data => setMyData(data)) .catch(error => console.error(error)); }, []); return ( <div> {myData ? ( <div> <p>Name: {myData.name}</p> <p>Age: {myData.age}</p> <p>City: {myData.city}</p> </div> ) : ( <p>Loading...</p> )} </div> );}export default App;What?sign up and login mechanismsign up and login mechanismReferenceReact JS - React Tutorial for BeginnersBuild a 3D World in React with ThreeJS and React Three Fiber【React教學】一個範例讓你搞懂useState, useRef, useEffect, 5分鐘快速教學Hooks at a GlanceReact useRef Hookreact-sidebar-menu-mediumAJAX and APIs /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/react/2021/06/13/react.html"},{"id":142,"title":"Overview","content":" hljs.highlightAll(); About Me Overview introductionThis article describes how to set up ruby on mac.Howinstall ruby manager Ruby Version Manager (RVM)curl -sSL https://get.rvm.io | bash -s stable rbenvbrew install rbenv ruby-buildbrewand then in .zshrc,export PATH=\"$HOME/.rbenv/shims:$PATH\"ruby through rbenv install: rbenv install 2.7.5 local versions: rbenv version activate: rbenv global 2.7.5 specific version for a project: rbenv local VERSION current version: ruby -v through rvm all versions: rvm list known install: rvm install 2.6 local versions: rvm list current version: ruby -v use other version: rvm use 3.0.0 change default version: rvm --default use 2.4.1 errors log: /Users/your_user_name/.rvm/log/1625795250_ruby-2.7.1/make.log solve the ruby old version cannot install on M1 problem Typesexplanation (skip)ScopeScope means the range that the variable can be use. If we define a variable, name, in a function then this variable can only be called in the function, not anywhere else; for example,(上面這個例子不對：say_hello 要印出來的東西沒寫出來)ConstantThe only rule of constant is the first letter must be uppercase; for example,Actually, all the class and module name must be constantFlow ControllerTrue or FalseOnly nil and false are considered as falseif…elsif…else…inversion: we can put if statement to the back as inversion. That is, fromtoUnless = if notTernaryIt is constructed from ? and : For example, fromtoCase…WhenCan make the if…else… to be more concise; for example, fromtoLoop and Iterationwhilecounter = 0while counter < 5 puts \"hi, #{counter}\" counter += 1endThe outputhi, 0hi, 1hi, 2hi, 3hi, 4for..inaaa = ['bbb', 'ccc', 'ddd']for a in aaa puts aendThe outputbbbcccdddtimes5.times do puts \"test\"endThe outputtesttesttesttesttestupto1.upto(5) do |i| puts \"hi, ruby #{i}\"endThe outputhi, ruby 1hi, ruby 2hi, ruby 3hi, ruby 4hi, ruby 5downto5.downto(1) do |i| puts \"hi, ruby #{i}\"endThe outputhi, ruby 5hi, ruby 4hi, ruby 3hi, ruby 2hi, ruby 1eachstrings = [\"aaa\", \"bbb\", \"ccc\", \"ddd\"]strings.each do |string| puts stringendThe outputaaabbbcccddd /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/ruby/2021/02/04/overview.html"},{"id":143,"title":"Behavior","content":" hljs.highlightAll(); About Me Behavior IntroductionHuman behavior refers to the range of actions, reactions, and patterns of relating that humans exhibit in response to their environment, themselves, and others. It is shaped by a complex interplay of biological, psychological, social, and cultural factors.Why?Understanding human behavior can help us to develop better relationships with others, improve our communication skills, and build more effective teams and organizations. It can also help us to address societal issues such as poverty, crime, and inequality, by providing insights into the root causes of these problems. Additionally, studying human behavior can lead to advances in fields such as psychology, sociology, and neuroscience, and contribute to the development of new therapies and treatments for mental and physical health disorders.How?PsychologyPsychology is the scientific study of human behavior and mental processes. It seeks to understand how individuals think, feel, and behave in various situations, as well as the underlying psychological processes that drive behavior. For more information, please refer to psychologySociologySociology is the study of human society and social behavior. It seeks to understand how social structures, institutions, and norms influence individual behavior, as well as how individuals shape and are shaped by larger social forces.AnthropologyAnthropology is the study of human societies and cultures. It seeks to understand how cultural norms, beliefs, and values shape individual behavior, as well as how individuals navigate and respond to different cultural contexts.EconomicsThe study of how individuals, organizations, and societies allocate scarce resources to satisfy unlimited wants and needs Incentives: By understanding the incentives that drive behavior, it is possible to predict how individuals will respond to different situations. For example, by offering financial incentives, it may be possible to encourage people to engage in certain behaviors, such as exercising more or quitting smoking. For more information, please refer to incentives Rationality: Traditional economics assumes that individuals are rational, meaning they make decisions based on a careful consideration of costs and benefits. However, behavioral economics recognizes that individuals may not always be perfectly rational, and may be subject to cognitive biases and other limitations. By understanding these biases, it may be possible to design policies and interventions that account for them. Externalities: Economics recognizes that individual behavior can have external effects on others, such as pollution or congestion. By understanding these externalities, it may be possible to design policies that encourage behavior that is beneficial to society as a whole. Social norms: Economics recognizes that social norms can play a powerful role in shaping behavior. By understanding the social norms that underlie certain behaviors, it may be possible to design interventions that change those norms and encourage more positive behaviors.NeuroscienceNeuroscience is the study of the brain and nervous system. It seeks to understand how brain activity and neurochemical processes relate to human behavior, as well as how brain development and plasticity can be shaped by environmental factors.What?ReferenceWhy: asking for the reason or purpose behind something.How: asking for the method or process of doing something.What: asking for information about a specific thing or object. /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/self/2023/04/16/behavior.html"},{"id":145,"title":"Software","content":" hljs.highlightAll(); About Me Software IntroductionSoftware is a set of instructions and data that tell a computer what to do Application software: This includes software applications designed for specific purposes, such as word processors, spreadsheets, video editors, and games. System software: This includes software that manages and controls the hardware and other components of a computer system, such as operating systems, device drivers, and utility programs. Embedded software: This includes software that is integrated into devices and systems such as smartphones, automobiles, and medical equipment. Web-based software: This includes software that is accessed through web browsers or other web-enabled devices, such as web applications, cloud-based software, and e-commerce platforms. Web 3.0, also known as the “decentralized web” or “semantic web”, is an evolving concept that refers to a set of new technologies and applications that aim to build a more decentralized, secure, and user-centric web. Some of the key features of Web 3.0 include decentralized data storage, decentralized identity, decentralized finance (DeFi), and decentralized applications (dApps) that run on blockchain-based platforms. Web 3.0 also aims to address some of the challenges and limitations of Web 2.0, such as issues related to data privacy, security, and ownership. Artificial intelligence and machine learning software: This includes software that uses algorithms and data to simulate human intelligence and behavior, such as natural language processing, computer vision, and predictive analytics. Database software: This includes software that is used to store, manage, and manipulate large amounts of data, such as relational database management systems (RDBMS) and NoSQL databases. Development tools: This includes software that is used to create, test, and debug other software, such as integrated development environments (IDEs), code editors, and compilers. Security software: This includes software that is designed to protect computer systems and data from unauthorized access and other security threats, such as antivirus software, firewalls, and intrusion detection systems.Why?For me as web developer Automate repetitive tasks Improved job performance Enhanced creativity of futureHow?concepts data structure and algorithm functional programmingOperating System overviewLanguage JavascriptWeb Backend Database API Rails Nodeweb frontend HTML CSS react hook (useState, useEffect) layout for HTML & CSS (sidebar) API (JWT) other force graph blockchainmachine learningmiddleware intermediary between the client and the server and runs on the serverservice self-contained units of functionality that can be used across multiple applicationsWhat? blog taskReference /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/self/2023/02/04/software.html"},{"id":144,"title":"Aesthetics","content":" hljs.highlightAll(); About Me Aesthetics IntroductionAesthetics is a branch of philosophy that deals with the nature of beauty and taste, as well as the creation and appreciation of art. It is a complex and multifaceted field that encompasses a wide range of ideas and perspectives, including cultural, historical, and philosophical approaches.(Me) To clarify, this article is to define the aesthetics. As a result, it must be confined to human-beings’ objective and subjective aspects, meaning it is not any higher dimensional solution but a temporary escape from the sufferings.Why? Enhanced appreciation of art: To develop a deeper understanding and appreciation of different forms of art, whether it be music, literature, painting, sculpture, or other forms of creative expression. Critical thinking skills: To develop a more nuanced understanding of different perspectives and worldviews, as well as sharpen your ability to articulate your own ideas and opinions. Personal growth and self-expression: Explore own sense of creativity and self-expression. Cultural and historical understanding: By studying aesthetics, you can gain a deeper understanding of different cultures and historical contexts, and how they have influenced the art and ideas of different eras.How?concepts Beauty and the sublime Beauty: The quality of an object or experience that evokes pleasure, admiration, or satisfaction Sublime, The experience of something that is awe-inspiring, overwhelming, or transcendent Form and content Form: The physical characteristics of an object or the way it is presented (e.g., color, texture, composition) Content: The meaning or message conveyed by the artwork Aesthetic experience: The subjective response one has to an object, whether it is a work of art or a natural landscape. What makes certain experiences aesthetically valuable or meaningful How different factors such as context, culture, and personal preferences can shape our aesthetic responses. Criticism and evaluation Evaluation: Evaluating artworks based on criteria such as originality, creativity, expressiveness, and technical skill Criticism: Engage in critical debates about the value and meaning of different artistic movements and styles. Immanuel Kant Most important figures in modern philosophy German philosopher of the 18th century His philosophy is often characterized as a synthesis of rationalism and empiricism He believed that all human knowledge is based on experience, but argued that our experience is shaped by our mental faculties, which are themselves governed by certain universal and necessary principles “Critique of Pure Reason” (1781) There are certain categories of thought, such as time, space, and causality, that are necessary for us to make sense of our experience of the world He distinguished between the “phenomenal” world of appearances, which is accessible to our senses, and the “noumenal” world of things-in-themselves, which is beyond our knowledge. “Noumenal” is a term used by Kant to refer to the things-in-themselves, or the objects of our experience that are beyond the realm of appearances. According to Kant, the noumenal world is the ultimate reality that exists independently of our perception of it. Kant believed that our experience of the world is shaped by our mental faculties, which impose certain necessary and universal categories on our perceptions. These categories, such as time, space, and causality, enable us to make sense of our experience of the world, but they also limit what we can know about the world. Because the noumenal world lies beyond the limits of our understanding, it is inaccessible to us. “Groundwork of the Metaphysics of Morals” (1785) Kant argued that moral principles are not based on consequences or the particular circumstances of a situation, but are rather grounded in reason itself. He believed that there are certain universal and necessary moral principles, such as the principle of respect for persons, that apply to all rational beings. “Critique of Judgment” (1790) Aesthetic judgments are based on the subjective experience of pleasure or displeasure in response to an object. Also, He argued that there are certain objective criteria that make an object beautiful, such as qualities like harmony, proportion, and unity. Kant believed that aesthetic judgments are universal in the sense. The experience of beauty is not limited to a select few individuals. Rather, anyone who has the capacity to experience pleasure can make an aesthetic judgment about an object, whether they are an expert in the field of art or not. Disinterestedness: In making an aesthetic judgment, we are not concerned with whether the object will be useful to us or serve a particular purpose. Rather, we are interested in the object purely for its own sake, and we take pleasure in contemplating its beauty. He also recognized that many works of art have some kind of purpose, such as religious or political art, and that this purpose does not necessarily detract from their status as art. A solution can still be considered art if it is created with the intention of providing an aesthetic experience and is able to elicit a disinterested pleasure in the viewer. The idea that not just the solution, but also the process, is aesthetic. In architecture, the design process itself can be seen as an aesthetic experience, as architects make creative choices about form, function, and materials in order to create beautiful and functional buildings. In product design, the process of creating a product can be seen as an aesthetic experience, as designers make choices about the form, color, and texture of the product in order to create a pleasing and functional design. In creative arts, such as painting or sculpture, the creative process itself can be seen as an aesthetic experience, as artists make choices about composition, color, and form in order to create works that are beautiful and meaningful. (Me) So whether there is a correct way during the process? => Let’s proceed to Arthur SchopenhauerArthur Schopenhauer 19th century German philosopher pessimistic views on human existence and the importance of individual experience and subjectivity. “The World as Will and Representation,” (1818) Will is the underlying, unconscious force that drives all life Representation is the world as it appears to us through our senses Will is the source of all human suffering and desire, and the only way to escape this suffering is to deny the will through the practice of asceticism or the contemplation of aesthetic experience. He argues that art and beauty offer a temporary escape from the suffering of the will, allowing us to experience a moment of transcendence and detachment from the world (Me) Ok, so it seems aesthetics helps people escape suffering and the process of creating object should try our best to think how to transport the viewer beyond the limitations of individual existence and connect them with a deeper, universal reality. In this way, the creator’s choices in form, color, and texture are aimed at evoking a sense of transcendence and beauty in others, and helping them to escape from the suffering of the will. So which one can help the most? => According to WHO, the biggest suffering now is Mental health issues such as Depression, anxiety, stress => What’s the causes of these sufferings? => Please refer to next sectionCauses of mental illnessOn the point of Existentialist philosophers Jean-Paul Sartre and Martin Heidegger Mental health issues can be caused by a sense of meaninglessness or purposelessness in life Human beings are fundamentally free, but that this freedom can be overwhelming and lead to feelings of anxiety and despair Depression and other mental health issues can arise when individuals feel cut off from their own sense of purpose and creativity Solution: Take responsibility for own choices and actions, embrace own freedom, create their own meaning in life, rather than relying on external sources of meaning or authority Psychoanalytic theorists Sigmund Freud and Jacques Lacan Mental health issues can be caused by unconscious conflicts and repressed emotions. According to this view, individuals may be struggling with unresolved traumas or unresolved feelings, which can lead to symptoms such as anxiety or depression Solution: Psychoanalysis, a form of talk therapy that aims to explore and resolve unconscious conflicts and unresolved psychological issues that contribute to mental health issues. Social and critical theorists Michel Foucault Mental illness is not simply an individual problem, but is also shaped by broader social and political forces. According to Foucault, mental illness is often the result of a complex interplay between power, knowledge, and social norms Solution: Address and challenge broader social structures, rather than solely focusing on individual-level interventions. This can involve advocating for policy changes that address social inequality, challenging cultural norms and values that contribute to mental health issues, and creating more supportive and inclusive communities. (Me) Is there a standard to evaluate these three factors? => biopsychosocial model (next section)Biopsychosocial Model Understanding the biological basis of aesthetics: By examining the neurological processes involved in aesthetic experiences, researchers can gain insights into how our brains respond to different forms of art and beauty. For example, studies have shown that certain areas of the brain, such as the prefrontal cortex and the amygdala, are involved in our emotional responses to art. Examining the psychological factors that influence aesthetic preferences: By studying the role of personality traits, emotional states, and cognitive processes in aesthetic judgments, researchers can gain a better understanding of why people have different aesthetic preferences. For example, studies have shown that people who score high in the personality trait of openness to experience tend to have more varied and eclectic aesthetic tastes. Considering the social and cultural factors that shape aesthetic preferences: By examining the role of cultural background, social norms, and peer influences in shaping aesthetic preferences, researchers can gain insights into how these factors contribute to the diversity of aesthetic experiences across different societies and cultures. (Me) Now I know there are certain reasons these factors connects to aesthetics. But right before human-beings, the universe is there. How to define the aesthetics of universe? => Objective aspects, all the universal rules, no subjective aspects at all => Now the design fitting aesthetics well with two meanings: Reduce the chaos people produced themselves => Why people create own chaos? Existentialism: Creating one’s own chaos can be seen as a way of asserting one’s freedom and individuality. Existentialists believe that humans are fundamentally free, and that we must create our own meaning in life. For some, creating chaos can be a way of asserting their freedom and creating a sense of meaning or purpose in their lives. Stoicism: Creating chaos could be seen as a failure to cultivate inner calm and rationality. Stoics believe that we should focus on what we can control, and that our emotions should not be ruled by external events. Creating chaos could be seen as a failure to maintain this inner calm, and a failure to focus on what is truly important. Buddhism: Creating chaos could be seen as a manifestation of the ego, which seeks to create a sense of self-importance and identity. Buddhism teaches that suffering is caused by attachment to the ego and the external world, and that true happiness comes from letting go of these attachments. Creating chaos could be seen as a manifestation of attachment to the ego and the external world, rather than a focus on inner peace and well-being. Follow the universal rules as many as possible => Why people cannot follow universal rules? Ethics: People may prioritize their own interests over the interests of others, or that they may have conflicting moral obligations. Social and Political Philosophy: People may not follow rules if they do not believe that they have agreed to them. Epistemology: Due to limitations in their knowledge or understanding. Existentialism: Because of their individualistic and subjective nature. (Me) Now I know the practical solutions: Incentivizing following universal rules and Discouraging creating chaos. But both of these solutions can trigger side effects according to other philosophies. As a result, the only way is to combine both => Promoting positive social norms Promoting Positive Social NormsMy definition of positive social norms is people should try their best to extend human society because if something cause problems, something will be eliminate eventually, meaning I should try to increase humanity.Design Principle breadth (region) Adaptability: Designs should be adaptable to changing environmental conditions. Resilience: Designs should be resilient to environmental hazards such as floods, storms, and earthquakes. This might involve designing structures that can withstand high winds or flooding, or developing systems that can continue to operate in the event of power outages or other disruptions. Resource efficiency: Designs should be resource-efficient and minimize waste. This might include designing structures that use renewable energy sources such as solar or wind power, or developing systems that conserve water and other resources. Mobility: Designs should promote mobility and enable people to move between regions or environments. This might include developing new transportation systems or designing structures that can be easily relocated. Connectivity: Designs should promote connectivity and enable people to communicate and collaborate across regions or environments. This might include developing new communication technologies or designing structures that facilitate social interaction and community building. depth (time) Sustainable and regenerative design: This involves designing systems and structures that minimize waste, reduce energy consumption, and use renewable resources wherever possible. It also involves designing for biodiversity, ecosystem services, and regenerative practices. Resilient infrastructure: This involves designing infrastructure that is resilient to natural disasters and other disruptions, and that can adapt to changing conditions and challenges over time. It also involves designing for redundancies, flexibility, and redundancy. Social and economic equity: This involves designing social and economic systems that are equitable and inclusive, and that promote access to basic needs such as food, shelter, education, and healthcare. It also involves designing for diversity, inclusion, and accessibility. Technological innovation: This involves designing and developing new technologies that can address current and future challenges facing human society, such as climate change, resource depletion, and environmental degradation. Participatory design: This involves involving diverse stakeholders and communities in the design process, and ensuring that their needs and perspectives are considered and incorporated into the design of systems and structures. What?Increase Personal Aesthetics Observe and appreciate art Visit museums, galleries, and exhibitions Observe and appreciate different types of art Understand different styles and techniques to broaden artistic perspective Practice art Sketch Origami Music Experiment with design: Experiment with design principles, such as color, form, and composition, in your daily life. This can help you develop a better eye for aesthetics and recognize good design. Explore nature: Nature is a great source of inspiration for aesthetics. Take the time to explore natural landscapes, observe the details, and appreciate the beauty of the natural world. Engage with different cultures: Different cultures have different aesthetic values and norms. Engaging with different cultures and their art can broaden your understanding of aesthetics and help you appreciate the diversity of the world.Increase Personal HumanityBased on the idea of humanity Practice empathy and kindness: One of the simplest ways to increase humanity is to be kind to others and treat them with empathy and compassion. This can involve things like listening actively, offering a helping hand, and being supportive. Volunteer and donate: Volunteering your time or donating to a worthy cause can have a big impact on your community and beyond. You can volunteer at a local shelter, soup kitchen, or other organization that helps those in need. You can also donate to charities that support causes you care about. Educate yourself: Educating yourself on the issues facing the world today is an important step in increasing humanity. Read books, watch documentaries, and seek out diverse perspectives to gain a better understanding of the world around you. Speak out against injustice: When you see injustice happening, speak out against it. This can involve writing letters to your elected officials, joining protests, and standing up for those who are marginalized. Foster positive relationships Building positive relationships with the people Listening actively, being supportive, and showing appreciation for the people in your life Some experts recommend having at least three to five close relationships that are characterized by mutual support, trust, and intimacy I can use the five close relationships to evaluate myself At least, family, friends, coworkers WebsiteBased on the idea of promoting positive social norms Adaptability Mobile-first approach: Designing for mobile devices first ensures that the website’s core features and content are accessible to users on smaller screens. This approach also makes it easier to scale up the design for larger screens. Responsive design: Adjust its layout and content based on the screen size of the device it is being viewed on. Scalable Vector Graphics (SVGs): SVGs are vector-based graphics that can be scaled up or down without losing their quality. They are a great option for logos, icons, and other design elements that need to be displayed at different sizes on different devices. Flexible Grids: Using flexible grids, such as CSS Grid or Flexbox, can help create a layout that adapts to different screen sizes. This allows the website to adjust the size and position of elements on the page automatically. Progressive enhancement: This approach involves designing a website that works on all devices and browsers, regardless of their capabilities. It starts with a basic version of the website that works on older devices and then adds more advanced features for newer devices. Resilience Minimize downtime: Use a reliable web hosting provider, ensure that your website is regularly backed up, and have a plan in place for quickly restoring the website in the event of a disruption or outage. Design for redundancy: Create redundant systems or backup servers that can take over if the main server fails. This ensures that the website can remain operational even if there is a hardware failure or other unexpected outage. Optimize performance: Optimize the website’s performance by minimizing page load times, using caching, and compressing images and other media. This will help the website to continue functioning smoothly even during periods of high traffic or other demand. Use robust coding practices: Use secure coding practices, keep software and plugins up to date, and use a Content Management System (CMS) that is known for its security and reliability. Test regularly: Test the website regularly to ensure that it is functioning as expected and to identify and address any issues before they become major problems. Resource efficiencyReferenceWhy: asking for the reason or purpose behind something.How: asking for the method or process of doing something.What: asking for information about a specific thing or object. /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/self/2023/04/07/aesthetics.html"},{"id":147,"title":"Jest","content":" hljs.highlightAll(); About Me Jest IntroductionTBCWhy?TBCHow?terminal install jestnpm install jest --global run itjest -- file_name.spec.jsnodespecreactWhat?give github urlReference /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/test/2023/01/01/jest.html"},{"id":146,"title":"Why","content":" const config = { theme: 'neutral', startOnLoad:true, htmlLabels:true, }; mermaid.initialize(config); hljs.highlightAll(); About Me Why IntroductionThis article records my thoughts about meaning of life.Why?It keeps bothering me although I have family, friends, belief, career, self care, health, volunteering, creation.How?Throughout history, many thinkers have explored philosophical and existential questions related to the meaning and purpose of human existence, which has led to a variety of possible answers: Finding meaning and purpose Pursuing personal growth and self-actualization Making a positive impact on others Contributing to society Experiencing joy and happiness Fulfilling religious or spiritual beliefsWhatFinding Meaning and PurposeBased on aesthetics, My core value is humanity => I can do volunteering and write blogs for recording.Pursuing Personal Growth and Self-ActualizationMy specific goal is to build an app for humanity increasing => I tried my best to work on software.Making Positive Impacts on OthersI will try to find ways to practice active listening and empathy to better understand and support those around me be of service to others in your community or workplace spread kindness and positivity through small acts of generosity and compassionI find it’s hard for me to achieve them and the reasons may be Personal factors such as a lack of confidence, social anxiety, or past negative experiences -> study psychology External factors such as a stressful work environment, a lack of support or resources, or feeling overwhelmed by personal responsibilities -> study behavior economics Not knowing where to start or feeling unsure of how to make a meaningful impact -> try to land a regular volunteer eventsContributing to society(to be continued)Get involved in community organizations or local government to make a difference in your community.Donate time or resources to a cause or organization you care about.Vote and advocate for policies and issues that align with your values.Experiencing joy and happiness(to be continued)Engage in activities that bring you joy and pleasure, such as hobbies or spending time with loved ones.Practice mindfulness and gratitude to appreciate the present moment.Make self-care a priority, including getting enough sleep, exercise, and nutrition.Fulfilling religious or spiritual beliefs(to be continued)Connect with a community of like-minded individuals through a place of worship or spiritual organization.Set aside time for prayer, meditation, or reflection.Seek out opportunities to practice compassion, forgiveness, and kindness towards others.reference你有沒有用「對的方式」和另一半溝通？在一段感情裡該盡的6個責任愛的 5 種語言Jordan Peterson - Are You a Good Person? /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/self/2023/01/28/why.html"},{"id":148,"title":"Continuous Integration Continuous Deployment","content":" hljs.highlightAll(); About Me Continuous Integration Continuous Deployment Introductionquick explanationWhy?focus on why we need itHow?focus on the mechanimWhat?give an exampleReference /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/test/2022/09/03/continuous-integration-continuous-deployment.html"},{"id":149,"title":"Overview","content":" hljs.highlightAll(); About Me Overview IntroductionThis article tries to clarify the concepts related to testWhy?Tests can prevent bugs earlier.How?concept of testingAdd pyramid to demo the decomposition of tests end-to-end -> integration -> unit (TBC)The end goal of testing is to make sure users have good experience, so before users use our app, we should let testers do what users will do in all scenarios and check whether the experience is acceptable. We call this kind of tests end-to-end test or quality assurance.AAA principle (Arrange -> Act -> Assert) The basic principle to build spec is AAA principle.arrange: describe the environment before action beginact: execute the unit function that we want to testassert: check whether the result is what we wantintegration testingDuring the end-to-end testing, there must be some fix processes, and we can automize them with integration testing, which simulates the users behaviors on browsers and ensure the expect results.unit testingUnit tests mainly ensures the input and output of each components such as code for database query, flows in controller, and the presentation on view, but it do not simulate the users’ behaviors.functional testingTBCtest driven developmentTDD maps to unit testing. We write unit test first and then develop software.behavior driven developmentBDD maps to integration testing. We write feature test first and then develop software.What?TDDTDD maps unit test. Refer to TDD for further information.BDDBDD maps integration test maps capybara + Rspec. Refer to 2022-08-31-behavior-driven-development-in-rspec-and-capybara.md.ReferenceWhat is Software Testing? DefinitionTesting Pyramid : How to jumpstart Test Automation /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/test/2022/09/02/overview.html"},{"id":150,"title":"Rspec And Capybara","content":" hljs.highlightAll(); About Me Rspec And Capybara IntroductionRSpec is a testing framework for Ruby that allows you to write tests for your Ruby code.Why? Easy-to-read: RSpec provides a clean and easy-to-read syntax for writing tests, making it easier for you and your team to understand the intent of the tests and to quickly identify any issues. Powerful matchers: RSpec comes with a wide range of built-in matchers that allow you to easily test for a variety of conditions, such as whether a value is equal to another value or whether an error is raised. Test organization: RSpec allows you to group your tests into logical sections using describe and context blocks, making it easier to understand and maintain your test suite. Test-driven development: RSpec supports a test-driven development (TDD) workflow, where you write tests before writing the actual code. This can help you ensure that your code is well-tested and reliable from the start. Integration with other tools: RSpec can integrate with other tools, such as SimpleCov for code coverage analysis and Guard for running tests automatically when changes are made to your code.How?Install rspecInstall RSpec by adding it to your Gemfile and running bundle install. Alternatively, you can install it using the command gem install rspec.Create spec Create a directory named spec at the root of your project. This directory will contain your test files. Create a test file in the spec directory with the name of the file you want to test, followed by _spec.rb. For example, if you want to test a file named calculator.rb, the test file should be named calculator_spec.rb.In the test file, require the file you want to test and RSpec by adding the following code at the top:require_relative '../calculator'require 'rspec'describe Calculator do describe \"#add\" do it \"returns the sum of two numbers\" do calc = Calculator.new expect(calc.add(2, 3)).to eq(5) end endendThis test describes the behavior of the add method in the Calculator class. It creates a new instance of the Calculator class and expects the result of calc.add(2, 3) to be equal to 5.shared exampleShared examples can help avoiding repetition and keep specs DRY (Don’t Repeat Yourself). Example:# Define a shared exampleRSpec.shared_examples \"a collection object\" do it \"should have a size method\" do expect(subject).to respond_to(:size) end it \"should have an empty? method\" do expect(subject).to respond_to(:empty?) endend# Use the shared example in a specRSpec.describe Array do include_examples \"a collection object\" # Add additional specs for the Array classend# Use the shared example in another specRSpec.describe Hash do include_examples \"a collection object\" # Add additional specs for the Hash classendWhat?I am going to demonstrate BDD with RSpec and Capybara to develop user login functions.Steps: install required gems describe user story compose specification build featureinstall required gemsCreate rails app byrails new appIn gemfile,group :development, :test do gem 'rspec-rails'endgroup :test do gem 'capybara' gem 'selenium-webdriver'endRunbundle installdescribe user storyAgain we can use AAA principle to compose specUser goes to the login page (arrange) -> Enter email and password and then click login button (act) -> the webpage redirect to the webpage user clicked before (assert)Compose SpecificationGenerate spec throughrails g rspec:feature user_loginto produce spec/feature/user_login_spec.rb and inputrequire 'spec_helper'RSpec.describe \"user signin\", type: :feature do before :each do User.create(email: 'user@example.com', password: 'password') end context \"after user on sign in page\" do before do visit '/users/sign_in' end it \"signs user in\" do fill_in \"user_email\", with: 'user@example.com' fill_in \"user_password\", with: 'password' click_button 'Log in' expect(page).to have_content 'Signed in successfully.' end endendbuild featurerun all spec with bundle exec rspec or specific spec with bundle exec rspec spec/features/user_login_spec.rb and keep building the features until no errors pop up.ReferenceWhat is Integration Testing? Software Testing TutorialIntegration Testing Ruby on Rails with Minitest and CapybaraGenerators /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/test/2022/08/31/rspec-and-capybara.html"},{"id":151,"title":"Test Driven Development","content":" hljs.highlightAll(); About Me Test Driven Development IntroductionTDD is a software development process by writing test first and then keeping testing the software until all required function developed. The steps: turn business logic into specifications decompose specifications into functions (MVC) define all desired input and output of each function write test first for every function given the tests, compose codebase to realize business logicWhyTDD reduces bugs and increase the quality of code, making software to be more maintainable and understandable. With no test, there would be more manual test in the future and it would be hard to update the version.How?AAA principle (Arrange -> Act -> Assert) The basic principle to build spec is AAA principle.arrange: describe the environment before action beginact: execute the unit function that we want to testassert: check whether the result is what we wantAAA principle maps RspecRSpec.describe \"the_summary\", type: :feature do context \"arrange\" do it \"assertion\" do \"act\" end endendrspecAAA principle maps Jestdescribe('Test sum', () => { test('adds 1 + 2 to equal 3', () => { // arrange const a = 1; const b = 2; it('should add them correctly', () => { // assert expect(a + b).toBe(3); // act }); })})jestWhat?Practical exampleFor example, a woodcutter go into a forest (arrange the environment) -> the woodcutter use the axe to cut the wood (act the function) -> and the woodcutter should get the woods (assert the result). If the woodcutter does not like the result, woodcutter should modify the act.Generate SpecificationIn terminal, create a directory, model, and test as followdirectory & rspec installingmkdir woodcuttercd woodcuttergem install rspecmodel & rspectouch woodcutter.rbmkdir speccd spectouch woodcutter_spec.rbIn woodcutter_spec.rb,require_relative '../woodcutter'describe Woodcutter do context \"after woodcutter enter the forest\" do it \"get a wood\" do woodcutter = Woodcutter.new(true, 0) woodcutter.cut expect(woodcutter.woods).to be 1 end endendIn the params of new, true means the woodcutter now is in forest and 0 means the number of wood the cutter has.After the spec (or test) done, different steps trigger on different mindset. Given, the TDD or BDD mindset, we should run the woodcutter_spec.rb multiple times until the woodcutter.rb achieves the demand in woodcutter_spec.rbBuild the featureExecute RSpec iterativelyrspec woodcutter_spec.rbGiven the errors from RSpec, I can gradully build the feature as follow. NameError: uninitialized constant Woodcutter => create Woodcutter in woodcutter.rb ArgumentError: wrong number of arguments (given 1, expected 0) => create initialize method in Woodcutter with params, in_forest & init_count NoMethodError: undefined method ‘cut’ => create cut method NoMethodError: undefined method ‘woods’ => create woods method expected #<Integer:3> => 1, got #<NilClass:8> => nil => add the @quantity in initialize, cut, and woods as follow @quantity = init_count in initialize @quantity += 1 in cut @quantity in woods Then the whole class:class Woodcutter def initialize(in_forest, init_count) @quantity = init_count end def cut @quantity += 1 end def woods @quantity endendEnvironmentWe should add another class for woodcutter to walk into the forest and add before block to setup the environment.skipReferenceLearn TDD in Rails Learn TDDRuby on Rails 實戰聖經https://en.wikipedia.org/wiki/Test-driven_developmentHello Testing - iT 邦幫忙::一起幫忙解決難題，拯救 IT 人的一天What are the different kinds of Rails tests and when should I use each? - Code with Jasonteamcapybara/capybararspec/rspec-rails /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/test/2021/04/06/test-driven-development.html"},{"id":152,"title":"React Three Fiber","content":" hljs.highlightAll(); About Me React Three Fiber IntroductionGiven we have basic concepts of react, threeJS and 3D model, we can start to build a 3D frontend.Why?focus on why we need itHow?create a react appRefer to react/2021-06-13-overviewinstallRefer to react-three-fiberfirst threejs componentimport React, { useRef, useState } from 'react'import { Canvas, useFrame } from '@react-three/fiber'function Box(props) { // This reference gives us direct access to the THREE.Mesh object const ref = useRef() // Hold state for hovered and clicked events const [hovered, hover] = useState(false) const [clicked, click] = useState(false) // Subscribe this component to the render-loop, rotate the mesh every frame useFrame((state, delta) => (ref.current.rotation.x += 0.01)) // Return the view, these are regular Threejs elements expressed in JSX return ( <mesh {...props} ref={ref} scale={clicked ? 1.5 : 1} onClick={(event) => click(!clicked)} onPointerOver={(event) => hover(true)} onPointerOut={(event) => hover(false)}> <boxGeometry args={[1, 1, 1]} /> <meshStandardMaterial color={hovered ? 'hotpink' : 'orange'} /> </mesh> )}export default Box; useFrame: it will execute codes on every rerendered frame size: TBCbackgroundconst Background = props => { const {gl} = useThree(); const texture = useTexture('/autoshop.jpg') const formatted = new THREE.WebGLCubeRenderTarget(texture.image.height).fromEquirectangularTexture(gl, texture) return( <primitive attach=\"background\" object={formatted.texture} /> )}<Suspense fallback={null}> <Background /></Suspense>import 3D modelturn gltf into jsx componentnpx gltfjsx xxx.glbit will produce something as follow:import React, { useRef } from 'react'import { useGLTF } from '@react-three/drei'export function Model(props) { const { nodes, materials } = useGLTF('/cat.glb') return ( <group {...props} dispose={null}> <mesh geometry={nodes.Cube.geometry} material={materials.Material} /> <mesh geometry={nodes['12221_Cat_v1_l3'].geometry} material={materials.Cat} /> </group> )}useGLTF.preload('/cat.glb')perspectiveAdd an orbit_control listening to the mouse of the domElement and modify the camera according to the mouse movementconst CameraController = () => { const { camera, gl } = useThree(); useEffect( () => { const controls = new OrbitControls(camera, gl.domElement); controls.minDistance = 3; controls.maxDistance = 20; return () => { controls.dispose(); }; }, [camera, gl] ); return null;};and put it in <Canvas>animateYou can find how to build animation in threeJS character and we can use it withuseEffect(() => { actions.ArmatureAction.play()})to keep rerender itinteractionWe can add some interaction with users; for example, we canimport { useFrame, useThree } from '@react-three/fiber'const group = useRef()const { viewport } = useThree()useFrame(({ mouse }) => { const x = (mouse.x * viewport.width) / 2 const y = (mouse.y * viewport.height) / 2 group.current.position.set(x, y, 0) group.current.rotation.set(-y, x, 0)})to let mouse move the current objectlight and colorWe may found the render is all black. To avoid it, add some light in <Canvas><Canvas> <directionalLight position={[10, 10, 5]} intensity={2} /> <directionalLight position={[-10, -10, -5]} intensity={1} /></Canvas>routesBefore we dive in, please see concept of routes in react in react/2021-06-13-overviewfunction App() { <div> <Canvas> <Router> <Routes> <Route path=\"/\" element={<Box position={[-1.2, 0, 0]} />} /> </Routes> </Router> </Canvas> </div>}export default Appand import it<Router> <App /></Router>deployTo deploy it remember to wrap components with <Suspense>What?Ok, I am trying to create a world based on 2022-08-13-best-systemReferencereact-three-fiberLoading ModelsWorking with GLB models in React.js: Import 3d Text from Vectary using React-three-fiberhttps://github.com/pmndrs/gltfjsxPart 5: Looking at our Cursor /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/threejs/2022/09/04/react-three-fiber.html"},{"id":153,"title":"Threejs Character","content":" { \"imports\": { \"three\": \"https://unpkg.com/three@0.140.0/build/three.module.js\", \"orbit_controls\": \"https://unpkg.com/three@0.140.0/examples/jsm/controls/OrbitControls.js\", \"GLTF_loader\": \"https://unpkg.com/three@0.140.0/examples/jsm/loaders/GLTFLoader.js\" } } hljs.highlightAll(); About Me Threejs Character IntroductionThis article describes how to create a character in ThreeJS.Why?To create 3D characters in my projectHow?create character in blenderI just use some free 3D model because I have no idea on building own characters. Remember to export it as glTF.create one or load one -> design appearance -> add armatures -> edit poses -> animatecreate sceneimport * as THREE from 'three';...const scene = new THREE.Scene();...import it into threeJS and add it into scenePlease refer to 2022-04-30-threeJS-overview.md for basic concepts. Because I am now using CDN, remember to add it in importmap{ \"imports\": { ..., \"GLTF_loader\": \"https://unpkg.com/three@0.140.0/examples/jsm/loaders/GLTFLoader.js\" }}and then use it withimport { GLTFLoader } from 'GLTF_loader';const loader = new GLTFLoader();loader.load('path/to/model.glb', // load the image function(gltf) { scene.add(gltf.scene); // add it to scene }, undefined, function(error) { console.error( error ); });render itconst renderer = new THREE.WebGLRenderer({ canvas: document.querySelector('#threeExample'),})...renderer.render(scene)You also need to specify correct position of camera, light and use animation to render it correctly.What? import * as THREE from 'three'; import { GLTFLoader } from 'GLTF_loader'; const scene = new THREE.Scene(); const fieldOfView = 75 const aspectRatio = window.innerWidth / window.innerHeight const nearestDistance = 0.1 const farthestDistance = 1000 const camera = new THREE.PerspectiveCamera(fieldOfView, aspectRatio, nearestDistance, farthestDistance) camera.position.set(0,1,2); const light = new THREE.DirectionalLight(0xffffff, 1) light.position.set(2,2,5); scene.add(light) const loader = new GLTFLoader(); const renderer = new THREE.WebGLRenderer({ canvas: document.querySelector('#threeExample'), }) loader.load( '/blog/assets/3d/cat.glb', function(glb) { console.log('load successfully') const root = glb.scene root.scale.set(0.5,0.5,0.5) scene.add(glb.scene); }, undefined, function(error) { console.error(error); } ); renderer.setSize(window.innerWidth, window.innerHeight) renderer.setPixelRatio(window.devicePixelRatio) renderer.shadowMap.enable = true renderer.gammaOutput = true function animate() { requestAnimationFrame(animate) renderer.render(scene, camera) }animate()ReferencemixamoImport FREE Rigged and Animated Characters into Blender with the Adobe Mixamo Add-OnCharacter creation in ThreeJSWolf Rigged And Game ReadyLoading 3D modelsHow to Load a 3D model in Three.js, GLTF/GLB Model, GLTFLoaderIntro to Rigging an Armature to a character in Blender 3.0Learn Blender Rigging and Animation in 1 Minute!Loading Animated Characters in React Three Fiber /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/threejs/2022/05/01/threeJS-character.html"},{"id":154,"title":"(threeJS) overview","content":" { \"imports\": { \"three\": \"https://unpkg.com/three@0.140.0/build/three.module.js\", \"orbit_controls\": \"https://unpkg.com/three@0.140.0/examples/jsm/controls/OrbitControls.js\", \"GLTF_loader\": \"https://unpkg.com/three@0.140.0/examples/jsm/loaders/GLTFLoader.js\" } } hljs.highlightAll(); About Me (threeJS) overview IntroductionThreeJS is for 3D modeling on frontend.Structure of article: install threeJS environment: scene, camera, render create object in scene mesh lighting helper for interaction with usersWhy?TBCHow?install threeJSFollow the instruction in InstallationI use CDN method on github pages and remember to find the version you want in three.js. After installation, we can import it with <script> as follow<script type=\"module\"> import * as THREE from 'three'; const scene = new THREE.Scene();</script>environment: scene, camera, renderTo start threeJS, we always need scene, camera, render.sceneScene is containerconst scene = new THREE.Scene();cameraCamera defines the way to capture the scene. The basic script to define camera:const fieldOfView = 75const aspectRatio = window.innerWidth / window.innerHeightconst nearestDistance = 0.1const farthestDistance = 1000const moveOnZaxis = 30const camera = new THREE.PerspectiveCamera(fieldOfView, aspectRatio, nearestDistance, farthestDistance)camera.position.setZ(moveOnZaxis);rendererJust the way to render everything in canvasconst renderer = new THREE.WebGLRenderer({ canvas: document.querySelector(#threeExample),})renderer.setPixelRatio(window.devicePixelRatio);renderer.setSize(window.innerWidth, window.innerHeight)renderer.render(scene, camera)create objectAfter setting up the environment, we can now create an object in the scene. mesh with geometry and material lightingmesh with geometry and materialWe use Mesh to combine the elements, geometry and material and re-render it with movement we define in a loop.const geometry = new THREE.TorusGeometry(10, 3, 16, 100)const material = new THREE.MeshBasicMaterial({color: 0xFF6347, wireframe: true})const torus = new THREE.Mesh(geometry, material);scene.add(torus)function animate() { requestAnimationFrame(animate); torus.rotation.x += 0.01; torus.rotation.y += 0.005; torus.rotation.z += 0.01; renderer.render(scene, camera);} animate()lightingchange material fromconst material = new THREE.MeshBasicMaterial({color: 0xFF6347, wireframe: true})toconst material = new THREE.MeshStandardMaterial({color: 0xFF6347})and add light at the x, y, z position we what as followconst pointLight = new THREE.PointLight(0xffffff)pointLight.position.set(5, 5, 5)If we want all the object to be illuminated, addconst ambientLight = new THREE.AmbientLight(0xffffff)scene.add(pointLight, ambientLight)helperYou may start to find it hard to track. We can use some helper as follow:light helperIt helps us to know the position of the lightconst lightHelper = new THREE.PointLightHelper(pointLight)scene.add(lightHelper)grid helperIt will draw gridsconst gridHelper = new THREE.GridHelper(200, 50)scene.add(gridHelper)interaction with usersWe can add an orbit_control listening to the mouse of the domElement and modify the camera according to the mouse movement.<script type=\"importmap\"> { \"imports\": { ..., \"orbit_controls\": \"https://unpkg.com/three@0.140.0/examples/jsm/controls/OrbitControls.js\" } }</script>...import {OrbitControls} from 'orbit_controls';const controls = new OrbitControls(camera, renderer.domElement);function animate() { ... controls.update(); ...}textureWe can load texture with TextureLoader()backgroundconst backgroundImagePath = \"/blog/assets/img/space.jpeg\"const spaceTexture = new THREE.TextureLoader().load(backgroundImagePath);scene.background = spaceTexture;texture mappingFor example, we want to create a moon. Go find the moon_texture and thenconst moonTexture = new THREE.TextureLoader().load('/blog/assets/img/moon_texture.jpeg');const moon = new THREE.Mesh( new THREE.SphereGeometry(3, 32, 32), new THREE.MeshStandardMaterial({ map: moonTexture, }))scene.add(moon)What?Render it into <canvas> Hello World import * as THREE from 'three'; import {OrbitControls} from 'orbit_controls'; const scene = new THREE.Scene(); const fieldOfView = 75 const aspectRatio = window.innerWidth / window.innerHeight const nearestDistance = 0.1 const farthestDistance = 1000 const moveOnZaxis = 30 const camera = new THREE.PerspectiveCamera(fieldOfView, aspectRatio, nearestDistance, farthestDistance) const renderer = new THREE.WebGLRenderer({ canvas: document.querySelector('#threeExample'), }) camera.position.setZ(moveOnZaxis); renderer.setPixelRatio(window.devicePixelRatio); renderer.render(scene, camera) //////////////////////////////////// const geometry = new THREE.TorusGeometry(10, 3, 16, 100) const material = new THREE.MeshStandardMaterial({color: 0xFF6347}) const torus = new THREE.Mesh(geometry, material); scene.add(torus) //////////////////////////////////// const pointLight = new THREE.PointLight(0xffffff) pointLight.position.set(5, 5, 5) const ambientLight = new THREE.AmbientLight(0xffffff) scene.add(pointLight, ambientLight) ///////////////////////////////////// const lightHelper = new THREE.PointLightHelper(pointLight) scene.add(lightHelper) const gridHelper = new THREE.GridHelper(200, 50) scene.add(gridHelper) ///////////////////////////////////// const controls = new OrbitControls(camera, renderer.domElement); ///////////////////////////////////// const backgroundImagePath = \"/blog/assets/img/space.jpeg\" const spaceTexture = new THREE.TextureLoader().load(backgroundImagePath); scene.background = spaceTexture; const moonTexture = new THREE.TextureLoader().load('/blog/assets/img/moon_texture.jpeg'); const moon = new THREE.Mesh( new THREE.SphereGeometry(3, 32, 32), new THREE.MeshStandardMaterial({ map: moonTexture, }) ); scene.add(moon) ///////////////////////////////////// function animate() { requestAnimationFrame(animate); torus.rotation.x += 0.01; torus.rotation.y += 0.005; torus.rotation.z += 0.01; controls.update(); renderer.render(scene, camera); } animate()ReferenceInstallationBuild a Mindblowing 3D Portfolio Website // Three.js Beginner’s Tutorial /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/threejs/2022/04/30/threeJS-overview.html"},{"id":155,"title":"Overview","content":" hljs.highlightAll(); About Me Overview IntroductionM2 seems cannot use zsh, so use kitty terminal instead but still use oh my zsh and Powerlevel10kWhy?How?brew install add exportIn .zshrc,export PATH=/opt/homebrew/bin:$PATHiterm2 or kitty install iterm2brew install iterm2 install kitty terminalzshbrew install zshPowerlevel9k installgit clone https://github.com/bhilburn/powerlevel9k.git ~/.oh-my-zsh/custom/themes/powerlevel9k enableIn .zshrcZSH_THEME=\"powerlevel9k/powerlevel9k\"github sshreferencevscodevscode terminal settingsObsidian obsidian sync move the vault (where you specify the files path when you create it) to the new computerWhat?give an exampletestReference /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/tools/2023/02/02/overview.html"},{"id":156,"title":"Overview","content":" hljs.highlightAll(); About Me Overview IntroductionThis article describes how to create basic component with all life cycle.Why?How?initinstallnpm install -g @vue/clicreate projectvue create project-namebasic structureWhen to extract a component? When you believe this component can be used in another scenario.indexcreate components/AppIndex.vue<template> <div> <Modal :modalOpen=\"modalOpen\" :modalOptions=\"modalOptions\" @refreshRecords=\"refreshRecords\" @closeModal=\"closeModal\" /> <div class=\"\" @click=\"openModal\"> <span>create record</span> </div> <Records :records=\"records\" @editRecord=\"editRecord\" @deleteRecord=\"deleteRecord\" /> </div></template><script>import Modal from './components/Modal.vue'import Records from './components/Records.vue'export default { name: 'AppIndex', components: { Modal, Records }}</script>and in App.vue import and render it<template> <AppIndex /></template><script>import AppIndex from './components/AppIndex.vue'export default { name: 'App', components: { AppIndex }}</script><style></style>modalWith single selection, upload data.Create ./components/Modal.vue<template> <div class=\"\"> <f-modal v-if=\"modalOpen\" > <template #close-button> <span class=\"close\" href=\"javascript:void(0)\" @click=\"closeModal\" > &times; </span> </template> <template #header > practice </template> <template #body> <div v-if=\"false\" class=\"\" > <div class=\"\" data-dismiss=\"alert\" > × </div> <h4>title</h4> <ul> <li v-bind=\"error\"> </li> </ul> </div> <b-row> <b-col md=\"4\"> <div class=\"\" > <div class=\"\"> <label class=\"\">file</label> </div> <input type=\"file\" id=\"file\" @change=\"handleFileUpload\" ref=\"file\"> </div> </b-col> </b-row> </template> <template #footer> <b-button class=\"\" :disabled=\"submitting\" @click=\"submit\" > submit </b-button> </template> </f-modal> </div></template><script></script><style></style>condition<template> <div> <p v-if=\"showMessage\">Hello, World!</p> <p v-else>Goodbye, World!</p> </div></template><script> export default { data() { return { showMessage: false } } }</script>listCRUDcreateotherindex.html create a basic template import vue with CDN create Vue app and add mount add v-model to dynamically change the text add v-if for box showing (if isVisible: true, then the div with v-if = isVisible will appear)<!DOCTYPE html><html><head> <title>Vue 3 Basic</title> <style> .box { background-color: purple; height: 200px; width: 200px; } </style></head><body> <div id=\"app\"> <input v-model = \"greeting\" /> <div v-if=\"isVisible\" class=\"box\"></div> </div> <script src=\"https://unpkg.com/vue@next\"></script> <script> let app = Vue.createApp({ data: function() { return { greeting: \"Hello World\", isVisible: true } } }) app.mount('#app') </script></body></html>v-showGiven above template, we can use <div v-show='isVisible' class=box></div> instead of <div v-if=\"isVisible\" class=\"box\"></div>, then in the inspection of your browser, it use style to determine whether to show it or not.v-if v-else-if v-elseFor some logics in rendering, use following <div>...<div v-if=\"isVisible\" class=\"box\"></div><div v-else-if=\"isVisible2\" class=\"box two\"></div><div v-else class=\"box three\"></div>...and of course, styles:....box { background-color: purple; height: 200px; width: 200px;}.box.two { background-color: red;}.box.three { background-color: blue;}...With the components above, refreshing the page makes all the boxes appear at first, meaning Vue is not ready at first. To avoid it, add v-clock to <div id=\"app\">.v-clockv-clock avoids components being rendered before Vue being loaded with following settings<div id=\"app\" v-clock>and<style> [v-cloak] { display: none; }</style>propertywatchIn Vue.js, the watch property is used to set up a reactive observer on a specific component property. It allows you to perform some actions in response to changes in a specific property, by specifying a callback function that will be executed whenever the property changes. The watch property is a convenient way to react to data changes in your component and carry out some logic in response to those changes.What?Then we have the full example as follow:<!DOCTYPE html><html><head> <title>Vue 3 Basic</title> <style> .box { background-color: purple; height: 200px; width: 200px; } .box.two { background-color: red; } .box.three { background-color: blue; } [v-cloak] { display: none; } </style></head><body> <div id=\"app\" v-cloak> <input v-model = \"greeting\" /> <div v-if=\"isVisible\" class=\"box\"></div> <div v-else-if=\"isVisible2\" class=\"box two\"></div> <div v-else class=\"box three\"></div> </div> <script src=\"https://unpkg.com/vue@next\"></script> <script> let app = Vue.createApp({ data: function() { return { greeting: \"Hello World\", isVisible: false } } }) app.mount('#app') </script></body></html>ReferenceVue.js Course for Beginners [2021 Tutorial] /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/vue/2021/12/30/overview.html"},{"id":157,"title":"Cross Origin Resource Sharing","content":" hljs.highlightAll(); About Me Cross Origin Resource Sharing IntroductionCORS prevents CSRF.Why?focus on why we need itHow?focus on the mechanimWhat?give an exampleReference /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/web-security/2022/08/31/cross-origin-resource-sharing.html"},{"id":158,"title":"Content Security Policy","content":" hljs.highlightAll(); About Me Content Security Policy IntroductionCSP can effectively prevent xss-attacks, mainly on frontend.Why?focus on why we need itHow?focus on the mechanimWhat?give an exampleReferenceContent Security Policy (CSP) /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/web-security/2022/08/31/content-security-policy.html"},{"id":159,"title":"Overview","content":" hljs.highlightAll(); About Me Overview IntroductionBy OWASP, the top 10 attack methods: Injection: Injection attacks occur when untrusted data is sent to an interpreter as part of a command or query. Broken Authentication and Session Management: This covers a range of security issues related to user authentication and session management, including weak passwords, session hijacking, and broken logout functionality. Cross-Site Scripting (XSS): XSS attacks allow an attacker to inject malicious code into a web page viewed by other users. Broken Access Control: This includes security issues related to controlling access to resources, such as unauthorized access to sensitive data or functionality. Security Misconfiguration: This covers a range of security issues related to misconfigured web servers, applications, and frameworks. Sensitive Data Exposure: This refers to the exposure of sensitive information, such as passwords, credit card numbers, and other personal data, through inadequate encryption or storage practices. Insufficient Logging and Monitoring: This covers a range of security issues related to the lack of proper logging and monitoring, which can make it difficult to detect and respond to security incidents. Cross-Site Request Forgery (CSRF): CSRF attacks trick a user into performing actions on a website without their knowledge or consent. Using Components with Known Vulnerabilities: This refers to the use of third-party components, such as libraries and frameworks, that have known security vulnerabilities. Insufficient Authorization and Authentication: This covers a range of security issues related to ensuring that users are properly authenticated and authorized to access sensitive data or functionality.Why?Prevent malwareHow?This section will explain the mechanisms of each attack so that we can have deeper understanding about how to solve it in what section.injection flawsinjection flaws: Attacks server side. Attacker injects SQL commands to a webpage through legal inputs and server runs it and get sick; for example, remove data stored in database.to be continuedcross site scripting (XSS)to be continued, going to show how to do XSSBroken Access Controlto be continuedSecurity Misconfigurationto be continuedSensitive Data Exposureto be continuedInsufficient Logging and Monitoringto be continuedCross Site Request Forgery (CSRF)CSRF is a type of attack that allows a malicious website to perform actions on behalf of a user who is logged into a different website. For example, an attacker could trick a user into clicking a link that submits a form to their bank’s website, transferring money to the attacker’s account. To prevent CSRF attacks, web applications often use a token that is attached to each form submission and checked on the server to ensure that the request is coming from the same site that generated the form.Attackers can hide malware in seeable places for logged-in users, who have sessions and is authenticated, to click it and then sent unwanted requests to server with the session in cookie.Solutions: Synchronizer Token Pattern: This method adds a unique token to each HTTP request, which the server then verifies before processing the request. Same-Site Cookies: This method sets the SameSite attribute of a cookie, which tells the browser to only send the cookie with requests made on the same website. Double Submit Cookies: This method adds a unique token to both the cookie and the form data, and then verifies that they match on the server. Recaptcha v3 Use of frameworks that have built-in CSRF protection mechanisms.Insufficient Authorization and Authenticationinsecure direct object reference: Attackers can get information by changing parameters sent to server. To solve it, we use session in cookie to store currently logged-in user and only response the data related to this user.What?XSSsolve it with CORSCORS helps to prevent cross-site scripting (XSS) attacks and provides a secure mechanism for sharing resources between different domains. Without CORS, a web application running on one domain would not be able to access resources or data on another domain, even if the user has authorized the request. This can limit the functionality and interoperability of web applications and prevent the sharing of data between sites.CSRFI want to use the concept of JWT because JWT check token on each request, which naturally prevent CSRF. However, it may encounter XSS because now the token is accessible on frontend. But react itself can prevent it.With the JWT design, we can disable CORS checks as follow in nodeapp.use(function (req, res, next) { // Website you wish to allow to connect res.setHeader('Access-Control-Allow-Origin', 'http://localhost:3000'); // Request methods you wish to allow res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS, PUT, PATCH, DELETE'); // Request headers you wish to allow res.setHeader('Access-Control-Allow-Headers', 'X-Requested-With,content-type'); // Set to true if you need the website to include cookies in the requests sent to the API (e.g. in case you use sessions) res.setHeader('Access-Control-Allow-Credentials', true); // Pass to next layer of middleware next();});ReferenceOWASP十大網路應用系統安全弱點說明SSL, TLS, HTTP, HTTPS ExplainedCross-Site Scripting (XSS) Explained2017 OWASP Top 10: Injection AttacksReact CSRF Protection Guide: Examples and How to Enable ItWith anonymous cookiesRegistration and Login with JWT Authentication Tutorial - NodeJS Tutorial /* Function for getting the current year in the footer */ (function () { if (document.getElementById(\"get-current-year\")) { document.getElementById( \"get-current-year\" ).innerHTML = new Date().getFullYear(); } })(); /* Function for opening navbar on mobile */ function toggleNavbar(collapseID) { document.getElementById(collapseID).classList.toggle(\"hidden\"); document.getElementById(collapseID).classList.toggle(\"block\"); } /* Function for dropdowns */ function openDropdown(event, dropdownID) { let element = event.target; while (element.nodeName !== \"A\") { element = element.parentNode; } document.getElementById(dropdownID).classList.toggle(\"hidden\"); document.getElementById(dropdownID).classList.toggle(\"block\"); } // Get the button let myButton = document.getElementById(\"btn-back-to-top\"); // When the user scrolls down 20px from the top of the document, show the button window.onscroll = function () { scrollFunction(); }; function scrollFunction() { if ( document.body.scrollTop > 20 || document.documentElement.scrollTop > 20 ) { myButton.style.display = \"block\"; } else { myButton.style.display = \"none\"; } } // When the user clicks on the button, scroll to the top of the document myButton.addEventListener(\"click\", backToTop); function backToTop() { document.body.scrollTop = 0; document.documentElement.scrollTop = 0; } ","url":"http://localhost:4000/blog/web-security/2022/08/30/overview.html"}]}